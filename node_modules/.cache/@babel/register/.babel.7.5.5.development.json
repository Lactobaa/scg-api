{
  "{\"sourceRoot\":\"/Users/lacto/workspace/test/src\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/lacto/workspace/test\",\"filename\":\"/Users/lacto/workspace/test/src/index.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/lacto/workspace/test\",\"plugins\":[],\"presets\":[]}:7.5.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/lacto/workspace/test/src",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/lacto/workspace/test",
      "filename": "/Users/lacto/workspace/test/src/index.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/lacto/workspace/test",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/lacto/workspace/test/src/index.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/Users/lacto/workspace/test/src/index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/lacto/workspace/test/src",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "import express from 'express'; // const express = require(\"express\");\n\nconst app = express();\napp.listen(3000, function () {\n  console.log(\"Listening on port 3000!\");\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbImV4cHJlc3MiLCJhcHAiLCJsaXN0ZW4iLCJjb25zb2xlIiwibG9nIl0sIm1hcHBpbmdzIjoiQUFBQSxPQUFPQSxPQUFQLE1BQW9CLFNBQXBCLEMsQ0FDQTs7QUFDQSxNQUFNQyxHQUFHLEdBQUdELE9BQU8sRUFBbkI7QUFDQUMsR0FBRyxDQUFDQyxNQUFKLENBQVcsSUFBWCxFQUFpQixZQUFVO0FBQ3pCQyxFQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWSx5QkFBWjtBQUNELENBRkQiLCJzb3VyY2VSb290IjoiL1VzZXJzL2xhY3RvL3dvcmtzcGFjZS90ZXN0L3NyYyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBleHByZXNzIGZyb20gJ2V4cHJlc3MnO1xuLy8gY29uc3QgZXhwcmVzcyA9IHJlcXVpcmUoXCJleHByZXNzXCIpO1xuY29uc3QgYXBwID0gZXhwcmVzcygpO1xuYXBwLmxpc3RlbigzMDAwLCBmdW5jdGlvbigpe1xuICBjb25zb2xlLmxvZyhcIkxpc3RlbmluZyBvbiBwb3J0IDMwMDAhXCIpXG59KTsiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "express",
        "app",
        "listen",
        "console",
        "log"
      ],
      "mappings": "AAAA,OAAOA,OAAP,MAAoB,SAApB,C,CACA;;AACA,MAAMC,GAAG,GAAGD,OAAO,EAAnB;AACAC,GAAG,CAACC,MAAJ,CAAW,IAAX,EAAiB,YAAU;AACzBC,EAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ;AACD,CAFD",
      "sourceRoot": "/Users/lacto/workspace/test/src",
      "sourcesContent": [
        "import express from 'express';\n// const express = require(\"express\");\nconst app = express();\napp.listen(3000, function(){\n  console.log(\"Listening on port 3000!\")\n});"
      ]
    },
    "sourceType": "module",
    "mtime": 1565952816493
  },
  "{\"sourceRoot\":\"/Users/lacto/workspace/test/src\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/lacto/workspace/test\",\"filename\":\"/Users/lacto/workspace/test/src/index.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/lacto/workspace/test\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/lacto/workspace/test/src",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/lacto/workspace/test",
      "filename": "/Users/lacto/workspace/test/src/index.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/lacto/workspace/test",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-object-rest-spread",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/lacto/workspace/test/src/index.js",
        "plugins": [
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/lacto/workspace/test/src/index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/lacto/workspace/test/src",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _googlemap = require(\"./googlemap.js\");\n\nvar _linebot = require(\"./linebot.js\");\n\nvar _dialogflow = require(\"./dialogflow.js\");\n\nvar _sequence = require(\"./sequence.js\");\n\nvar _bodyParser = _interopRequireDefault(require(\"body-parser\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst app = (0, _express.default)();\n\nconst jsonParser = _bodyParser.default.json({\n  limit: '25mb'\n});\n\nconst urlencode = _bodyParser.default.urlencoded({\n  extended: true\n});\n\nconst prefix = '/scg';\napp.use(`${prefix}/search`, _googlemap.router);\napp.use(`${prefix}/bot`, _linebot.router);\napp.use(`${prefix}/sequence`, _sequence.router);\napp.use(`${prefix}/dialogflow`, [jsonParser, urlencode], _dialogflow.router);\napp.use(([body, status], req, res, next) => {\n  res.status(status).json(body);\n});\napp.listen(3000, function () {\n  console.log(\"Listening on port 3000!\");\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbImFwcCIsImpzb25QYXJzZXIiLCJib2R5UGFyc2VyIiwianNvbiIsImxpbWl0IiwidXJsZW5jb2RlIiwidXJsZW5jb2RlZCIsImV4dGVuZGVkIiwicHJlZml4IiwidXNlIiwiZ29vZ2xlTWFwIiwibGluZUJvdCIsInNlcXVlbmNlIiwiZGlhbG9nZmxvdyIsImJvZHkiLCJzdGF0dXMiLCJyZXEiLCJyZXMiLCJuZXh0IiwibGlzdGVuIiwiY29uc29sZSIsImxvZyJdLCJtYXBwaW5ncyI6Ijs7QUFBQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7OztBQUNBLE1BQU1BLEdBQUcsR0FBRyx1QkFBWjs7QUFDQSxNQUFNQyxVQUFVLEdBQUdDLG9CQUFXQyxJQUFYLENBQWdCO0FBQUVDLEVBQUFBLEtBQUssRUFBRTtBQUFULENBQWhCLENBQW5COztBQUNBLE1BQU1DLFNBQVMsR0FBR0gsb0JBQVdJLFVBQVgsQ0FBc0I7QUFBRUMsRUFBQUEsUUFBUSxFQUFFO0FBQVosQ0FBdEIsQ0FBbEI7O0FBQ0EsTUFBTUMsTUFBTSxHQUFHLE1BQWY7QUFDQVIsR0FBRyxDQUFDUyxHQUFKLENBQVMsR0FBRUQsTUFBTyxTQUFsQixFQUE0QkUsaUJBQTVCO0FBQ0FWLEdBQUcsQ0FBQ1MsR0FBSixDQUFTLEdBQUVELE1BQU8sTUFBbEIsRUFBeUJHLGVBQXpCO0FBQ0FYLEdBQUcsQ0FBQ1MsR0FBSixDQUFTLEdBQUVELE1BQU8sV0FBbEIsRUFBOEJJLGdCQUE5QjtBQUNBWixHQUFHLENBQUNTLEdBQUosQ0FBUyxHQUFFRCxNQUFPLGFBQWxCLEVBQWdDLENBQUNQLFVBQUQsRUFBYUksU0FBYixDQUFoQyxFQUF5RFEsa0JBQXpEO0FBRUFiLEdBQUcsQ0FBQ1MsR0FBSixDQUFRLENBQUMsQ0FBQ0ssSUFBRCxFQUFPQyxNQUFQLENBQUQsRUFBaUJDLEdBQWpCLEVBQXNCQyxHQUF0QixFQUEyQkMsSUFBM0IsS0FBb0M7QUFDMUNELEVBQUFBLEdBQUcsQ0FBQ0YsTUFBSixDQUFXQSxNQUFYLEVBQW1CWixJQUFuQixDQUF3QlcsSUFBeEI7QUFDRCxDQUZEO0FBSUFkLEdBQUcsQ0FBQ21CLE1BQUosQ0FBVyxJQUFYLEVBQWlCLFlBQVk7QUFDM0JDLEVBQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZLHlCQUFaO0FBQ0QsQ0FGRCIsInNvdXJjZVJvb3QiOiIvVXNlcnMvbGFjdG8vd29ya3NwYWNlL3Rlc3Qvc3JjIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGV4cHJlc3MgZnJvbSAnZXhwcmVzcyc7XG5pbXBvcnQgeyByb3V0ZXIgYXMgZ29vZ2xlTWFwIH0gZnJvbSAnLi9nb29nbGVtYXAuanMnO1xuaW1wb3J0IHsgcm91dGVyIGFzIGxpbmVCb3QgfSBmcm9tICcuL2xpbmVib3QuanMnO1xuaW1wb3J0IHsgcm91dGVyIGFzIGRpYWxvZ2Zsb3cgfSBmcm9tICcuL2RpYWxvZ2Zsb3cuanMnO1xuaW1wb3J0IHsgcm91dGVyIGFzIHNlcXVlbmNlIH0gZnJvbSAnLi9zZXF1ZW5jZS5qcyc7XG5pbXBvcnQgYm9keVBhcnNlciBmcm9tICdib2R5LXBhcnNlcic7XG5jb25zdCBhcHAgPSBleHByZXNzKCk7XG5jb25zdCBqc29uUGFyc2VyID0gYm9keVBhcnNlci5qc29uKHsgbGltaXQ6ICcyNW1iJyB9KTtcbmNvbnN0IHVybGVuY29kZSA9IGJvZHlQYXJzZXIudXJsZW5jb2RlZCh7IGV4dGVuZGVkOiB0cnVlIH0pO1xuY29uc3QgcHJlZml4ID0gJy9zY2cnXG5hcHAudXNlKGAke3ByZWZpeH0vc2VhcmNoYCwgZ29vZ2xlTWFwKTtcbmFwcC51c2UoYCR7cHJlZml4fS9ib3RgLCBsaW5lQm90KTtcbmFwcC51c2UoYCR7cHJlZml4fS9zZXF1ZW5jZWAsIHNlcXVlbmNlKTtcbmFwcC51c2UoYCR7cHJlZml4fS9kaWFsb2dmbG93YCwgW2pzb25QYXJzZXIsIHVybGVuY29kZV0sIGRpYWxvZ2Zsb3cpO1xuXG5hcHAudXNlKChbYm9keSwgc3RhdHVzXSwgcmVxLCByZXMsIG5leHQpID0+IHtcbiAgcmVzLnN0YXR1cyhzdGF0dXMpLmpzb24oYm9keSk7XG59KTtcblxuYXBwLmxpc3RlbigzMDAwLCBmdW5jdGlvbiAoKSB7XG4gIGNvbnNvbGUubG9nKFwiTGlzdGVuaW5nIG9uIHBvcnQgMzAwMCFcIilcbn0pOyJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "app",
        "jsonParser",
        "bodyParser",
        "json",
        "limit",
        "urlencode",
        "urlencoded",
        "extended",
        "prefix",
        "use",
        "googleMap",
        "lineBot",
        "sequence",
        "dialogflow",
        "body",
        "status",
        "req",
        "res",
        "next",
        "listen",
        "console",
        "log"
      ],
      "mappings": ";;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;AACA,MAAMA,GAAG,GAAG,uBAAZ;;AACA,MAAMC,UAAU,GAAGC,oBAAWC,IAAX,CAAgB;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAAhB,CAAnB;;AACA,MAAMC,SAAS,GAAGH,oBAAWI,UAAX,CAAsB;AAAEC,EAAAA,QAAQ,EAAE;AAAZ,CAAtB,CAAlB;;AACA,MAAMC,MAAM,GAAG,MAAf;AACAR,GAAG,CAACS,GAAJ,CAAS,GAAED,MAAO,SAAlB,EAA4BE,iBAA5B;AACAV,GAAG,CAACS,GAAJ,CAAS,GAAED,MAAO,MAAlB,EAAyBG,eAAzB;AACAX,GAAG,CAACS,GAAJ,CAAS,GAAED,MAAO,WAAlB,EAA8BI,gBAA9B;AACAZ,GAAG,CAACS,GAAJ,CAAS,GAAED,MAAO,aAAlB,EAAgC,CAACP,UAAD,EAAaI,SAAb,CAAhC,EAAyDQ,kBAAzD;AAEAb,GAAG,CAACS,GAAJ,CAAQ,CAAC,CAACK,IAAD,EAAOC,MAAP,CAAD,EAAiBC,GAAjB,EAAsBC,GAAtB,EAA2BC,IAA3B,KAAoC;AAC1CD,EAAAA,GAAG,CAACF,MAAJ,CAAWA,MAAX,EAAmBZ,IAAnB,CAAwBW,IAAxB;AACD,CAFD;AAIAd,GAAG,CAACmB,MAAJ,CAAW,IAAX,EAAiB,YAAY;AAC3BC,EAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ;AACD,CAFD",
      "sourceRoot": "/Users/lacto/workspace/test/src",
      "sourcesContent": [
        "import express from 'express';\nimport { router as googleMap } from './googlemap.js';\nimport { router as lineBot } from './linebot.js';\nimport { router as dialogflow } from './dialogflow.js';\nimport { router as sequence } from './sequence.js';\nimport bodyParser from 'body-parser';\nconst app = express();\nconst jsonParser = bodyParser.json({ limit: '25mb' });\nconst urlencode = bodyParser.urlencoded({ extended: true });\nconst prefix = '/scg'\napp.use(`${prefix}/search`, googleMap);\napp.use(`${prefix}/bot`, lineBot);\napp.use(`${prefix}/sequence`, sequence);\napp.use(`${prefix}/dialogflow`, [jsonParser, urlencode], dialogflow);\n\napp.use(([body, status], req, res, next) => {\n  res.status(status).json(body);\n});\n\napp.listen(3000, function () {\n  console.log(\"Listening on port 3000!\")\n});"
      ]
    },
    "sourceType": "script",
    "mtime": 1567240586680
  },
  "{\"sourceRoot\":\"/Users/lacto/workspace/test/src\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/lacto/workspace/test\",\"filename\":\"/Users/lacto/workspace/test/src/http.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/lacto/workspace/test\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/lacto/workspace/test/src",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/lacto/workspace/test",
      "filename": "/Users/lacto/workspace/test/src/http.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/lacto/workspace/test",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-object-rest-spread",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/lacto/workspace/test/src/http.js",
        "plugins": [
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/lacto/workspace/test/src/http.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/lacto/workspace/test/src",
        "sourceFileName": "http.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = exports.http = exports.Http = void 0;\n\nvar request = _interopRequireWildcard(require(\"then-request\"));\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }\n\nclass Http {\n  setAuthorization(options) {\n    if (!options.headers) options.headers = {}; // options.headers['Authorization'] = `Bearer ${config.api.token}`;\n    // options.json = {};\n\n    return options;\n  }\n\n  parseBody(response) {\n    response.body = JSON.parse(response.body);\n    return response;\n  }\n\n  async get(url, options = {}) {\n    options = this.setAuthorization(options);\n    let response = await request.default('GET', url, options);\n    return this.parseBody(response);\n  }\n\n  async post(url, options = {\n    json: {}\n  }) {\n    options = this.setAuthorization(options);\n    let response = await request.default('POST', url, options);\n    return this.parseBody(response);\n  }\n\n  async postManual(url, options = {\n    json: {}\n  }) {\n    let response = await request.default('POST', url, options);\n    return this.parseBody(response);\n  }\n\n  async delete(url, options = {}) {\n    options = this.setAuthorization(options);\n    let response = await request.default('DELETE', url, options);\n    return this.parseBody(response);\n  }\n\n}\n\nexports.Http = Http;\nconst http = new Http();\nexports.http = http;\nvar _default = http;\nexports.default = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImh0dHAuanMiXSwibmFtZXMiOlsiSHR0cCIsInNldEF1dGhvcml6YXRpb24iLCJvcHRpb25zIiwiaGVhZGVycyIsInBhcnNlQm9keSIsInJlc3BvbnNlIiwiYm9keSIsIkpTT04iLCJwYXJzZSIsImdldCIsInVybCIsInJlcXVlc3QiLCJkZWZhdWx0IiwicG9zdCIsImpzb24iLCJwb3N0TWFudWFsIiwiZGVsZXRlIiwiaHR0cCJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOzs7O0FBRU8sTUFBTUEsSUFBTixDQUFXO0FBQ2hCQyxFQUFBQSxnQkFBZ0IsQ0FBQ0MsT0FBRCxFQUFVO0FBQ3hCLFFBQUksQ0FBQ0EsT0FBTyxDQUFDQyxPQUFiLEVBQXNCRCxPQUFPLENBQUNDLE9BQVIsR0FBa0IsRUFBbEIsQ0FERSxDQUV4QjtBQUNBOztBQUNBLFdBQU9ELE9BQVA7QUFDRDs7QUFFREUsRUFBQUEsU0FBUyxDQUFDQyxRQUFELEVBQVc7QUFDbEJBLElBQUFBLFFBQVEsQ0FBQ0MsSUFBVCxHQUFnQkMsSUFBSSxDQUFDQyxLQUFMLENBQVdILFFBQVEsQ0FBQ0MsSUFBcEIsQ0FBaEI7QUFDQSxXQUFPRCxRQUFQO0FBQ0Q7O0FBRUQsUUFBTUksR0FBTixDQUFVQyxHQUFWLEVBQWVSLE9BQU8sR0FBRyxFQUF6QixFQUE2QjtBQUMzQkEsSUFBQUEsT0FBTyxHQUFHLEtBQUtELGdCQUFMLENBQXNCQyxPQUF0QixDQUFWO0FBQ0EsUUFBSUcsUUFBUSxHQUFHLE1BQU1NLE9BQU8sQ0FBQ0MsT0FBUixDQUFnQixLQUFoQixFQUF1QkYsR0FBdkIsRUFBNEJSLE9BQTVCLENBQXJCO0FBQ0EsV0FBTyxLQUFLRSxTQUFMLENBQWVDLFFBQWYsQ0FBUDtBQUNEOztBQUVELFFBQU1RLElBQU4sQ0FBV0gsR0FBWCxFQUFnQlIsT0FBTyxHQUFHO0FBQUVZLElBQUFBLElBQUksRUFBRTtBQUFSLEdBQTFCLEVBQXdDO0FBQ3RDWixJQUFBQSxPQUFPLEdBQUcsS0FBS0QsZ0JBQUwsQ0FBc0JDLE9BQXRCLENBQVY7QUFFQSxRQUFJRyxRQUFRLEdBQUcsTUFBTU0sT0FBTyxDQUFDQyxPQUFSLENBQWdCLE1BQWhCLEVBQXdCRixHQUF4QixFQUE2QlIsT0FBN0IsQ0FBckI7QUFDQSxXQUFPLEtBQUtFLFNBQUwsQ0FBZUMsUUFBZixDQUFQO0FBQ0Q7O0FBRUQsUUFBTVUsVUFBTixDQUFpQkwsR0FBakIsRUFBc0JSLE9BQU8sR0FBRztBQUFFWSxJQUFBQSxJQUFJLEVBQUU7QUFBUixHQUFoQyxFQUE4QztBQUM1QyxRQUFJVCxRQUFRLEdBQUcsTUFBTU0sT0FBTyxDQUFDQyxPQUFSLENBQWdCLE1BQWhCLEVBQXdCRixHQUF4QixFQUE2QlIsT0FBN0IsQ0FBckI7QUFDQSxXQUFPLEtBQUtFLFNBQUwsQ0FBZUMsUUFBZixDQUFQO0FBQ0Q7O0FBRUQsUUFBTVcsTUFBTixDQUFhTixHQUFiLEVBQWtCUixPQUFPLEdBQUcsRUFBNUIsRUFBZ0M7QUFDOUJBLElBQUFBLE9BQU8sR0FBRyxLQUFLRCxnQkFBTCxDQUFzQkMsT0FBdEIsQ0FBVjtBQUNBLFFBQUlHLFFBQVEsR0FBRyxNQUFNTSxPQUFPLENBQUNDLE9BQVIsQ0FBZ0IsUUFBaEIsRUFBMEJGLEdBQTFCLEVBQStCUixPQUEvQixDQUFyQjtBQUNBLFdBQU8sS0FBS0UsU0FBTCxDQUFlQyxRQUFmLENBQVA7QUFDRDs7QUFuQ2U7OztBQXNDWCxNQUFNWSxJQUFJLEdBQUcsSUFBSWpCLElBQUosRUFBYjs7ZUFDUWlCLEkiLCJzb3VyY2VSb290IjoiL1VzZXJzL2xhY3RvL3dvcmtzcGFjZS90ZXN0L3NyYyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAqIGFzIHJlcXVlc3QgZnJvbSAndGhlbi1yZXF1ZXN0JztcblxuZXhwb3J0IGNsYXNzIEh0dHAge1xuICBzZXRBdXRob3JpemF0aW9uKG9wdGlvbnMpIHtcbiAgICBpZiAoIW9wdGlvbnMuaGVhZGVycykgb3B0aW9ucy5oZWFkZXJzID0ge307XG4gICAgLy8gb3B0aW9ucy5oZWFkZXJzWydBdXRob3JpemF0aW9uJ10gPSBgQmVhcmVyICR7Y29uZmlnLmFwaS50b2tlbn1gO1xuICAgIC8vIG9wdGlvbnMuanNvbiA9IHt9O1xuICAgIHJldHVybiBvcHRpb25zO1xuICB9XG5cbiAgcGFyc2VCb2R5KHJlc3BvbnNlKSB7XG4gICAgcmVzcG9uc2UuYm9keSA9IEpTT04ucGFyc2UocmVzcG9uc2UuYm9keSk7XG4gICAgcmV0dXJuIHJlc3BvbnNlO1xuICB9XG5cbiAgYXN5bmMgZ2V0KHVybCwgb3B0aW9ucyA9IHt9KSB7XG4gICAgb3B0aW9ucyA9IHRoaXMuc2V0QXV0aG9yaXphdGlvbihvcHRpb25zKTtcbiAgICBsZXQgcmVzcG9uc2UgPSBhd2FpdCByZXF1ZXN0LmRlZmF1bHQoJ0dFVCcsIHVybCwgb3B0aW9ucyk7XG4gICAgcmV0dXJuIHRoaXMucGFyc2VCb2R5KHJlc3BvbnNlKTtcbiAgfVxuXG4gIGFzeW5jIHBvc3QodXJsLCBvcHRpb25zID0geyBqc29uOiB7fSB9KSB7XG4gICAgb3B0aW9ucyA9IHRoaXMuc2V0QXV0aG9yaXphdGlvbihvcHRpb25zKTtcblxuICAgIGxldCByZXNwb25zZSA9IGF3YWl0IHJlcXVlc3QuZGVmYXVsdCgnUE9TVCcsIHVybCwgb3B0aW9ucyk7XG4gICAgcmV0dXJuIHRoaXMucGFyc2VCb2R5KHJlc3BvbnNlKTtcbiAgfVxuXG4gIGFzeW5jIHBvc3RNYW51YWwodXJsLCBvcHRpb25zID0geyBqc29uOiB7fSB9KSB7XG4gICAgbGV0IHJlc3BvbnNlID0gYXdhaXQgcmVxdWVzdC5kZWZhdWx0KCdQT1NUJywgdXJsLCBvcHRpb25zKTtcbiAgICByZXR1cm4gdGhpcy5wYXJzZUJvZHkocmVzcG9uc2UpO1xuICB9XG5cbiAgYXN5bmMgZGVsZXRlKHVybCwgb3B0aW9ucyA9IHt9KSB7XG4gICAgb3B0aW9ucyA9IHRoaXMuc2V0QXV0aG9yaXphdGlvbihvcHRpb25zKTtcbiAgICBsZXQgcmVzcG9uc2UgPSBhd2FpdCByZXF1ZXN0LmRlZmF1bHQoJ0RFTEVURScsIHVybCwgb3B0aW9ucyk7XG4gICAgcmV0dXJuIHRoaXMucGFyc2VCb2R5KHJlc3BvbnNlKTtcbiAgfVxufVxuXG5leHBvcnQgY29uc3QgaHR0cCA9IG5ldyBIdHRwKCk7XG5leHBvcnQgZGVmYXVsdCBodHRwO1xuIl19",
    "map": {
      "version": 3,
      "sources": [
        "http.js"
      ],
      "names": [
        "Http",
        "setAuthorization",
        "options",
        "headers",
        "parseBody",
        "response",
        "body",
        "JSON",
        "parse",
        "get",
        "url",
        "request",
        "default",
        "post",
        "json",
        "postManual",
        "delete",
        "http"
      ],
      "mappings": ";;;;;;;AAAA;;;;AAEO,MAAMA,IAAN,CAAW;AAChBC,EAAAA,gBAAgB,CAACC,OAAD,EAAU;AACxB,QAAI,CAACA,OAAO,CAACC,OAAb,EAAsBD,OAAO,CAACC,OAAR,GAAkB,EAAlB,CADE,CAExB;AACA;;AACA,WAAOD,OAAP;AACD;;AAEDE,EAAAA,SAAS,CAACC,QAAD,EAAW;AAClBA,IAAAA,QAAQ,CAACC,IAAT,GAAgBC,IAAI,CAACC,KAAL,CAAWH,QAAQ,CAACC,IAApB,CAAhB;AACA,WAAOD,QAAP;AACD;;AAED,QAAMI,GAAN,CAAUC,GAAV,EAAeR,OAAO,GAAG,EAAzB,EAA6B;AAC3BA,IAAAA,OAAO,GAAG,KAAKD,gBAAL,CAAsBC,OAAtB,CAAV;AACA,QAAIG,QAAQ,GAAG,MAAMM,OAAO,CAACC,OAAR,CAAgB,KAAhB,EAAuBF,GAAvB,EAA4BR,OAA5B,CAArB;AACA,WAAO,KAAKE,SAAL,CAAeC,QAAf,CAAP;AACD;;AAED,QAAMQ,IAAN,CAAWH,GAAX,EAAgBR,OAAO,GAAG;AAAEY,IAAAA,IAAI,EAAE;AAAR,GAA1B,EAAwC;AACtCZ,IAAAA,OAAO,GAAG,KAAKD,gBAAL,CAAsBC,OAAtB,CAAV;AAEA,QAAIG,QAAQ,GAAG,MAAMM,OAAO,CAACC,OAAR,CAAgB,MAAhB,EAAwBF,GAAxB,EAA6BR,OAA7B,CAArB;AACA,WAAO,KAAKE,SAAL,CAAeC,QAAf,CAAP;AACD;;AAED,QAAMU,UAAN,CAAiBL,GAAjB,EAAsBR,OAAO,GAAG;AAAEY,IAAAA,IAAI,EAAE;AAAR,GAAhC,EAA8C;AAC5C,QAAIT,QAAQ,GAAG,MAAMM,OAAO,CAACC,OAAR,CAAgB,MAAhB,EAAwBF,GAAxB,EAA6BR,OAA7B,CAArB;AACA,WAAO,KAAKE,SAAL,CAAeC,QAAf,CAAP;AACD;;AAED,QAAMW,MAAN,CAAaN,GAAb,EAAkBR,OAAO,GAAG,EAA5B,EAAgC;AAC9BA,IAAAA,OAAO,GAAG,KAAKD,gBAAL,CAAsBC,OAAtB,CAAV;AACA,QAAIG,QAAQ,GAAG,MAAMM,OAAO,CAACC,OAAR,CAAgB,QAAhB,EAA0BF,GAA1B,EAA+BR,OAA/B,CAArB;AACA,WAAO,KAAKE,SAAL,CAAeC,QAAf,CAAP;AACD;;AAnCe;;;AAsCX,MAAMY,IAAI,GAAG,IAAIjB,IAAJ,EAAb;;eACQiB,I",
      "sourceRoot": "/Users/lacto/workspace/test/src",
      "sourcesContent": [
        "import * as request from 'then-request';\n\nexport class Http {\n  setAuthorization(options) {\n    if (!options.headers) options.headers = {};\n    // options.headers['Authorization'] = `Bearer ${config.api.token}`;\n    // options.json = {};\n    return options;\n  }\n\n  parseBody(response) {\n    response.body = JSON.parse(response.body);\n    return response;\n  }\n\n  async get(url, options = {}) {\n    options = this.setAuthorization(options);\n    let response = await request.default('GET', url, options);\n    return this.parseBody(response);\n  }\n\n  async post(url, options = { json: {} }) {\n    options = this.setAuthorization(options);\n\n    let response = await request.default('POST', url, options);\n    return this.parseBody(response);\n  }\n\n  async postManual(url, options = { json: {} }) {\n    let response = await request.default('POST', url, options);\n    return this.parseBody(response);\n  }\n\n  async delete(url, options = {}) {\n    options = this.setAuthorization(options);\n    let response = await request.default('DELETE', url, options);\n    return this.parseBody(response);\n  }\n}\n\nexport const http = new Http();\nexport default http;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1566380643984
  },
  "{\"sourceRoot\":\"/Users/lacto/workspace/test/src\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/lacto/workspace/test\",\"filename\":\"/Users/lacto/workspace/test/src/http.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/lacto/workspace/test\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/lacto/workspace/test/src",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/lacto/workspace/test",
      "filename": "/Users/lacto/workspace/test/src/http.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/lacto/workspace/test",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-object-rest-spread",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/lacto/workspace/test/src/http.js",
        "plugins": [
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/lacto/workspace/test/src/http.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/lacto/workspace/test/src",
        "sourceFileName": "http.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = exports.http = exports.Http = void 0;\n\nvar request = _interopRequireWildcard(require(\"then-request\"));\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }\n\nclass Http {\n  setAuthorization(options) {\n    if (!options.headers) options.headers = {}; // options.headers['Authorization'] = `Bearer ${config.api.token}`;\n    // options.json = {};\n\n    return options;\n  }\n\n  parseBody(response) {\n    response.body = JSON.parse(response.body);\n    return response;\n  }\n\n  async get(url, options = {}) {\n    options = this.setAuthorization(options);\n    let response = await request.default('GET', url, options);\n    return this.parseBody(response);\n  }\n\n  async post(url, options = {\n    json: {}\n  }) {\n    options = this.setAuthorization(options);\n    let response = await request.default('POST', url, options);\n    return this.parseBody(response);\n  }\n\n  async postManual(url, options = {\n    json: {}\n  }) {\n    let response = await request.default('POST', url, options);\n    return this.parseBody(response);\n  }\n\n  async delete(url, options = {}) {\n    options = this.setAuthorization(options);\n    let response = await request.default('DELETE', url, options);\n    return this.parseBody(response);\n  }\n\n}\n\nexports.Http = Http;\nconst http = new Http();\nexports.http = http;\nvar _default = http;\nexports.default = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImh0dHAuanMiXSwibmFtZXMiOlsiSHR0cCIsInNldEF1dGhvcml6YXRpb24iLCJvcHRpb25zIiwiaGVhZGVycyIsInBhcnNlQm9keSIsInJlc3BvbnNlIiwiYm9keSIsIkpTT04iLCJwYXJzZSIsImdldCIsInVybCIsInJlcXVlc3QiLCJkZWZhdWx0IiwicG9zdCIsImpzb24iLCJwb3N0TWFudWFsIiwiZGVsZXRlIiwiaHR0cCJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOzs7O0FBRU8sTUFBTUEsSUFBTixDQUFXO0FBQ2hCQyxFQUFBQSxnQkFBZ0IsQ0FBQ0MsT0FBRCxFQUFVO0FBQ3hCLFFBQUksQ0FBQ0EsT0FBTyxDQUFDQyxPQUFiLEVBQXNCRCxPQUFPLENBQUNDLE9BQVIsR0FBa0IsRUFBbEIsQ0FERSxDQUV4QjtBQUNBOztBQUNBLFdBQU9ELE9BQVA7QUFDRDs7QUFFREUsRUFBQUEsU0FBUyxDQUFDQyxRQUFELEVBQVc7QUFDbEJBLElBQUFBLFFBQVEsQ0FBQ0MsSUFBVCxHQUFnQkMsSUFBSSxDQUFDQyxLQUFMLENBQVdILFFBQVEsQ0FBQ0MsSUFBcEIsQ0FBaEI7QUFDQSxXQUFPRCxRQUFQO0FBQ0Q7O0FBRUQsUUFBTUksR0FBTixDQUFVQyxHQUFWLEVBQWVSLE9BQU8sR0FBRyxFQUF6QixFQUE2QjtBQUMzQkEsSUFBQUEsT0FBTyxHQUFHLEtBQUtELGdCQUFMLENBQXNCQyxPQUF0QixDQUFWO0FBQ0EsUUFBSUcsUUFBUSxHQUFHLE1BQU1NLE9BQU8sQ0FBQ0MsT0FBUixDQUFnQixLQUFoQixFQUF1QkYsR0FBdkIsRUFBNEJSLE9BQTVCLENBQXJCO0FBQ0EsV0FBTyxLQUFLRSxTQUFMLENBQWVDLFFBQWYsQ0FBUDtBQUNEOztBQUVELFFBQU1RLElBQU4sQ0FBV0gsR0FBWCxFQUFnQlIsT0FBTyxHQUFHO0FBQUVZLElBQUFBLElBQUksRUFBRTtBQUFSLEdBQTFCLEVBQXdDO0FBQ3RDWixJQUFBQSxPQUFPLEdBQUcsS0FBS0QsZ0JBQUwsQ0FBc0JDLE9BQXRCLENBQVY7QUFFQSxRQUFJRyxRQUFRLEdBQUcsTUFBTU0sT0FBTyxDQUFDQyxPQUFSLENBQWdCLE1BQWhCLEVBQXdCRixHQUF4QixFQUE2QlIsT0FBN0IsQ0FBckI7QUFDQSxXQUFPLEtBQUtFLFNBQUwsQ0FBZUMsUUFBZixDQUFQO0FBQ0Q7O0FBRUQsUUFBTVUsVUFBTixDQUFpQkwsR0FBakIsRUFBc0JSLE9BQU8sR0FBRztBQUFFWSxJQUFBQSxJQUFJLEVBQUU7QUFBUixHQUFoQyxFQUE4QztBQUM1QyxRQUFJVCxRQUFRLEdBQUcsTUFBTU0sT0FBTyxDQUFDQyxPQUFSLENBQWdCLE1BQWhCLEVBQXdCRixHQUF4QixFQUE2QlIsT0FBN0IsQ0FBckI7QUFDQSxXQUFPLEtBQUtFLFNBQUwsQ0FBZUMsUUFBZixDQUFQO0FBQ0Q7O0FBRUQsUUFBTVcsTUFBTixDQUFhTixHQUFiLEVBQWtCUixPQUFPLEdBQUcsRUFBNUIsRUFBZ0M7QUFDOUJBLElBQUFBLE9BQU8sR0FBRyxLQUFLRCxnQkFBTCxDQUFzQkMsT0FBdEIsQ0FBVjtBQUNBLFFBQUlHLFFBQVEsR0FBRyxNQUFNTSxPQUFPLENBQUNDLE9BQVIsQ0FBZ0IsUUFBaEIsRUFBMEJGLEdBQTFCLEVBQStCUixPQUEvQixDQUFyQjtBQUNBLFdBQU8sS0FBS0UsU0FBTCxDQUFlQyxRQUFmLENBQVA7QUFDRDs7QUFuQ2U7OztBQXNDWCxNQUFNWSxJQUFJLEdBQUcsSUFBSWpCLElBQUosRUFBYjs7ZUFDUWlCLEkiLCJzb3VyY2VSb290IjoiL1VzZXJzL2xhY3RvL3dvcmtzcGFjZS90ZXN0L3NyYyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAqIGFzIHJlcXVlc3QgZnJvbSAndGhlbi1yZXF1ZXN0JztcblxuZXhwb3J0IGNsYXNzIEh0dHAge1xuICBzZXRBdXRob3JpemF0aW9uKG9wdGlvbnMpIHtcbiAgICBpZiAoIW9wdGlvbnMuaGVhZGVycykgb3B0aW9ucy5oZWFkZXJzID0ge307XG4gICAgLy8gb3B0aW9ucy5oZWFkZXJzWydBdXRob3JpemF0aW9uJ10gPSBgQmVhcmVyICR7Y29uZmlnLmFwaS50b2tlbn1gO1xuICAgIC8vIG9wdGlvbnMuanNvbiA9IHt9O1xuICAgIHJldHVybiBvcHRpb25zO1xuICB9XG5cbiAgcGFyc2VCb2R5KHJlc3BvbnNlKSB7XG4gICAgcmVzcG9uc2UuYm9keSA9IEpTT04ucGFyc2UocmVzcG9uc2UuYm9keSk7XG4gICAgcmV0dXJuIHJlc3BvbnNlO1xuICB9XG5cbiAgYXN5bmMgZ2V0KHVybCwgb3B0aW9ucyA9IHt9KSB7XG4gICAgb3B0aW9ucyA9IHRoaXMuc2V0QXV0aG9yaXphdGlvbihvcHRpb25zKTtcbiAgICBsZXQgcmVzcG9uc2UgPSBhd2FpdCByZXF1ZXN0LmRlZmF1bHQoJ0dFVCcsIHVybCwgb3B0aW9ucyk7XG4gICAgcmV0dXJuIHRoaXMucGFyc2VCb2R5KHJlc3BvbnNlKTtcbiAgfVxuXG4gIGFzeW5jIHBvc3QodXJsLCBvcHRpb25zID0geyBqc29uOiB7fSB9KSB7XG4gICAgb3B0aW9ucyA9IHRoaXMuc2V0QXV0aG9yaXphdGlvbihvcHRpb25zKTtcblxuICAgIGxldCByZXNwb25zZSA9IGF3YWl0IHJlcXVlc3QuZGVmYXVsdCgnUE9TVCcsIHVybCwgb3B0aW9ucyk7XG4gICAgcmV0dXJuIHRoaXMucGFyc2VCb2R5KHJlc3BvbnNlKTtcbiAgfVxuXG4gIGFzeW5jIHBvc3RNYW51YWwodXJsLCBvcHRpb25zID0geyBqc29uOiB7fSB9KSB7XG4gICAgbGV0IHJlc3BvbnNlID0gYXdhaXQgcmVxdWVzdC5kZWZhdWx0KCdQT1NUJywgdXJsLCBvcHRpb25zKTtcbiAgICByZXR1cm4gdGhpcy5wYXJzZUJvZHkocmVzcG9uc2UpO1xuICB9XG5cbiAgYXN5bmMgZGVsZXRlKHVybCwgb3B0aW9ucyA9IHt9KSB7XG4gICAgb3B0aW9ucyA9IHRoaXMuc2V0QXV0aG9yaXphdGlvbihvcHRpb25zKTtcbiAgICBsZXQgcmVzcG9uc2UgPSBhd2FpdCByZXF1ZXN0LmRlZmF1bHQoJ0RFTEVURScsIHVybCwgb3B0aW9ucyk7XG4gICAgcmV0dXJuIHRoaXMucGFyc2VCb2R5KHJlc3BvbnNlKTtcbiAgfVxufVxuXG5leHBvcnQgY29uc3QgaHR0cCA9IG5ldyBIdHRwKCk7XG5leHBvcnQgZGVmYXVsdCBodHRwO1xuIl19",
    "map": {
      "version": 3,
      "sources": [
        "http.js"
      ],
      "names": [
        "Http",
        "setAuthorization",
        "options",
        "headers",
        "parseBody",
        "response",
        "body",
        "JSON",
        "parse",
        "get",
        "url",
        "request",
        "default",
        "post",
        "json",
        "postManual",
        "delete",
        "http"
      ],
      "mappings": ";;;;;;;AAAA;;;;AAEO,MAAMA,IAAN,CAAW;AAChBC,EAAAA,gBAAgB,CAACC,OAAD,EAAU;AACxB,QAAI,CAACA,OAAO,CAACC,OAAb,EAAsBD,OAAO,CAACC,OAAR,GAAkB,EAAlB,CADE,CAExB;AACA;;AACA,WAAOD,OAAP;AACD;;AAEDE,EAAAA,SAAS,CAACC,QAAD,EAAW;AAClBA,IAAAA,QAAQ,CAACC,IAAT,GAAgBC,IAAI,CAACC,KAAL,CAAWH,QAAQ,CAACC,IAApB,CAAhB;AACA,WAAOD,QAAP;AACD;;AAED,QAAMI,GAAN,CAAUC,GAAV,EAAeR,OAAO,GAAG,EAAzB,EAA6B;AAC3BA,IAAAA,OAAO,GAAG,KAAKD,gBAAL,CAAsBC,OAAtB,CAAV;AACA,QAAIG,QAAQ,GAAG,MAAMM,OAAO,CAACC,OAAR,CAAgB,KAAhB,EAAuBF,GAAvB,EAA4BR,OAA5B,CAArB;AACA,WAAO,KAAKE,SAAL,CAAeC,QAAf,CAAP;AACD;;AAED,QAAMQ,IAAN,CAAWH,GAAX,EAAgBR,OAAO,GAAG;AAAEY,IAAAA,IAAI,EAAE;AAAR,GAA1B,EAAwC;AACtCZ,IAAAA,OAAO,GAAG,KAAKD,gBAAL,CAAsBC,OAAtB,CAAV;AAEA,QAAIG,QAAQ,GAAG,MAAMM,OAAO,CAACC,OAAR,CAAgB,MAAhB,EAAwBF,GAAxB,EAA6BR,OAA7B,CAArB;AACA,WAAO,KAAKE,SAAL,CAAeC,QAAf,CAAP;AACD;;AAED,QAAMU,UAAN,CAAiBL,GAAjB,EAAsBR,OAAO,GAAG;AAAEY,IAAAA,IAAI,EAAE;AAAR,GAAhC,EAA8C;AAC5C,QAAIT,QAAQ,GAAG,MAAMM,OAAO,CAACC,OAAR,CAAgB,MAAhB,EAAwBF,GAAxB,EAA6BR,OAA7B,CAArB;AACA,WAAO,KAAKE,SAAL,CAAeC,QAAf,CAAP;AACD;;AAED,QAAMW,MAAN,CAAaN,GAAb,EAAkBR,OAAO,GAAG,EAA5B,EAAgC;AAC9BA,IAAAA,OAAO,GAAG,KAAKD,gBAAL,CAAsBC,OAAtB,CAAV;AACA,QAAIG,QAAQ,GAAG,MAAMM,OAAO,CAACC,OAAR,CAAgB,QAAhB,EAA0BF,GAA1B,EAA+BR,OAA/B,CAArB;AACA,WAAO,KAAKE,SAAL,CAAeC,QAAf,CAAP;AACD;;AAnCe;;;AAsCX,MAAMY,IAAI,GAAG,IAAIjB,IAAJ,EAAb;;eACQiB,I",
      "sourceRoot": "/Users/lacto/workspace/test/src",
      "sourcesContent": [
        "import * as request from 'then-request';\n\nexport class Http {\n  setAuthorization(options) {\n    if (!options.headers) options.headers = {};\n    // options.headers['Authorization'] = `Bearer ${config.api.token}`;\n    // options.json = {};\n    return options;\n  }\n\n  parseBody(response) {\n    response.body = JSON.parse(response.body);\n    return response;\n  }\n\n  async get(url, options = {}) {\n    options = this.setAuthorization(options);\n    let response = await request.default('GET', url, options);\n    return this.parseBody(response);\n  }\n\n  async post(url, options = { json: {} }) {\n    options = this.setAuthorization(options);\n\n    let response = await request.default('POST', url, options);\n    return this.parseBody(response);\n  }\n\n  async postManual(url, options = { json: {} }) {\n    let response = await request.default('POST', url, options);\n    return this.parseBody(response);\n  }\n\n  async delete(url, options = {}) {\n    options = this.setAuthorization(options);\n    let response = await request.default('DELETE', url, options);\n    return this.parseBody(response);\n  }\n}\n\nexport const http = new Http();\nexport default http;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1566380643984
  },
  "{\"sourceRoot\":\"/Users/lacto/workspace/test/src\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/lacto/workspace/test\",\"filename\":\"/Users/lacto/workspace/test/src/googlemap.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/lacto/workspace/test\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/lacto/workspace/test/src",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/lacto/workspace/test",
      "filename": "/Users/lacto/workspace/test/src/googlemap.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/lacto/workspace/test",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-object-rest-spread",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/lacto/workspace/test/src/googlemap.js",
        "plugins": [
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/lacto/workspace/test/src/googlemap.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/lacto/workspace/test/src",
        "sourceFileName": "googlemap.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getSearch = getSearch;\nexports.router = void 0;\n\nvar _http = require(\"./http.js\");\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nasync function getSearch(req, res, next) {\n  try {\n    const {\n      params\n    } = req;\n    const googleApiUrl = `https://maps.googleapis.com/maps/api/place/textsearch/json?query=restaurants+in+${params.area}&key=AIzaSyB9rJC8alNU5ijowpiazLwYyT6QtLJo7kU`;\n    const response = await _http.http.get(googleApiUrl);\n\n    if (response && response.statusCode === 200) {\n      const results = response.body.results;\n      next([{\n        body: results\n      }, response.statusCode]);\n    } else {\n      next([{\n        message: status\n      }, response.statusCode]);\n    }\n  } catch (err) {\n    next({\n      message: err.message\n    }, 400);\n  }\n}\n\nconst router = _express.default.Router();\n\nexports.router = router;\nrouter.get('/restaurants/:area', getSearch);\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImdvb2dsZW1hcC5qcyJdLCJuYW1lcyI6WyJnZXRTZWFyY2giLCJyZXEiLCJyZXMiLCJuZXh0IiwicGFyYW1zIiwiZ29vZ2xlQXBpVXJsIiwiYXJlYSIsInJlc3BvbnNlIiwiaHR0cCIsImdldCIsInN0YXR1c0NvZGUiLCJyZXN1bHRzIiwiYm9keSIsIm1lc3NhZ2UiLCJzdGF0dXMiLCJlcnIiLCJyb3V0ZXIiLCJleHByZXNzIiwiUm91dGVyIl0sIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUNBOztBQUNBOzs7O0FBRU8sZUFBZUEsU0FBZixDQUF5QkMsR0FBekIsRUFBOEJDLEdBQTlCLEVBQW1DQyxJQUFuQyxFQUF5QztBQUM5QyxNQUFJO0FBQ0YsVUFBTTtBQUFFQyxNQUFBQTtBQUFGLFFBQWFILEdBQW5CO0FBQ0EsVUFBTUksWUFBWSxHQUFJLG1GQUFrRkQsTUFBTSxDQUFDRSxJQUFLLDhDQUFwSDtBQUNBLFVBQU1DLFFBQVEsR0FBRyxNQUFNQyxXQUFLQyxHQUFMLENBQVNKLFlBQVQsQ0FBdkI7O0FBQ0EsUUFBSUUsUUFBUSxJQUFJQSxRQUFRLENBQUNHLFVBQVQsS0FBd0IsR0FBeEMsRUFBNkM7QUFDM0MsWUFBTUMsT0FBTyxHQUFHSixRQUFRLENBQUNLLElBQVQsQ0FBY0QsT0FBOUI7QUFDQVIsTUFBQUEsSUFBSSxDQUFDLENBQUM7QUFBRVMsUUFBQUEsSUFBSSxFQUFFRDtBQUFSLE9BQUQsRUFBb0JKLFFBQVEsQ0FBQ0csVUFBN0IsQ0FBRCxDQUFKO0FBQ0QsS0FIRCxNQUdPO0FBQ0xQLE1BQUFBLElBQUksQ0FBQyxDQUFDO0FBQUVVLFFBQUFBLE9BQU8sRUFBRUM7QUFBWCxPQUFELEVBQXNCUCxRQUFRLENBQUNHLFVBQS9CLENBQUQsQ0FBSjtBQUNEO0FBQ0YsR0FWRCxDQVVFLE9BQU9LLEdBQVAsRUFBWTtBQUNaWixJQUFBQSxJQUFJLENBQUM7QUFBRVUsTUFBQUEsT0FBTyxFQUFFRSxHQUFHLENBQUNGO0FBQWYsS0FBRCxFQUEyQixHQUEzQixDQUFKO0FBQ0Q7QUFDRjs7QUFFTSxNQUFNRyxNQUFNLEdBQUdDLGlCQUFRQyxNQUFSLEVBQWY7OztBQUNQRixNQUFNLENBQUNQLEdBQVAsQ0FBVyxvQkFBWCxFQUFpQ1QsU0FBakMiLCJzb3VyY2VSb290IjoiL1VzZXJzL2xhY3RvL3dvcmtzcGFjZS90ZXN0L3NyYyIsInNvdXJjZXNDb250ZW50IjpbIlxuaW1wb3J0IHsgaHR0cCB9IGZyb20gJy4vaHR0cC5qcyc7XG5pbXBvcnQgZXhwcmVzcyBmcm9tICdleHByZXNzJztcblxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGdldFNlYXJjaChyZXEsIHJlcywgbmV4dCkge1xuICB0cnkge1xuICAgIGNvbnN0IHsgcGFyYW1zIH0gPSByZXE7XG4gICAgY29uc3QgZ29vZ2xlQXBpVXJsID0gYGh0dHBzOi8vbWFwcy5nb29nbGVhcGlzLmNvbS9tYXBzL2FwaS9wbGFjZS90ZXh0c2VhcmNoL2pzb24/cXVlcnk9cmVzdGF1cmFudHMraW4rJHtwYXJhbXMuYXJlYX0ma2V5PUFJemFTeUI5ckpDOGFsTlU1aWpvd3BpYXpMd1l5VDZRdExKbzdrVWA7XG4gICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBodHRwLmdldChnb29nbGVBcGlVcmwpO1xuICAgIGlmIChyZXNwb25zZSAmJiByZXNwb25zZS5zdGF0dXNDb2RlID09PSAyMDApIHtcbiAgICAgIGNvbnN0IHJlc3VsdHMgPSByZXNwb25zZS5ib2R5LnJlc3VsdHM7XG4gICAgICBuZXh0KFt7IGJvZHk6IHJlc3VsdHMgfSwgcmVzcG9uc2Uuc3RhdHVzQ29kZV0pO1xuICAgIH0gZWxzZSB7XG4gICAgICBuZXh0KFt7IG1lc3NhZ2U6IHN0YXR1cyB9LCByZXNwb25zZS5zdGF0dXNDb2RlXSk7XG4gICAgfVxuICB9IGNhdGNoIChlcnIpIHtcbiAgICBuZXh0KHsgbWVzc2FnZTogZXJyLm1lc3NhZ2UgfSwgNDAwKTtcbiAgfVxufVxuXG5leHBvcnQgY29uc3Qgcm91dGVyID0gZXhwcmVzcy5Sb3V0ZXIoKTtcbnJvdXRlci5nZXQoJy9yZXN0YXVyYW50cy86YXJlYScsIGdldFNlYXJjaCk7Il19",
    "map": {
      "version": 3,
      "sources": [
        "googlemap.js"
      ],
      "names": [
        "getSearch",
        "req",
        "res",
        "next",
        "params",
        "googleApiUrl",
        "area",
        "response",
        "http",
        "get",
        "statusCode",
        "results",
        "body",
        "message",
        "status",
        "err",
        "router",
        "express",
        "Router"
      ],
      "mappings": ";;;;;;;;AACA;;AACA;;;;AAEO,eAAeA,SAAf,CAAyBC,GAAzB,EAA8BC,GAA9B,EAAmCC,IAAnC,EAAyC;AAC9C,MAAI;AACF,UAAM;AAAEC,MAAAA;AAAF,QAAaH,GAAnB;AACA,UAAMI,YAAY,GAAI,mFAAkFD,MAAM,CAACE,IAAK,8CAApH;AACA,UAAMC,QAAQ,GAAG,MAAMC,WAAKC,GAAL,CAASJ,YAAT,CAAvB;;AACA,QAAIE,QAAQ,IAAIA,QAAQ,CAACG,UAAT,KAAwB,GAAxC,EAA6C;AAC3C,YAAMC,OAAO,GAAGJ,QAAQ,CAACK,IAAT,CAAcD,OAA9B;AACAR,MAAAA,IAAI,CAAC,CAAC;AAAES,QAAAA,IAAI,EAAED;AAAR,OAAD,EAAoBJ,QAAQ,CAACG,UAA7B,CAAD,CAAJ;AACD,KAHD,MAGO;AACLP,MAAAA,IAAI,CAAC,CAAC;AAAEU,QAAAA,OAAO,EAAEC;AAAX,OAAD,EAAsBP,QAAQ,CAACG,UAA/B,CAAD,CAAJ;AACD;AACF,GAVD,CAUE,OAAOK,GAAP,EAAY;AACZZ,IAAAA,IAAI,CAAC;AAAEU,MAAAA,OAAO,EAAEE,GAAG,CAACF;AAAf,KAAD,EAA2B,GAA3B,CAAJ;AACD;AACF;;AAEM,MAAMG,MAAM,GAAGC,iBAAQC,MAAR,EAAf;;;AACPF,MAAM,CAACP,GAAP,CAAW,oBAAX,EAAiCT,SAAjC",
      "sourceRoot": "/Users/lacto/workspace/test/src",
      "sourcesContent": [
        "\nimport { http } from './http.js';\nimport express from 'express';\n\nexport async function getSearch(req, res, next) {\n  try {\n    const { params } = req;\n    const googleApiUrl = `https://maps.googleapis.com/maps/api/place/textsearch/json?query=restaurants+in+${params.area}&key=AIzaSyB9rJC8alNU5ijowpiazLwYyT6QtLJo7kU`;\n    const response = await http.get(googleApiUrl);\n    if (response && response.statusCode === 200) {\n      const results = response.body.results;\n      next([{ body: results }, response.statusCode]);\n    } else {\n      next([{ message: status }, response.statusCode]);\n    }\n  } catch (err) {\n    next({ message: err.message }, 400);\n  }\n}\n\nexport const router = express.Router();\nrouter.get('/restaurants/:area', getSearch);"
      ]
    },
    "sourceType": "script",
    "mtime": 1566552146218
  },
  "{\"sourceRoot\":\"/Users/lacto/workspace/test/src\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/lacto/workspace/test\",\"filename\":\"/Users/lacto/workspace/test/src/googlemap.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/lacto/workspace/test\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/lacto/workspace/test/src",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/lacto/workspace/test",
      "filename": "/Users/lacto/workspace/test/src/googlemap.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/lacto/workspace/test",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-object-rest-spread",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/lacto/workspace/test/src/googlemap.js",
        "plugins": [
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/lacto/workspace/test/src/googlemap.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/lacto/workspace/test/src",
        "sourceFileName": "googlemap.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getSearch = getSearch;\nexports.router = void 0;\n\nvar _http = require(\"./http.js\");\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nasync function getSearch(req, res, next) {\n  try {\n    const {\n      params\n    } = req;\n    const googleApiUrl = `https://maps.googleapis.com/maps/api/place/textsearch/json?query=restaurants+in+${params.area}&key=AIzaSyB9rJC8alNU5ijowpiazLwYyT6QtLJo7kU`;\n    const response = await _http.http.get(googleApiUrl);\n\n    if (response && response.statusCode === 200) {\n      const results = response.body.results;\n      next([{\n        body: results\n      }, response.statusCode]);\n    } else {\n      next([{\n        message: status\n      }, response.statusCode]);\n    }\n  } catch (err) {\n    next({\n      message: err.message\n    }, 400);\n  }\n}\n\nconst router = _express.default.Router();\n\nexports.router = router;\nrouter.get('/restaurants/:area', getSearch);\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImdvb2dsZW1hcC5qcyJdLCJuYW1lcyI6WyJnZXRTZWFyY2giLCJyZXEiLCJyZXMiLCJuZXh0IiwicGFyYW1zIiwiZ29vZ2xlQXBpVXJsIiwiYXJlYSIsInJlc3BvbnNlIiwiaHR0cCIsImdldCIsInN0YXR1c0NvZGUiLCJyZXN1bHRzIiwiYm9keSIsIm1lc3NhZ2UiLCJzdGF0dXMiLCJlcnIiLCJyb3V0ZXIiLCJleHByZXNzIiwiUm91dGVyIl0sIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUNBOztBQUNBOzs7O0FBRU8sZUFBZUEsU0FBZixDQUF5QkMsR0FBekIsRUFBOEJDLEdBQTlCLEVBQW1DQyxJQUFuQyxFQUF5QztBQUM5QyxNQUFJO0FBQ0YsVUFBTTtBQUFFQyxNQUFBQTtBQUFGLFFBQWFILEdBQW5CO0FBQ0EsVUFBTUksWUFBWSxHQUFJLG1GQUFrRkQsTUFBTSxDQUFDRSxJQUFLLDhDQUFwSDtBQUNBLFVBQU1DLFFBQVEsR0FBRyxNQUFNQyxXQUFLQyxHQUFMLENBQVNKLFlBQVQsQ0FBdkI7O0FBQ0EsUUFBSUUsUUFBUSxJQUFJQSxRQUFRLENBQUNHLFVBQVQsS0FBd0IsR0FBeEMsRUFBNkM7QUFDM0MsWUFBTUMsT0FBTyxHQUFHSixRQUFRLENBQUNLLElBQVQsQ0FBY0QsT0FBOUI7QUFDQVIsTUFBQUEsSUFBSSxDQUFDLENBQUM7QUFBRVMsUUFBQUEsSUFBSSxFQUFFRDtBQUFSLE9BQUQsRUFBb0JKLFFBQVEsQ0FBQ0csVUFBN0IsQ0FBRCxDQUFKO0FBQ0QsS0FIRCxNQUdPO0FBQ0xQLE1BQUFBLElBQUksQ0FBQyxDQUFDO0FBQUVVLFFBQUFBLE9BQU8sRUFBRUM7QUFBWCxPQUFELEVBQXNCUCxRQUFRLENBQUNHLFVBQS9CLENBQUQsQ0FBSjtBQUNEO0FBQ0YsR0FWRCxDQVVFLE9BQU9LLEdBQVAsRUFBWTtBQUNaWixJQUFBQSxJQUFJLENBQUM7QUFBRVUsTUFBQUEsT0FBTyxFQUFFRSxHQUFHLENBQUNGO0FBQWYsS0FBRCxFQUEyQixHQUEzQixDQUFKO0FBQ0Q7QUFDRjs7QUFFTSxNQUFNRyxNQUFNLEdBQUdDLGlCQUFRQyxNQUFSLEVBQWY7OztBQUNQRixNQUFNLENBQUNQLEdBQVAsQ0FBVyxvQkFBWCxFQUFpQ1QsU0FBakMiLCJzb3VyY2VSb290IjoiL1VzZXJzL2xhY3RvL3dvcmtzcGFjZS90ZXN0L3NyYyIsInNvdXJjZXNDb250ZW50IjpbIlxuaW1wb3J0IHsgaHR0cCB9IGZyb20gJy4vaHR0cC5qcyc7XG5pbXBvcnQgZXhwcmVzcyBmcm9tICdleHByZXNzJztcblxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGdldFNlYXJjaChyZXEsIHJlcywgbmV4dCkge1xuICB0cnkge1xuICAgIGNvbnN0IHsgcGFyYW1zIH0gPSByZXE7XG4gICAgY29uc3QgZ29vZ2xlQXBpVXJsID0gYGh0dHBzOi8vbWFwcy5nb29nbGVhcGlzLmNvbS9tYXBzL2FwaS9wbGFjZS90ZXh0c2VhcmNoL2pzb24/cXVlcnk9cmVzdGF1cmFudHMraW4rJHtwYXJhbXMuYXJlYX0ma2V5PUFJemFTeUI5ckpDOGFsTlU1aWpvd3BpYXpMd1l5VDZRdExKbzdrVWA7XG4gICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBodHRwLmdldChnb29nbGVBcGlVcmwpO1xuICAgIGlmIChyZXNwb25zZSAmJiByZXNwb25zZS5zdGF0dXNDb2RlID09PSAyMDApIHtcbiAgICAgIGNvbnN0IHJlc3VsdHMgPSByZXNwb25zZS5ib2R5LnJlc3VsdHM7XG4gICAgICBuZXh0KFt7IGJvZHk6IHJlc3VsdHMgfSwgcmVzcG9uc2Uuc3RhdHVzQ29kZV0pO1xuICAgIH0gZWxzZSB7XG4gICAgICBuZXh0KFt7IG1lc3NhZ2U6IHN0YXR1cyB9LCByZXNwb25zZS5zdGF0dXNDb2RlXSk7XG4gICAgfVxuICB9IGNhdGNoIChlcnIpIHtcbiAgICBuZXh0KHsgbWVzc2FnZTogZXJyLm1lc3NhZ2UgfSwgNDAwKTtcbiAgfVxufVxuXG5leHBvcnQgY29uc3Qgcm91dGVyID0gZXhwcmVzcy5Sb3V0ZXIoKTtcbnJvdXRlci5nZXQoJy9yZXN0YXVyYW50cy86YXJlYScsIGdldFNlYXJjaCk7Il19",
    "map": {
      "version": 3,
      "sources": [
        "googlemap.js"
      ],
      "names": [
        "getSearch",
        "req",
        "res",
        "next",
        "params",
        "googleApiUrl",
        "area",
        "response",
        "http",
        "get",
        "statusCode",
        "results",
        "body",
        "message",
        "status",
        "err",
        "router",
        "express",
        "Router"
      ],
      "mappings": ";;;;;;;;AACA;;AACA;;;;AAEO,eAAeA,SAAf,CAAyBC,GAAzB,EAA8BC,GAA9B,EAAmCC,IAAnC,EAAyC;AAC9C,MAAI;AACF,UAAM;AAAEC,MAAAA;AAAF,QAAaH,GAAnB;AACA,UAAMI,YAAY,GAAI,mFAAkFD,MAAM,CAACE,IAAK,8CAApH;AACA,UAAMC,QAAQ,GAAG,MAAMC,WAAKC,GAAL,CAASJ,YAAT,CAAvB;;AACA,QAAIE,QAAQ,IAAIA,QAAQ,CAACG,UAAT,KAAwB,GAAxC,EAA6C;AAC3C,YAAMC,OAAO,GAAGJ,QAAQ,CAACK,IAAT,CAAcD,OAA9B;AACAR,MAAAA,IAAI,CAAC,CAAC;AAAES,QAAAA,IAAI,EAAED;AAAR,OAAD,EAAoBJ,QAAQ,CAACG,UAA7B,CAAD,CAAJ;AACD,KAHD,MAGO;AACLP,MAAAA,IAAI,CAAC,CAAC;AAAEU,QAAAA,OAAO,EAAEC;AAAX,OAAD,EAAsBP,QAAQ,CAACG,UAA/B,CAAD,CAAJ;AACD;AACF,GAVD,CAUE,OAAOK,GAAP,EAAY;AACZZ,IAAAA,IAAI,CAAC;AAAEU,MAAAA,OAAO,EAAEE,GAAG,CAACF;AAAf,KAAD,EAA2B,GAA3B,CAAJ;AACD;AACF;;AAEM,MAAMG,MAAM,GAAGC,iBAAQC,MAAR,EAAf;;;AACPF,MAAM,CAACP,GAAP,CAAW,oBAAX,EAAiCT,SAAjC",
      "sourceRoot": "/Users/lacto/workspace/test/src",
      "sourcesContent": [
        "\nimport { http } from './http.js';\nimport express from 'express';\n\nexport async function getSearch(req, res, next) {\n  try {\n    const { params } = req;\n    const googleApiUrl = `https://maps.googleapis.com/maps/api/place/textsearch/json?query=restaurants+in+${params.area}&key=AIzaSyB9rJC8alNU5ijowpiazLwYyT6QtLJo7kU`;\n    const response = await http.get(googleApiUrl);\n    if (response && response.statusCode === 200) {\n      const results = response.body.results;\n      next([{ body: results }, response.statusCode]);\n    } else {\n      next([{ message: status }, response.statusCode]);\n    }\n  } catch (err) {\n    next({ message: err.message }, 400);\n  }\n}\n\nexport const router = express.Router();\nrouter.get('/restaurants/:area', getSearch);"
      ]
    },
    "sourceType": "script",
    "mtime": 1566552146218
  },
  "{\"sourceRoot\":\"/Users/lacto/workspace/test/src\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/lacto/workspace/test\",\"filename\":\"/Users/lacto/workspace/test/src/linebot.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/lacto/workspace/test\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/lacto/workspace/test/src",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/lacto/workspace/test",
      "filename": "/Users/lacto/workspace/test/src/linebot.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/lacto/workspace/test",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-object-rest-spread",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/lacto/workspace/test/src/linebot.js",
        "plugins": [
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/lacto/workspace/test/src/linebot.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/lacto/workspace/test/src",
        "sourceFileName": "linebot.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getMessage = getMessage;\nexports.router = void 0;\n\nvar line = _interopRequireWildcard(require(\"@line/bot-sdk\"));\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _config = _interopRequireDefault(require(\"./config.json\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }\n\nconst client = new line.Client(_config.default);\n\nasync function handleEvent(event) {\n  switch (event.type) {\n    case 'message':\n      const message = event.message;\n\n      switch (message.type) {\n        case 'text':\n          return handleText(message, event);\n\n        case 'image':\n          return handleImage(message, event);\n\n        case 'video':\n          return handleVideo(message, event);\n\n        case 'audio':\n          return handleAudio(message, event);\n\n        case 'location':\n          return handleLocation(message, event);\n\n        case 'sticker':\n          return handleSticker(message, event);\n\n        default:\n          throw new Error(`Unknown message: ${JSON.stringify(message)}`);\n      }\n\n    default:\n      throw new Error(`Unknown event: ${JSON.stringify(event)}`);\n  }\n}\n\nasync function handleText(message, event) {\n  return client.replyMessage(event.replyToken, {\n    type: 'text',\n    text: message.text\n  });\n}\n\nfunction handleImage(message, event) {\n  return client.replyMessage(event.replyToken, {\n    type: 'text',\n    text: 'Got Image'\n  });\n}\n\nfunction handleVideo(message, event) {\n  return client.replyMessage(event.replyToken, {\n    type: 'text',\n    text: 'Got Video'\n  });\n}\n\nfunction handleAudio(message, event) {\n  return client.replyMessage(event.replyToken, {\n    type: 'text',\n    text: 'Got Audio'\n  });\n}\n\nfunction handleLocation(message, event) {\n  return client.replyMessage(event.replyToken, {\n    type: 'text',\n    text: 'Got Location'\n  });\n}\n\nfunction handleSticker(message, event) {\n  let result = {\n    type: 'sticker',\n    packageId: '11537',\n    stickerId: '52002759'\n  };\n  return client.pushMessage(event.source.userId, result);\n}\n\nasync function getMessage(req, res, next) {\n  if (!Array.isArray(req.body.events)) {\n    return res.status(500).end();\n  }\n\n  Promise.all(req.body.events.map(event => {\n    console.log('event', event);\n    return handleEvent(event);\n  })).then(() => res.end()).catch(err => {\n    console.error(err);\n    res.status(500).end();\n  });\n  next([{\n    message: 'Success'\n  }, '200']);\n}\n\nconst router = _express.default.Router();\n\nexports.router = router;\nrouter.post('/', line.middleware(_config.default), getMessage);\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpbmVib3QuanMiXSwibmFtZXMiOlsiY2xpZW50IiwibGluZSIsIkNsaWVudCIsImNvbmZpZyIsImhhbmRsZUV2ZW50IiwiZXZlbnQiLCJ0eXBlIiwibWVzc2FnZSIsImhhbmRsZVRleHQiLCJoYW5kbGVJbWFnZSIsImhhbmRsZVZpZGVvIiwiaGFuZGxlQXVkaW8iLCJoYW5kbGVMb2NhdGlvbiIsImhhbmRsZVN0aWNrZXIiLCJFcnJvciIsIkpTT04iLCJzdHJpbmdpZnkiLCJyZXBseU1lc3NhZ2UiLCJyZXBseVRva2VuIiwidGV4dCIsInJlc3VsdCIsInBhY2thZ2VJZCIsInN0aWNrZXJJZCIsInB1c2hNZXNzYWdlIiwic291cmNlIiwidXNlcklkIiwiZ2V0TWVzc2FnZSIsInJlcSIsInJlcyIsIm5leHQiLCJBcnJheSIsImlzQXJyYXkiLCJib2R5IiwiZXZlbnRzIiwic3RhdHVzIiwiZW5kIiwiUHJvbWlzZSIsImFsbCIsIm1hcCIsImNvbnNvbGUiLCJsb2ciLCJ0aGVuIiwiY2F0Y2giLCJlcnIiLCJlcnJvciIsInJvdXRlciIsImV4cHJlc3MiLCJSb3V0ZXIiLCJwb3N0IiwibWlkZGxld2FyZSJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBQTs7QUFDQTs7QUFDQTs7Ozs7O0FBQ0EsTUFBTUEsTUFBTSxHQUFHLElBQUlDLElBQUksQ0FBQ0MsTUFBVCxDQUFnQkMsZUFBaEIsQ0FBZjs7QUFFQSxlQUFlQyxXQUFmLENBQTJCQyxLQUEzQixFQUFrQztBQUNoQyxVQUFRQSxLQUFLLENBQUNDLElBQWQ7QUFDRSxTQUFLLFNBQUw7QUFDRSxZQUFNQyxPQUFPLEdBQUdGLEtBQUssQ0FBQ0UsT0FBdEI7O0FBQ0EsY0FBUUEsT0FBTyxDQUFDRCxJQUFoQjtBQUNFLGFBQUssTUFBTDtBQUNFLGlCQUFPRSxVQUFVLENBQUNELE9BQUQsRUFBVUYsS0FBVixDQUFqQjs7QUFDRixhQUFLLE9BQUw7QUFDRSxpQkFBT0ksV0FBVyxDQUFDRixPQUFELEVBQVVGLEtBQVYsQ0FB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RUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVlWLEdBQUcsQ0FBQ0ssSUFBSixDQUFTQyxNQUFULENBQWdCSyxHQUFoQixDQUFvQmpDLEtBQUssSUFBSTtBQUN2Q2tDLElBQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZLE9BQVosRUFBcUJuQyxLQUFyQjtBQUNBLFdBQU9ELFdBQVcsQ0FBQ0MsS0FBRCxDQUFsQjtBQUNELEdBSFcsQ0FBWixFQUlHb0MsSUFKSCxDQUlRLE1BQU1iLEdBQUcsQ0FBQ08sR0FBSixFQUpkLEVBS0dPLEtBTEgsQ0FLVUMsR0FBRCxJQUFTO0FBQ2RKLElBQUFBLE9BQU8sQ0FBQ0ssS0FBUixDQUFjRCxHQUFkO0FBQ0FmLElBQUFBLEdBQUcsQ0FBQ00sTUFBSixDQUFXLEdBQVgsRUFBZ0JDLEdBQWhCO0FBQ0QsR0FSSDtBQVVBTixFQUFBQSxJQUFJLENBQUMsQ0FBQztBQUFFdEIsSUFBQUEsT0FBTyxFQUFFO0FBQVgsR0FBRCxFQUF5QixLQUF6QixDQUFELENBQUo7QUFDRDs7QUFFTSxNQUFNc0MsTUFBTSxHQUFHQyxpQkFBUUMsTUFBUixFQUFmOzs7QUFDUEYsTUFBTSxDQUFDRyxJQUFQLENBQVksR0FBWixFQUFpQi9DLElBQUksQ0FBQ2dELFVBQUwsQ0FBZ0I5QyxlQUFoQixDQUFqQixFQUEwQ3VCLFVBQTFDIiwic291cmNlUm9vdCI6Ii9Vc2Vycy9sYWN0by93b3Jrc3BhY2UvdGVzdC9zcmMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgKiBhcyBsaW5lIGZyb20gJ0BsaW5lL2JvdC1zZGsnO1xuaW1wb3J0IGV4cHJlc3MgZnJvbSAnZXhwcmVzcyc7XG5pbXBvcnQgY29uZmlnIGZyb20gJy4vY29uZmlnLmpzb24nO1xuY29uc3QgY2xpZW50ID0gbmV3IGxpbmUuQ2xpZW50KGNvbmZpZyk7XG5cbmFzeW5jIGZ1bmN0aW9uIGhhbmRsZUV2ZW50KGV2ZW50KSB7XG4gIHN3aXRjaCAoZXZlbnQudHlwZSkge1xuICAgIGNhc2UgJ21lc3NhZ2UnOlxuICAgICAgY29uc3QgbWVzc2FnZSA9IGV2ZW50Lm1lc3NhZ2U7XG4gICAgICBzd2l0Y2ggKG1lc3NhZ2UudHlwZSkge1xuICAgICAgICBjYXNlICd0ZXh0JzpcbiAgICAgICAgICByZXR1cm4gaGFuZGxlVGV4dChtZXNzYWdlLCBldmVudCk7XG4gICAgICAgIGNhc2UgJ2ltYWdlJzpcbiAgICAgICAgICByZXR1cm4gaGFuZGxlSW1hZ2UobWVzc2FnZSwgZXZlbnQpO1xuICAgICAgICBjYXNlICd2aWRlbyc6XG4gICAgICAgICAgcmV0dXJuIGhhbmRsZVZpZGVvKG1lc3NhZ2UsIGV2ZW50KTtcbiAgICAgICAgY2FzZSAnYXVkaW8nOlxuICAgICAgICAgIHJldHVybiBoYW5kbGVBdWRpbyhtZXNzYWdlLCBldmVudCk7XG4gICAgICAgIGNhc2UgJ2xvY2F0aW9uJzpcbiAgICAgICAgICByZXR1cm4gaGFuZGxlTG9jYXRpb24obWVzc2FnZSwgZXZlbnQpO1xuICAgICAgICBjYXNlICdzdGlja2VyJzpcbiAgICAgICAgICByZXR1cm4gaGFuZGxlU3RpY2tlcihtZXNzYWdlLCBldmVudCk7XG4gICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBVbmtub3duIG1lc3NhZ2U6ICR7SlNPTi5zdHJpbmdpZnkobWVzc2FnZSl9YCk7XG4gICAgICB9XG4gICAgZGVmYXVsdDpcbiAgICAgIHRocm93IG5ldyBFcnJvcihgVW5rbm93biBldmVudDogJHtKU09OLnN0cmluZ2lmeShldmVudCl9YCk7XG4gIH1cbn1cblxuYXN5bmMgZnVuY3Rpb24gaGFuZGxlVGV4dChtZXNzYWdlLCBldmVudCkge1xuICByZXR1cm4gY2xpZW50LnJlcGx5TWVzc2FnZShldmVudC5yZXBseVRva2VuLCB7IHR5cGU6ICd0ZXh0JywgdGV4dDogbWVzc2FnZS50ZXh0IH0pO1xufVxuXG5mdW5jdGlvbiBoYW5kbGVJbWFnZShtZXNzYWdlLCBldmVudCkge1xuICByZXR1cm4gY2xpZW50LnJlcGx5TWVzc2FnZShldmVudC5yZXBseVRva2VuLCB7IHR5cGU6ICd0ZXh0JywgdGV4dDogJ0dvdCBJbWFnZScgfSk7XG59XG5cbmZ1bmN0aW9uIGhhbmRsZVZpZGVvKG1lc3NhZ2UsIGV2ZW50KSB7XG4gIHJldHVybiBjbGllbnQucmVwbHlNZXNzYWdlKGV2ZW50LnJlcGx5VG9rZW4sIHsgdHlwZTogJ3RleHQnLCB0ZXh0OiAnR290IFZpZGVvJyB9KTtcbn1cblxuZnVuY3Rpb24gaGFuZGxlQXVkaW8obWVzc2FnZSwgZXZlbnQpIHtcbiAgcmV0dXJuIGNsaWVudC5yZXBseU1lc3NhZ2UoZXZlbnQucmVwbHlUb2tlbiwgeyB0eXBlOiAndGV4dCcsIHRleHQ6ICdHb3QgQXVkaW8nIH0pO1xufVxuXG5mdW5jdGlvbiBoYW5kbGVMb2NhdGlvbihtZXNzYWdlLCBldmVudCkge1xuICByZXR1cm4gY2xpZW50LnJlcGx5TWVzc2FnZShldmVudC5yZXBseVRva2VuLCB7IHR5cGU6ICd0ZXh0JywgdGV4dDogJ0dvdCBMb2NhdGlvbicgfSk7XG59XG5cbmZ1bmN0aW9uIGhhbmRsZVN0aWNrZXIobWVzc2FnZSwgZXZlbnQpIHtcbiAgbGV0IHJlc3VsdCA9IHtcbiAgICB0eXBlOiAnc3RpY2tlcicsXG4gICAgcGFja2FnZUlkOiAnMTE1MzcnLFxuICAgIHN0aWNrZXJJZDogJzUyMDAyNzU5J1xuICB9O1xuXG4gIHJldHVybiBjbGllbnQucHVzaE1lc3NhZ2UoZXZlbnQuc291cmNlLnVzZXJJZCwgcmVzdWx0KTtcbn1cblxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGdldE1lc3NhZ2UocmVxLCByZXMsIG5leHQpIHtcbiAgaWYgKCFBcnJheS5pc0FycmF5KHJlcS5ib2R5LmV2ZW50cykpIHtcbiAgICByZXR1cm4gcmVzLnN0YXR1cyg1MDApLmVuZCgpO1xuICB9XG4gIFByb21pc2UuYWxsKHJlcS5ib2R5LmV2ZW50cy5tYXAoZXZlbnQgPT4ge1xuICAgIGNvbnNvbGUubG9nKCdldmVudCcsIGV2ZW50KTtcbiAgICByZXR1cm4gaGFuZGxlRXZlbnQoZXZlbnQpO1xuICB9KSlcbiAgICAudGhlbigoKSA9PiByZXMuZW5kKCkpXG4gICAgLmNhdGNoKChlcnIpID0+IHtcbiAgICAgIGNvbnNvbGUuZXJyb3IoZXJyKTtcbiAgICAgIHJlcy5zdGF0dXMoNTAwKS5lbmQoKTtcbiAgICB9KTtcblxuICBuZXh0KFt7IG1lc3NhZ2U6ICdTdWNjZXNzJyB9LCAnMjAwJ10pO1xufVxuXG5leHBvcnQgY29uc3Qgcm91dGVyID0gZXhwcmVzcy5Sb3V0ZXIoKTtcbnJvdXRlci5wb3N0KCcvJywgbGluZS5taWRkbGV3YXJlKGNvbmZpZyksIGdldE1lc3NhZ2UpO1xuIl19",
    "map": {
      "version": 3,
      "sources": [
        "linebot.js"
      ],
      "names": [
        "client",
        "line",
        "Client",
        "config",
        "handleEvent",
        "event",
        "type",
        "message",
        "handleText",
        "handleImage",
        "handleVideo",
        "handleAudio",
        "handleLocation",
        "handleSticker",
        "Error",
        "JSON",
        "stringify",
        "replyMessage",
        "replyToken",
        "text",
        "result",
        "packageId",
        "stickerId",
        "pushMessage",
        "source",
        "userId",
        "getMessage",
        "req",
        "res",
        "next",
        "Array",
        "isArray",
        "body",
        "events",
        "status",
        "end",
        "Promise",
        "all",
        "map",
        "console",
        "log",
        "then",
        "catch",
        "err",
        "error",
        "router",
        "express",
        "Router",
        "post",
        "middleware"
      ],
      "mappings": "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",
      "sourceRoot": "/Users/lacto/workspace/test/src",
      "sourcesContent": [
        "import * as line from '@line/bot-sdk';\nimport express from 'express';\nimport config from './config.json';\nconst client = new line.Client(config);\n\nasync function handleEvent(event) {\n  switch (event.type) {\n    case 'message':\n      const message = event.message;\n      switch (message.type) {\n        case 'text':\n          return handleText(message, event);\n        case 'image':\n          return handleImage(message, event);\n        case 'video':\n          return handleVideo(message, event);\n        case 'audio':\n          return handleAudio(message, event);\n        case 'location':\n          return handleLocation(message, event);\n        case 'sticker':\n          return handleSticker(message, event);\n        default:\n          throw new Error(`Unknown message: ${JSON.stringify(message)}`);\n      }\n    default:\n      throw new Error(`Unknown event: ${JSON.stringify(event)}`);\n  }\n}\n\nasync function handleText(message, event) {\n  return client.replyMessage(event.replyToken, { type: 'text', text: message.text });\n}\n\nfunction handleImage(message, event) {\n  return client.replyMessage(event.replyToken, { type: 'text', text: 'Got Image' });\n}\n\nfunction handleVideo(message, event) {\n  return client.replyMessage(event.replyToken, { type: 'text', text: 'Got Video' });\n}\n\nfunction handleAudio(message, event) {\n  return client.replyMessage(event.replyToken, { type: 'text', text: 'Got Audio' });\n}\n\nfunction handleLocation(message, event) {\n  return client.replyMessage(event.replyToken, { type: 'text', text: 'Got Location' });\n}\n\nfunction handleSticker(message, event) {\n  let result = {\n    type: 'sticker',\n    packageId: '11537',\n    stickerId: '52002759'\n  };\n\n  return client.pushMessage(event.source.userId, result);\n}\n\nexport async function getMessage(req, res, next) {\n  if (!Array.isArray(req.body.events)) {\n    return res.status(500).end();\n  }\n  Promise.all(req.body.events.map(event => {\n    console.log('event', event);\n    return handleEvent(event);\n  }))\n    .then(() => res.end())\n    .catch((err) => {\n      console.error(err);\n      res.status(500).end();\n    });\n\n  next([{ message: 'Success' }, '200']);\n}\n\nexport const router = express.Router();\nrouter.post('/', line.middleware(config), getMessage);\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1567143212613
  },
  "{\"sourceRoot\":\"/Users/lacto/workspace/test/src\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/lacto/workspace/test\",\"filename\":\"/Users/lacto/workspace/test/src/linebot.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/lacto/workspace/test\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/lacto/workspace/test/src",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/lacto/workspace/test",
      "filename": "/Users/lacto/workspace/test/src/linebot.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/lacto/workspace/test",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-object-rest-spread",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/lacto/workspace/test/src/linebot.js",
        "plugins": [
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/lacto/workspace/test/src/linebot.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/lacto/workspace/test/src",
        "sourceFileName": "linebot.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getMessage = getMessage;\nexports.router = void 0;\n\nvar line = _interopRequireWildcard(require(\"@line/bot-sdk\"));\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _config = _interopRequireDefault(require(\"./config.json\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }\n\nconst client = new line.Client(_config.default);\n\nasync function handleEvent(event) {\n  switch (event.type) {\n    case 'message':\n      const message = event.message;\n\n      switch (message.type) {\n        case 'text':\n          return handleText(message, event);\n\n        case 'image':\n          return handleImage(message, event);\n\n        case 'video':\n          return handleVideo(message, event);\n\n        case 'audio':\n          return handleAudio(message, event);\n\n        case 'location':\n          return handleLocation(message, event);\n\n        case 'sticker':\n          return handleSticker(message, event);\n\n        default:\n          throw new Error(`Unknown message: ${JSON.stringify(message)}`);\n      }\n\n    default:\n      throw new Error(`Unknown event: ${JSON.stringify(event)}`);\n  }\n}\n\nasync function handleText(message, event) {\n  return client.replyMessage(event.replyToken, {\n    type: 'text',\n    text: message.text\n  });\n}\n\nfunction handleImage(message, event) {\n  return client.replyMessage(event.replyToken, {\n    type: 'text',\n    text: 'Got Image'\n  });\n}\n\nfunction handleVideo(message, event) {\n  return client.replyMessage(event.replyToken, {\n    type: 'text',\n    text: 'Got Video'\n  });\n}\n\nfunction handleAudio(message, event) {\n  return client.replyMessage(event.replyToken, {\n    type: 'text',\n    text: 'Got Audio'\n  });\n}\n\nfunction handleLocation(message, event) {\n  return client.replyMessage(event.replyToken, {\n    type: 'text',\n    text: 'Got Location'\n  });\n}\n\nfunction handleSticker(message, event) {\n  let result = {\n    type: 'sticker',\n    packageId: '11537',\n    stickerId: '52002759'\n  };\n  return client.pushMessage(event.source.userId, result);\n}\n\nasync function getMessage(req, res, next) {\n  if (!Array.isArray(req.body.events)) {\n    return res.status(500).end();\n  }\n\n  Promise.all(req.body.events.map(event => {\n    console.log('event', event);\n    return handleEvent(event);\n  })).then(() => res.end()).catch(err => {\n    console.error(err);\n    res.status(500).end();\n  });\n  next([{\n    message: 'Success'\n  }, '200']);\n}\n\nconst router = _express.default.Router();\n\nexports.router = router;\nrouter.post('/', line.middleware(_config.default), getMessage);\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpbmVib3QuanMiXSwibmFtZXMiOlsiY2xpZW50IiwibGluZSIsIkNsaWVudCIsImNvbmZpZyIsImhhbmRsZUV2ZW50IiwiZXZlbnQiLCJ0eXBlIiwibWVzc2FnZSIsImhhbmRsZVRleHQiLCJoYW5kbGVJbWFnZSIsImhhbmRsZVZpZGVvIiwiaGFuZGxlQXVkaW8iLCJoYW5kbGVMb2NhdGlvbiIsImhhbmRsZVN0aWNrZXIiLCJFcnJvciIsIkpTT04iLCJzdHJpbmdpZnkiLCJyZXBseU1lc3NhZ2UiLCJyZXBseVRva2VuIiwidGV4dCIsInJlc3VsdCIsInBhY2thZ2VJZCIsInN0aWNrZXJJZCIsInB1c2hNZXNzYWdlIiwic291cmNlIiwidXNlcklkIiwiZ2V0TWVzc2FnZSIsInJlcSIsInJlcyIsIm5leHQiLCJBcnJheSIsImlzQXJyYXkiLCJib2R5IiwiZXZlbnRzIiwic3RhdHVzIiwiZW5kIiwiUHJvbWlzZSIsImFsbCIsIm1hcCIsImNvbnNvbGUiLCJsb2ciLCJ0aGVuIiwiY2F0Y2giLCJlcnIiLCJlcnJvciIsInJvdXRlciIsImV4cHJlc3MiLCJSb3V0ZXIiLCJwb3N0IiwibWlkZGxld2FyZSJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBQTs7QUFDQTs7QUFDQTs7Ozs7O0FBQ0EsTUFBTUEsTUFBTSxHQUFHLElBQUlDLElBQUksQ0FBQ0MsTUFBVCxDQUFnQkMsZUFBaEIsQ0FBZjs7QUFFQSxlQUFlQyxXQUFmLENBQTJCQyxLQUEzQixFQUFrQztBQUNoQyxVQUFRQSxLQUFLLENBQUNDLElBQWQ7QUFDRSxTQUFLLFNBQUw7QUFDRSxZQUFNQyxPQUFPLEdBQUdGLEtBQUssQ0FBQ0UsT0FBdEI7O0FBQ0EsY0FBUUEsT0FBTyxDQUFDRCxJQUFoQjtBQUNFLGFBQUssTUFBTDtBQUNFLGlCQUFPRSxVQUFVLENBQUNELE9BQUQsRUFBVUYsS0FBVixDQUFqQjs7QUFDRixhQUFLLE9BQUw7QUFDRSxpQkFBT0ksV0FBVyxDQUFDRixPQUFELEVBQVVGLEtBQVYsQ0FB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RUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVlWLEdBQUcsQ0FBQ0ssSUFBSixDQUFTQyxNQUFULENBQWdCSyxHQUFoQixDQUFvQmpDLEtBQUssSUFBSTtBQUN2Q2tDLElBQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZLE9BQVosRUFBcUJuQyxLQUFyQjtBQUNBLFdBQU9ELFdBQVcsQ0FBQ0MsS0FBRCxDQUFsQjtBQUNELEdBSFcsQ0FBWixFQUlHb0MsSUFKSCxDQUlRLE1BQU1iLEdBQUcsQ0FBQ08sR0FBSixFQUpkLEVBS0dPLEtBTEgsQ0FLVUMsR0FBRCxJQUFTO0FBQ2RKLElBQUFBLE9BQU8sQ0FBQ0ssS0FBUixDQUFjRCxHQUFkO0FBQ0FmLElBQUFBLEdBQUcsQ0FBQ00sTUFBSixDQUFXLEdBQVgsRUFBZ0JDLEdBQWhCO0FBQ0QsR0FSSDtBQVVBTixFQUFBQSxJQUFJLENBQUMsQ0FBQztBQUFFdEIsSUFBQUEsT0FBTyxFQUFFO0FBQVgsR0FBRCxFQUF5QixLQUF6QixDQUFELENBQUo7QUFDRDs7QUFFTSxNQUFNc0MsTUFBTSxHQUFHQyxpQkFBUUMsTUFBUixFQUFmOzs7QUFDUEYsTUFBTSxDQUFDRyxJQUFQLENBQVksR0FBWixFQUFpQi9DLElBQUksQ0FBQ2dELFVBQUwsQ0FBZ0I5QyxlQUFoQixDQUFqQixFQUEwQ3VCLFVBQTFDIiwic291cmNlUm9vdCI6Ii9Vc2Vycy9sYWN0by93b3Jrc3BhY2UvdGVzdC9zcmMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgKiBhcyBsaW5lIGZyb20gJ0BsaW5lL2JvdC1zZGsnO1xuaW1wb3J0IGV4cHJlc3MgZnJvbSAnZXhwcmVzcyc7XG5pbXBvcnQgY29uZmlnIGZyb20gJy4vY29uZmlnLmpzb24nO1xuY29uc3QgY2xpZW50ID0gbmV3IGxpbmUuQ2xpZW50KGNvbmZpZyk7XG5cbmFzeW5jIGZ1bmN0aW9uIGhhbmRsZUV2ZW50KGV2ZW50KSB7XG4gIHN3aXRjaCAoZXZlbnQudHlwZSkge1xuICAgIGNhc2UgJ21lc3NhZ2UnOlxuICAgICAgY29uc3QgbWVzc2FnZSA9IGV2ZW50Lm1lc3NhZ2U7XG4gICAgICBzd2l0Y2ggKG1lc3NhZ2UudHlwZSkge1xuICAgICAgICBjYXNlICd0ZXh0JzpcbiAgICAgICAgICByZXR1cm4gaGFuZGxlVGV4dChtZXNzYWdlLCBldmVudCk7XG4gICAgICAgIGNhc2UgJ2ltYWdlJzpcbiAgICAgICAgICByZXR1cm4gaGFuZGxlSW1hZ2UobWVzc2FnZSwgZXZlbnQpO1xuICAgICAgICBjYXNlICd2aWRlbyc6XG4gICAgICAgICAgcmV0dXJuIGhhbmRsZVZpZGVvKG1lc3NhZ2UsIGV2ZW50KTtcbiAgICAgICAgY2FzZSAnYXVkaW8nOlxuICAgICAgICAgIHJldHVybiBoYW5kbGVBdWRpbyhtZXNzYWdlLCBldmVudCk7XG4gICAgICAgIGNhc2UgJ2xvY2F0aW9uJzpcbiAgICAgICAgICByZXR1cm4gaGFuZGxlTG9jYXRpb24obWVzc2FnZSwgZXZlbnQpO1xuICAgICAgICBjYXNlICdzdGlja2VyJzpcbiAgICAgICAgICByZXR1cm4gaGFuZGxlU3RpY2tlcihtZXNzYWdlLCBldmVudCk7XG4gICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBVbmtub3duIG1lc3NhZ2U6ICR7SlNPTi5zdHJpbmdpZnkobWVzc2FnZSl9YCk7XG4gICAgICB9XG4gICAgZGVmYXVsdDpcbiAgICAgIHRocm93IG5ldyBFcnJvcihgVW5rbm93biBldmVudDogJHtKU09OLnN0cmluZ2lmeShldmVudCl9YCk7XG4gIH1cbn1cblxuYXN5bmMgZnVuY3Rpb24gaGFuZGxlVGV4dChtZXNzYWdlLCBldmVudCkge1xuICByZXR1cm4gY2xpZW50LnJlcGx5TWVzc2FnZShldmVudC5yZXBseVRva2VuLCB7IHR5cGU6ICd0ZXh0JywgdGV4dDogbWVzc2FnZS50ZXh0IH0pO1xufVxuXG5mdW5jdGlvbiBoYW5kbGVJbWFnZShtZXNzYWdlLCBldmVudCkge1xuICByZXR1cm4gY2xpZW50LnJlcGx5TWVzc2FnZShldmVudC5yZXBseVRva2VuLCB7IHR5cGU6ICd0ZXh0JywgdGV4dDogJ0dvdCBJbWFnZScgfSk7XG59XG5cbmZ1bmN0aW9uIGhhbmRsZVZpZGVvKG1lc3NhZ2UsIGV2ZW50KSB7XG4gIHJldHVybiBjbGllbnQucmVwbHlNZXNzYWdlKGV2ZW50LnJlcGx5VG9rZW4sIHsgdHlwZTogJ3RleHQnLCB0ZXh0OiAnR290IFZpZGVvJyB9KTtcbn1cblxuZnVuY3Rpb24gaGFuZGxlQXVkaW8obWVzc2FnZSwgZXZlbnQpIHtcbiAgcmV0dXJuIGNsaWVudC5yZXBseU1lc3NhZ2UoZXZlbnQucmVwbHlUb2tlbiwgeyB0eXBlOiAndGV4dCcsIHRleHQ6ICdHb3QgQXVkaW8nIH0pO1xufVxuXG5mdW5jdGlvbiBoYW5kbGVMb2NhdGlvbihtZXNzYWdlLCBldmVudCkge1xuICByZXR1cm4gY2xpZW50LnJlcGx5TWVzc2FnZShldmVudC5yZXBseVRva2VuLCB7IHR5cGU6ICd0ZXh0JywgdGV4dDogJ0dvdCBMb2NhdGlvbicgfSk7XG59XG5cbmZ1bmN0aW9uIGhhbmRsZVN0aWNrZXIobWVzc2FnZSwgZXZlbnQpIHtcbiAgbGV0IHJlc3VsdCA9IHtcbiAgICB0eXBlOiAnc3RpY2tlcicsXG4gICAgcGFja2FnZUlkOiAnMTE1MzcnLFxuICAgIHN0aWNrZXJJZDogJzUyMDAyNzU5J1xuICB9O1xuXG4gIHJldHVybiBjbGllbnQucHVzaE1lc3NhZ2UoZXZlbnQuc291cmNlLnVzZXJJZCwgcmVzdWx0KTtcbn1cblxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGdldE1lc3NhZ2UocmVxLCByZXMsIG5leHQpIHtcbiAgaWYgKCFBcnJheS5pc0FycmF5KHJlcS5ib2R5LmV2ZW50cykpIHtcbiAgICByZXR1cm4gcmVzLnN0YXR1cyg1MDApLmVuZCgpO1xuICB9XG4gIFByb21pc2UuYWxsKHJlcS5ib2R5LmV2ZW50cy5tYXAoZXZlbnQgPT4ge1xuICAgIGNvbnNvbGUubG9nKCdldmVudCcsIGV2ZW50KTtcbiAgICByZXR1cm4gaGFuZGxlRXZlbnQoZXZlbnQpO1xuICB9KSlcbiAgICAudGhlbigoKSA9PiByZXMuZW5kKCkpXG4gICAgLmNhdGNoKChlcnIpID0+IHtcbiAgICAgIGNvbnNvbGUuZXJyb3IoZXJyKTtcbiAgICAgIHJlcy5zdGF0dXMoNTAwKS5lbmQoKTtcbiAgICB9KTtcblxuICBuZXh0KFt7IG1lc3NhZ2U6ICdTdWNjZXNzJyB9LCAnMjAwJ10pO1xufVxuXG5leHBvcnQgY29uc3Qgcm91dGVyID0gZXhwcmVzcy5Sb3V0ZXIoKTtcbnJvdXRlci5wb3N0KCcvJywgbGluZS5taWRkbGV3YXJlKGNvbmZpZyksIGdldE1lc3NhZ2UpO1xuIl19",
    "map": {
      "version": 3,
      "sources": [
        "linebot.js"
      ],
      "names": [
        "client",
        "line",
        "Client",
        "config",
        "handleEvent",
        "event",
        "type",
        "message",
        "handleText",
        "handleImage",
        "handleVideo",
        "handleAudio",
        "handleLocation",
        "handleSticker",
        "Error",
        "JSON",
        "stringify",
        "replyMessage",
        "replyToken",
        "text",
        "result",
        "packageId",
        "stickerId",
        "pushMessage",
        "source",
        "userId",
        "getMessage",
        "req",
        "res",
        "next",
        "Array",
        "isArray",
        "body",
        "events",
        "status",
        "end",
        "Promise",
        "all",
        "map",
        "console",
        "log",
        "then",
        "catch",
        "err",
        "error",
        "router",
        "express",
        "Router",
        "post",
        "middleware"
      ],
      "mappings": "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",
      "sourceRoot": "/Users/lacto/workspace/test/src",
      "sourcesContent": [
        "import * as line from '@line/bot-sdk';\nimport express from 'express';\nimport config from './config.json';\nconst client = new line.Client(config);\n\nasync function handleEvent(event) {\n  switch (event.type) {\n    case 'message':\n      const message = event.message;\n      switch (message.type) {\n        case 'text':\n          return handleText(message, event);\n        case 'image':\n          return handleImage(message, event);\n        case 'video':\n          return handleVideo(message, event);\n        case 'audio':\n          return handleAudio(message, event);\n        case 'location':\n          return handleLocation(message, event);\n        case 'sticker':\n          return handleSticker(message, event);\n        default:\n          throw new Error(`Unknown message: ${JSON.stringify(message)}`);\n      }\n    default:\n      throw new Error(`Unknown event: ${JSON.stringify(event)}`);\n  }\n}\n\nasync function handleText(message, event) {\n  return client.replyMessage(event.replyToken, { type: 'text', text: message.text });\n}\n\nfunction handleImage(message, event) {\n  return client.replyMessage(event.replyToken, { type: 'text', text: 'Got Image' });\n}\n\nfunction handleVideo(message, event) {\n  return client.replyMessage(event.replyToken, { type: 'text', text: 'Got Video' });\n}\n\nfunction handleAudio(message, event) {\n  return client.replyMessage(event.replyToken, { type: 'text', text: 'Got Audio' });\n}\n\nfunction handleLocation(message, event) {\n  return client.replyMessage(event.replyToken, { type: 'text', text: 'Got Location' });\n}\n\nfunction handleSticker(message, event) {\n  let result = {\n    type: 'sticker',\n    packageId: '11537',\n    stickerId: '52002759'\n  };\n\n  return client.pushMessage(event.source.userId, result);\n}\n\nexport async function getMessage(req, res, next) {\n  if (!Array.isArray(req.body.events)) {\n    return res.status(500).end();\n  }\n  Promise.all(req.body.events.map(event => {\n    console.log('event', event);\n    return handleEvent(event);\n  }))\n    .then(() => res.end())\n    .catch((err) => {\n      console.error(err);\n      res.status(500).end();\n    });\n\n  next([{ message: 'Success' }, '200']);\n}\n\nexport const router = express.Router();\nrouter.post('/', line.middleware(config), getMessage);\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1567143212613
  },
  "{\"sourceRoot\":\"/Users/lacto/workspace/test/src\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/lacto/workspace/test\",\"filename\":\"/Users/lacto/workspace/test/src/dialogflow.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/lacto/workspace/test\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/lacto/workspace/test/src",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/lacto/workspace/test",
      "filename": "/Users/lacto/workspace/test/src/dialogflow.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/lacto/workspace/test",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-object-rest-spread",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/lacto/workspace/test/src/dialogflow.js",
        "plugins": [
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/lacto/workspace/test/src/dialogflow.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/lacto/workspace/test/src",
        "sourceFileName": "dialogflow.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getSum = getSum;\nexports.router = void 0;\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _dialogflowFulfillment = require(\"dialogflow-fulfillment\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nasync function getSum(req, res, next) {\n  const agent = new _dialogflowFulfillment.WebhookClient({\n    request: req,\n    response: res\n  });\n\n  function add(agent) {\n    const number = agent.parameters.number;\n    const number1 = agent.parameters.number1;\n    const sum = number + number1;\n    agent.add('ผลบวก = ' + sum);\n  }\n\n  let intentMap = new Map();\n  intentMap.set('AddNumbers', add);\n  agent.handleRequest(intentMap);\n}\n\nconst router = _express.default.Router();\n\nexports.router = router;\nrouter.post('/', getSum);\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRpYWxvZ2Zsb3cuanMiXSwibmFtZXMiOlsiZ2V0U3VtIiwicmVxIiwicmVzIiwibmV4dCIsImFnZW50IiwiV2ViaG9va0NsaWVudCIsInJlcXVlc3QiLCJyZXNwb25zZSIsImFkZCIsIm51bWJlciIsInBhcmFtZXRlcnMiLCJudW1iZXIxIiwic3VtIiwiaW50ZW50TWFwIiwiTWFwIiwic2V0IiwiaGFuZGxlUmVxdWVzdCIsInJvdXRlciIsImV4cHJlc3MiLCJSb3V0ZXIiLCJwb3N0Il0sIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUFBOztBQUNBOzs7O0FBRU8sZUFBZUEsTUFBZixDQUFzQkMsR0FBdEIsRUFBMkJDLEdBQTNCLEVBQWdDQyxJQUFoQyxFQUFzQztBQUMzQyxRQUFNQyxLQUFLLEdBQUcsSUFBSUMsb0NBQUosQ0FBa0I7QUFBRUMsSUFBQUEsT0FBTyxFQUFFTCxHQUFYO0FBQWdCTSxJQUFBQSxRQUFRLEVBQUVMO0FBQTFCLEdBQWxCLENBQWQ7O0FBQ0EsV0FBU00sR0FBVCxDQUFhSixLQUFiLEVBQW9CO0FBQ2xCLFVBQU1LLE1BQU0sR0FBR0wsS0FBSyxDQUFDTSxVQUFOLENBQWlCRCxNQUFoQztBQUNBLFVBQU1FLE9BQU8sR0FBR1AsS0FBSyxDQUFDTSxVQUFOLENBQWlCQyxPQUFqQztBQUNBLFVBQU1DLEdBQUcsR0FBR0gsTUFBTSxHQUFHRSxPQUFyQjtBQUNBUCxJQUFBQSxLQUFLLENBQUNJLEdBQU4sQ0FBVSxhQUFhSSxHQUF2QjtBQUNEOztBQUVELE1BQUlDLFNBQVMsR0FBRyxJQUFJQyxHQUFKLEVBQWhCO0FBQ0FELEVBQUFBLFNBQVMsQ0FBQ0UsR0FBVixDQUFjLFlBQWQsRUFBNEJQLEdBQTVCO0FBQ0FKLEVBQUFBLEtBQUssQ0FBQ1ksYUFBTixDQUFvQkgsU0FBcEI7QUFDRDs7QUFDTSxNQUFNSSxNQUFNLEdBQUdDLGlCQUFRQyxNQUFSLEVBQWY7OztBQUNQRixNQUFNLENBQUNHLElBQVAsQ0FBWSxHQUFaLEVBQWlCcEIsTUFBakIiLCJzb3VyY2VSb290IjoiL1VzZXJzL2xhY3RvL3dvcmtzcGFjZS90ZXN0L3NyYyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBleHByZXNzIGZyb20gJ2V4cHJlc3MnO1xuaW1wb3J0IHsgV2ViaG9va0NsaWVudCB9IGZyb20gJ2RpYWxvZ2Zsb3ctZnVsZmlsbG1lbnQnO1xuXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gZ2V0U3VtKHJlcSwgcmVzLCBuZXh0KSB7XG4gIGNvbnN0IGFnZW50ID0gbmV3IFdlYmhvb2tDbGllbnQoeyByZXF1ZXN0OiByZXEsIHJlc3BvbnNlOiByZXN9KTtcbiAgZnVuY3Rpb24gYWRkKGFnZW50KSB7XG4gICAgY29uc3QgbnVtYmVyID0gYWdlbnQucGFyYW1ldGVycy5udW1iZXI7XG4gICAgY29uc3QgbnVtYmVyMSA9IGFnZW50LnBhcmFtZXRlcnMubnVtYmVyMTtcbiAgICBjb25zdCBzdW0gPSBudW1iZXIgKyBudW1iZXIxO1xuICAgIGFnZW50LmFkZCgn4Lic4Lil4Lia4Lin4LiBID0gJyArIHN1bSk7XG4gIH1cblxuICBsZXQgaW50ZW50TWFwID0gbmV3IE1hcCgpO1xuICBpbnRlbnRNYXAuc2V0KCdBZGROdW1iZXJzJywgYWRkKTtcbiAgYWdlbnQuaGFuZGxlUmVxdWVzdChpbnRlbnRNYXApO1xufVxuZXhwb3J0IGNvbnN0IHJvdXRlciA9IGV4cHJlc3MuUm91dGVyKCk7XG5yb3V0ZXIucG9zdCgnLycsIGdldFN1bSk7IFxuIl19",
    "map": {
      "version": 3,
      "sources": [
        "dialogflow.js"
      ],
      "names": [
        "getSum",
        "req",
        "res",
        "next",
        "agent",
        "WebhookClient",
        "request",
        "response",
        "add",
        "number",
        "parameters",
        "number1",
        "sum",
        "intentMap",
        "Map",
        "set",
        "handleRequest",
        "router",
        "express",
        "Router",
        "post"
      ],
      "mappings": ";;;;;;;;AAAA;;AACA;;;;AAEO,eAAeA,MAAf,CAAsBC,GAAtB,EAA2BC,GAA3B,EAAgCC,IAAhC,EAAsC;AAC3C,QAAMC,KAAK,GAAG,IAAIC,oCAAJ,CAAkB;AAAEC,IAAAA,OAAO,EAAEL,GAAX;AAAgBM,IAAAA,QAAQ,EAAEL;AAA1B,GAAlB,CAAd;;AACA,WAASM,GAAT,CAAaJ,KAAb,EAAoB;AAClB,UAAMK,MAAM,GAAGL,KAAK,CAACM,UAAN,CAAiBD,MAAhC;AACA,UAAME,OAAO,GAAGP,KAAK,CAACM,UAAN,CAAiBC,OAAjC;AACA,UAAMC,GAAG,GAAGH,MAAM,GAAGE,OAArB;AACAP,IAAAA,KAAK,CAACI,GAAN,CAAU,aAAaI,GAAvB;AACD;;AAED,MAAIC,SAAS,GAAG,IAAIC,GAAJ,EAAhB;AACAD,EAAAA,SAAS,CAACE,GAAV,CAAc,YAAd,EAA4BP,GAA5B;AACAJ,EAAAA,KAAK,CAACY,aAAN,CAAoBH,SAApB;AACD;;AACM,MAAMI,MAAM,GAAGC,iBAAQC,MAAR,EAAf;;;AACPF,MAAM,CAACG,IAAP,CAAY,GAAZ,EAAiBpB,MAAjB",
      "sourceRoot": "/Users/lacto/workspace/test/src",
      "sourcesContent": [
        "import express from 'express';\nimport { WebhookClient } from 'dialogflow-fulfillment';\n\nexport async function getSum(req, res, next) {\n  const agent = new WebhookClient({ request: req, response: res});\n  function add(agent) {\n    const number = agent.parameters.number;\n    const number1 = agent.parameters.number1;\n    const sum = number + number1;\n    agent.add('ผลบวก = ' + sum);\n  }\n\n  let intentMap = new Map();\n  intentMap.set('AddNumbers', add);\n  agent.handleRequest(intentMap);\n}\nexport const router = express.Router();\nrouter.post('/', getSum); \n"
      ]
    },
    "sourceType": "script",
    "mtime": 1567160202109
  },
  "{\"sourceRoot\":\"/Users/lacto/workspace/test/src\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/lacto/workspace/test\",\"filename\":\"/Users/lacto/workspace/test/src/dialogflow.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/lacto/workspace/test\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/lacto/workspace/test/src",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/lacto/workspace/test",
      "filename": "/Users/lacto/workspace/test/src/dialogflow.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/lacto/workspace/test",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-object-rest-spread",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/lacto/workspace/test/src/dialogflow.js",
        "plugins": [
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/lacto/workspace/test/src/dialogflow.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/lacto/workspace/test/src",
        "sourceFileName": "dialogflow.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getSum = getSum;\nexports.router = void 0;\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _dialogflowFulfillment = require(\"dialogflow-fulfillment\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nasync function getSum(req, res, next) {\n  const agent = new _dialogflowFulfillment.WebhookClient({\n    request: req,\n    response: res\n  });\n\n  function add(agent) {\n    const number = agent.parameters.number;\n    const number1 = agent.parameters.number1;\n    const sum = number + number1;\n    agent.add('ผลบวก = ' + sum);\n  }\n\n  let intentMap = new Map();\n  intentMap.set('AddNumbers', add);\n  agent.handleRequest(intentMap);\n}\n\nconst router = _express.default.Router();\n\nexports.router = router;\nrouter.post('/', getSum);\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRpYWxvZ2Zsb3cuanMiXSwibmFtZXMiOlsiZ2V0U3VtIiwicmVxIiwicmVzIiwibmV4dCIsImFnZW50IiwiV2ViaG9va0NsaWVudCIsInJlcXVlc3QiLCJyZXNwb25zZSIsImFkZCIsIm51bWJlciIsInBhcmFtZXRlcnMiLCJudW1iZXIxIiwic3VtIiwiaW50ZW50TWFwIiwiTWFwIiwic2V0IiwiaGFuZGxlUmVxdWVzdCIsInJvdXRlciIsImV4cHJlc3MiLCJSb3V0ZXIiLCJwb3N0Il0sIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUFBOztBQUNBOzs7O0FBRU8sZUFBZUEsTUFBZixDQUFzQkMsR0FBdEIsRUFBMkJDLEdBQTNCLEVBQWdDQyxJQUFoQyxFQUFzQztBQUMzQyxRQUFNQyxLQUFLLEdBQUcsSUFBSUMsb0NBQUosQ0FBa0I7QUFBRUMsSUFBQUEsT0FBTyxFQUFFTCxHQUFYO0FBQWdCTSxJQUFBQSxRQUFRLEVBQUVMO0FBQTFCLEdBQWxCLENBQWQ7O0FBQ0EsV0FBU00sR0FBVCxDQUFhSixLQUFiLEVBQW9CO0FBQ2xCLFVBQU1LLE1BQU0sR0FBR0wsS0FBSyxDQUFDTSxVQUFOLENBQWlCRCxNQUFoQztBQUNBLFVBQU1FLE9BQU8sR0FBR1AsS0FBSyxDQUFDTSxVQUFOLENBQWlCQyxPQUFqQztBQUNBLFVBQU1DLEdBQUcsR0FBR0gsTUFBTSxHQUFHRSxPQUFyQjtBQUNBUCxJQUFBQSxLQUFLLENBQUNJLEdBQU4sQ0FBVSxhQUFhSSxHQUF2QjtBQUNEOztBQUVELE1BQUlDLFNBQVMsR0FBRyxJQUFJQyxHQUFKLEVBQWhCO0FBQ0FELEVBQUFBLFNBQVMsQ0FBQ0UsR0FBVixDQUFjLFlBQWQsRUFBNEJQLEdBQTVCO0FBQ0FKLEVBQUFBLEtBQUssQ0FBQ1ksYUFBTixDQUFvQkgsU0FBcEI7QUFDRDs7QUFDTSxNQUFNSSxNQUFNLEdBQUdDLGlCQUFRQyxNQUFSLEVBQWY7OztBQUNQRixNQUFNLENBQUNHLElBQVAsQ0FBWSxHQUFaLEVBQWlCcEIsTUFBakIiLCJzb3VyY2VSb290IjoiL1VzZXJzL2xhY3RvL3dvcmtzcGFjZS90ZXN0L3NyYyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBleHByZXNzIGZyb20gJ2V4cHJlc3MnO1xuaW1wb3J0IHsgV2ViaG9va0NsaWVudCB9IGZyb20gJ2RpYWxvZ2Zsb3ctZnVsZmlsbG1lbnQnO1xuXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gZ2V0U3VtKHJlcSwgcmVzLCBuZXh0KSB7XG4gIGNvbnN0IGFnZW50ID0gbmV3IFdlYmhvb2tDbGllbnQoeyByZXF1ZXN0OiByZXEsIHJlc3BvbnNlOiByZXN9KTtcbiAgZnVuY3Rpb24gYWRkKGFnZW50KSB7XG4gICAgY29uc3QgbnVtYmVyID0gYWdlbnQucGFyYW1ldGVycy5udW1iZXI7XG4gICAgY29uc3QgbnVtYmVyMSA9IGFnZW50LnBhcmFtZXRlcnMubnVtYmVyMTtcbiAgICBjb25zdCBzdW0gPSBudW1iZXIgKyBudW1iZXIxO1xuICAgIGFnZW50LmFkZCgn4Lic4Lil4Lia4Lin4LiBID0gJyArIHN1bSk7XG4gIH1cblxuICBsZXQgaW50ZW50TWFwID0gbmV3IE1hcCgpO1xuICBpbnRlbnRNYXAuc2V0KCdBZGROdW1iZXJzJywgYWRkKTtcbiAgYWdlbnQuaGFuZGxlUmVxdWVzdChpbnRlbnRNYXApO1xufVxuZXhwb3J0IGNvbnN0IHJvdXRlciA9IGV4cHJlc3MuUm91dGVyKCk7XG5yb3V0ZXIucG9zdCgnLycsIGdldFN1bSk7IFxuIl19",
    "map": {
      "version": 3,
      "sources": [
        "dialogflow.js"
      ],
      "names": [
        "getSum",
        "req",
        "res",
        "next",
        "agent",
        "WebhookClient",
        "request",
        "response",
        "add",
        "number",
        "parameters",
        "number1",
        "sum",
        "intentMap",
        "Map",
        "set",
        "handleRequest",
        "router",
        "express",
        "Router",
        "post"
      ],
      "mappings": ";;;;;;;;AAAA;;AACA;;;;AAEO,eAAeA,MAAf,CAAsBC,GAAtB,EAA2BC,GAA3B,EAAgCC,IAAhC,EAAsC;AAC3C,QAAMC,KAAK,GAAG,IAAIC,oCAAJ,CAAkB;AAAEC,IAAAA,OAAO,EAAEL,GAAX;AAAgBM,IAAAA,QAAQ,EAAEL;AAA1B,GAAlB,CAAd;;AACA,WAASM,GAAT,CAAaJ,KAAb,EAAoB;AAClB,UAAMK,MAAM,GAAGL,KAAK,CAACM,UAAN,CAAiBD,MAAhC;AACA,UAAME,OAAO,GAAGP,KAAK,CAACM,UAAN,CAAiBC,OAAjC;AACA,UAAMC,GAAG,GAAGH,MAAM,GAAGE,OAArB;AACAP,IAAAA,KAAK,CAACI,GAAN,CAAU,aAAaI,GAAvB;AACD;;AAED,MAAIC,SAAS,GAAG,IAAIC,GAAJ,EAAhB;AACAD,EAAAA,SAAS,CAACE,GAAV,CAAc,YAAd,EAA4BP,GAA5B;AACAJ,EAAAA,KAAK,CAACY,aAAN,CAAoBH,SAApB;AACD;;AACM,MAAMI,MAAM,GAAGC,iBAAQC,MAAR,EAAf;;;AACPF,MAAM,CAACG,IAAP,CAAY,GAAZ,EAAiBpB,MAAjB",
      "sourceRoot": "/Users/lacto/workspace/test/src",
      "sourcesContent": [
        "import express from 'express';\nimport { WebhookClient } from 'dialogflow-fulfillment';\n\nexport async function getSum(req, res, next) {\n  const agent = new WebhookClient({ request: req, response: res});\n  function add(agent) {\n    const number = agent.parameters.number;\n    const number1 = agent.parameters.number1;\n    const sum = number + number1;\n    agent.add('ผลบวก = ' + sum);\n  }\n\n  let intentMap = new Map();\n  intentMap.set('AddNumbers', add);\n  agent.handleRequest(intentMap);\n}\nexport const router = express.Router();\nrouter.post('/', getSum); \n"
      ]
    },
    "sourceType": "script",
    "mtime": 1567160202109
  },
  "{\"sourceRoot\":\"/Users/lacto/workspace/test/src\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/lacto/workspace/test\",\"filename\":\"/Users/lacto/workspace/test/src/sequence.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/lacto/workspace/test\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/lacto/workspace/test/src",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/lacto/workspace/test",
      "filename": "/Users/lacto/workspace/test/src/sequence.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/lacto/workspace/test",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-object-rest-spread",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/lacto/workspace/test/src/sequence.js",
        "plugins": [
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/lacto/workspace/test/src/sequence.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/lacto/workspace/test/src",
        "sourceFileName": "sequence.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getNumbers = getNumbers;\nexports.router = void 0;\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nasync function getNumbers(req, res, next) {\n  try {\n    let result = 3;\n    let list = [];\n\n    for (let i = 1; i <= 7; i++) {\n      list.push(result);\n      result = result + i * 2;\n    }\n\n    next([{\n      data: {\n        x: list[0],\n        y: list[5],\n        z: list[6]\n      }\n    }, 200]);\n  } catch (err) {\n    next({\n      message: err.message\n    }, 400);\n  }\n}\n\nconst router = _express.default.Router();\n\nexports.router = router;\nrouter.get('/', getNumbers);\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNlcXVlbmNlLmpzIl0sIm5hbWVzIjpbImdldE51bWJlcnMiLCJyZXEiLCJyZXMiLCJuZXh0IiwicmVzdWx0IiwibGlzdCIsImkiLCJwdXNoIiwiZGF0YSIsIngiLCJ5IiwieiIsImVyciIsIm1lc3NhZ2UiLCJyb3V0ZXIiLCJleHByZXNzIiwiUm91dGVyIiwiZ2V0Il0sIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUFBOzs7O0FBRU8sZUFBZUEsVUFBZixDQUEwQkMsR0FBMUIsRUFBK0JDLEdBQS9CLEVBQW9DQyxJQUFwQyxFQUEwQztBQUMvQyxNQUFJO0FBQ0YsUUFBSUMsTUFBTSxHQUFHLENBQWI7QUFDQSxRQUFJQyxJQUFJLEdBQUcsRUFBWDs7QUFDQSxTQUFLLElBQUlDLENBQUMsR0FBRyxDQUFiLEVBQWdCQSxDQUFDLElBQUksQ0FBckIsRUFBd0JBLENBQUMsRUFBekIsRUFBNkI7QUFDM0JELE1BQUFBLElBQUksQ0FBQ0UsSUFBTCxDQUFVSCxNQUFWO0FBQ0FBLE1BQUFBLE1BQU0sR0FBR0EsTUFBTSxHQUFJRSxDQUFDLEdBQUcsQ0FBdkI7QUFDRDs7QUFDREgsSUFBQUEsSUFBSSxDQUFDLENBQUM7QUFDSkssTUFBQUEsSUFBSSxFQUFFO0FBQ0pDLFFBQUFBLENBQUMsRUFBRUosSUFBSSxDQUFDLENBQUQsQ0FESDtBQUVKSyxRQUFBQSxDQUFDLEVBQUVMLElBQUksQ0FBQyxDQUFELENBRkg7QUFHSk0sUUFBQUEsQ0FBQyxFQUFFTixJQUFJLENBQUMsQ0FBRDtBQUhIO0FBREYsS0FBRCxFQU1GLEdBTkUsQ0FBRCxDQUFKO0FBT0QsR0FkRCxDQWNFLE9BQU9PLEdBQVAsRUFBWTtBQUNaVCxJQUFBQSxJQUFJLENBQUM7QUFBRVUsTUFBQUEsT0FBTyxFQUFFRCxHQUFHLENBQUNDO0FBQWYsS0FBRCxFQUEyQixHQUEzQixDQUFKO0FBQ0Q7QUFDRjs7QUFFTSxNQUFNQyxNQUFNLEdBQUdDLGlCQUFRQyxNQUFSLEVBQWY7OztBQUNQRixNQUFNLENBQUNHLEdBQVAsQ0FBVyxHQUFYLEVBQWdCakIsVUFBaEIiLCJzb3VyY2VSb290IjoiL1VzZXJzL2xhY3RvL3dvcmtzcGFjZS90ZXN0L3NyYyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBleHByZXNzIGZyb20gJ2V4cHJlc3MnO1xuXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gZ2V0TnVtYmVycyhyZXEsIHJlcywgbmV4dCkge1xuICB0cnkge1xuICAgIGxldCByZXN1bHQgPSAzO1xuICAgIGxldCBsaXN0ID0gW107XG4gICAgZm9yIChsZXQgaSA9IDE7IGkgPD0gNzsgaSsrKSB7XG4gICAgICBsaXN0LnB1c2gocmVzdWx0KTtcbiAgICAgIHJlc3VsdCA9IHJlc3VsdCArIChpICogMik7XG4gICAgfVxuICAgIG5leHQoW3tcbiAgICAgIGRhdGE6IHtcbiAgICAgICAgeDogbGlzdFswXSxcbiAgICAgICAgeTogbGlzdFs1XSxcbiAgICAgICAgejogbGlzdFs2XSxcbiAgICAgIH1cbiAgICB9LCAyMDBdKTtcbiAgfSBjYXRjaCAoZXJyKSB7XG4gICAgbmV4dCh7IG1lc3NhZ2U6IGVyci5tZXNzYWdlIH0sIDQwMCk7XG4gIH1cbn1cblxuZXhwb3J0IGNvbnN0IHJvdXRlciA9IGV4cHJlc3MuUm91dGVyKCk7XG5yb3V0ZXIuZ2V0KCcvJywgZ2V0TnVtYmVycyk7Il19",
    "map": {
      "version": 3,
      "sources": [
        "sequence.js"
      ],
      "names": [
        "getNumbers",
        "req",
        "res",
        "next",
        "result",
        "list",
        "i",
        "push",
        "data",
        "x",
        "y",
        "z",
        "err",
        "message",
        "router",
        "express",
        "Router",
        "get"
      ],
      "mappings": ";;;;;;;;AAAA;;;;AAEO,eAAeA,UAAf,CAA0BC,GAA1B,EAA+BC,GAA/B,EAAoCC,IAApC,EAA0C;AAC/C,MAAI;AACF,QAAIC,MAAM,GAAG,CAAb;AACA,QAAIC,IAAI,GAAG,EAAX;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAI,CAArB,EAAwBA,CAAC,EAAzB,EAA6B;AAC3BD,MAAAA,IAAI,CAACE,IAAL,CAAUH,MAAV;AACAA,MAAAA,MAAM,GAAGA,MAAM,GAAIE,CAAC,GAAG,CAAvB;AACD;;AACDH,IAAAA,IAAI,CAAC,CAAC;AACJK,MAAAA,IAAI,EAAE;AACJC,QAAAA,CAAC,EAAEJ,IAAI,CAAC,CAAD,CADH;AAEJK,QAAAA,CAAC,EAAEL,IAAI,CAAC,CAAD,CAFH;AAGJM,QAAAA,CAAC,EAAEN,IAAI,CAAC,CAAD;AAHH;AADF,KAAD,EAMF,GANE,CAAD,CAAJ;AAOD,GAdD,CAcE,OAAOO,GAAP,EAAY;AACZT,IAAAA,IAAI,CAAC;AAAEU,MAAAA,OAAO,EAAED,GAAG,CAACC;AAAf,KAAD,EAA2B,GAA3B,CAAJ;AACD;AACF;;AAEM,MAAMC,MAAM,GAAGC,iBAAQC,MAAR,EAAf;;;AACPF,MAAM,CAACG,GAAP,CAAW,GAAX,EAAgBjB,UAAhB",
      "sourceRoot": "/Users/lacto/workspace/test/src",
      "sourcesContent": [
        "import express from 'express';\n\nexport async function getNumbers(req, res, next) {\n  try {\n    let result = 3;\n    let list = [];\n    for (let i = 1; i <= 7; i++) {\n      list.push(result);\n      result = result + (i * 2);\n    }\n    next([{\n      data: {\n        x: list[0],\n        y: list[5],\n        z: list[6],\n      }\n    }, 200]);\n  } catch (err) {\n    next({ message: err.message }, 400);\n  }\n}\n\nexport const router = express.Router();\nrouter.get('/', getNumbers);"
      ]
    },
    "sourceType": "script",
    "mtime": 1567240460453
  },
  "{\"sourceRoot\":\"/Users/lacto/workspace/test/src\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/lacto/workspace/test\",\"filename\":\"/Users/lacto/workspace/test/src/sequence.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/lacto/workspace/test\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/lacto/workspace/test/src",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/lacto/workspace/test",
      "filename": "/Users/lacto/workspace/test/src/sequence.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/lacto/workspace/test",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-object-rest-spread",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/lacto/workspace/test/src/sequence.js",
        "plugins": [
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/lacto/workspace/test/src/sequence.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/lacto/workspace/test/src",
        "sourceFileName": "sequence.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getNumbers = getNumbers;\nexports.router = void 0;\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nasync function getNumbers(req, res, next) {\n  try {\n    let result = 3;\n    let list = [];\n\n    for (let i = 1; i <= 7; i++) {\n      list.push(result);\n      result = result + i * 2;\n    }\n\n    next([{\n      data: {\n        x: list[0],\n        y: list[5],\n        z: list[6]\n      }\n    }, 200]);\n  } catch (err) {\n    next({\n      message: err.message\n    }, 400);\n  }\n}\n\nconst router = _express.default.Router();\n\nexports.router = router;\nrouter.get('/', getNumbers);\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNlcXVlbmNlLmpzIl0sIm5hbWVzIjpbImdldE51bWJlcnMiLCJyZXEiLCJyZXMiLCJuZXh0IiwicmVzdWx0IiwibGlzdCIsImkiLCJwdXNoIiwiZGF0YSIsIngiLCJ5IiwieiIsImVyciIsIm1lc3NhZ2UiLCJyb3V0ZXIiLCJleHByZXNzIiwiUm91dGVyIiwiZ2V0Il0sIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUFBOzs7O0FBRU8sZUFBZUEsVUFBZixDQUEwQkMsR0FBMUIsRUFBK0JDLEdBQS9CLEVBQW9DQyxJQUFwQyxFQUEwQztBQUMvQyxNQUFJO0FBQ0YsUUFBSUMsTUFBTSxHQUFHLENBQWI7QUFDQSxRQUFJQyxJQUFJLEdBQUcsRUFBWDs7QUFDQSxTQUFLLElBQUlDLENBQUMsR0FBRyxDQUFiLEVBQWdCQSxDQUFDLElBQUksQ0FBckIsRUFBd0JBLENBQUMsRUFBekIsRUFBNkI7QUFDM0JELE1BQUFBLElBQUksQ0FBQ0UsSUFBTCxDQUFVSCxNQUFWO0FBQ0FBLE1BQUFBLE1BQU0sR0FBR0EsTUFBTSxHQUFJRSxDQUFDLEdBQUcsQ0FBdkI7QUFDRDs7QUFDREgsSUFBQUEsSUFBSSxDQUFDLENBQUM7QUFDSkssTUFBQUEsSUFBSSxFQUFFO0FBQ0pDLFFBQUFBLENBQUMsRUFBRUosSUFBSSxDQUFDLENBQUQsQ0FESDtBQUVKSyxRQUFBQSxDQUFDLEVBQUVMLElBQUksQ0FBQyxDQUFELENBRkg7QUFHSk0sUUFBQUEsQ0FBQyxFQUFFTixJQUFJLENBQUMsQ0FBRDtBQUhIO0FBREYsS0FBRCxFQU1GLEdBTkUsQ0FBRCxDQUFKO0FBT0QsR0FkRCxDQWNFLE9BQU9PLEdBQVAsRUFBWTtBQUNaVCxJQUFBQSxJQUFJLENBQUM7QUFBRVUsTUFBQUEsT0FBTyxFQUFFRCxHQUFHLENBQUNDO0FBQWYsS0FBRCxFQUEyQixHQUEzQixDQUFKO0FBQ0Q7QUFDRjs7QUFFTSxNQUFNQyxNQUFNLEdBQUdDLGlCQUFRQyxNQUFSLEVBQWY7OztBQUNQRixNQUFNLENBQUNHLEdBQVAsQ0FBVyxHQUFYLEVBQWdCakIsVUFBaEIiLCJzb3VyY2VSb290IjoiL1VzZXJzL2xhY3RvL3dvcmtzcGFjZS90ZXN0L3NyYyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBleHByZXNzIGZyb20gJ2V4cHJlc3MnO1xuXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gZ2V0TnVtYmVycyhyZXEsIHJlcywgbmV4dCkge1xuICB0cnkge1xuICAgIGxldCByZXN1bHQgPSAzO1xuICAgIGxldCBsaXN0ID0gW107XG4gICAgZm9yIChsZXQgaSA9IDE7IGkgPD0gNzsgaSsrKSB7XG4gICAgICBsaXN0LnB1c2gocmVzdWx0KTtcbiAgICAgIHJlc3VsdCA9IHJlc3VsdCArIChpICogMik7XG4gICAgfVxuICAgIG5leHQoW3tcbiAgICAgIGRhdGE6IHtcbiAgICAgICAgeDogbGlzdFswXSxcbiAgICAgICAgeTogbGlzdFs1XSxcbiAgICAgICAgejogbGlzdFs2XSxcbiAgICAgIH1cbiAgICB9LCAyMDBdKTtcbiAgfSBjYXRjaCAoZXJyKSB7XG4gICAgbmV4dCh7IG1lc3NhZ2U6IGVyci5tZXNzYWdlIH0sIDQwMCk7XG4gIH1cbn1cblxuZXhwb3J0IGNvbnN0IHJvdXRlciA9IGV4cHJlc3MuUm91dGVyKCk7XG5yb3V0ZXIuZ2V0KCcvJywgZ2V0TnVtYmVycyk7Il19",
    "map": {
      "version": 3,
      "sources": [
        "sequence.js"
      ],
      "names": [
        "getNumbers",
        "req",
        "res",
        "next",
        "result",
        "list",
        "i",
        "push",
        "data",
        "x",
        "y",
        "z",
        "err",
        "message",
        "router",
        "express",
        "Router",
        "get"
      ],
      "mappings": ";;;;;;;;AAAA;;;;AAEO,eAAeA,UAAf,CAA0BC,GAA1B,EAA+BC,GAA/B,EAAoCC,IAApC,EAA0C;AAC/C,MAAI;AACF,QAAIC,MAAM,GAAG,CAAb;AACA,QAAIC,IAAI,GAAG,EAAX;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAI,CAArB,EAAwBA,CAAC,EAAzB,EAA6B;AAC3BD,MAAAA,IAAI,CAACE,IAAL,CAAUH,MAAV;AACAA,MAAAA,MAAM,GAAGA,MAAM,GAAIE,CAAC,GAAG,CAAvB;AACD;;AACDH,IAAAA,IAAI,CAAC,CAAC;AACJK,MAAAA,IAAI,EAAE;AACJC,QAAAA,CAAC,EAAEJ,IAAI,CAAC,CAAD,CADH;AAEJK,QAAAA,CAAC,EAAEL,IAAI,CAAC,CAAD,CAFH;AAGJM,QAAAA,CAAC,EAAEN,IAAI,CAAC,CAAD;AAHH;AADF,KAAD,EAMF,GANE,CAAD,CAAJ;AAOD,GAdD,CAcE,OAAOO,GAAP,EAAY;AACZT,IAAAA,IAAI,CAAC;AAAEU,MAAAA,OAAO,EAAED,GAAG,CAACC;AAAf,KAAD,EAA2B,GAA3B,CAAJ;AACD;AACF;;AAEM,MAAMC,MAAM,GAAGC,iBAAQC,MAAR,EAAf;;;AACPF,MAAM,CAACG,GAAP,CAAW,GAAX,EAAgBjB,UAAhB",
      "sourceRoot": "/Users/lacto/workspace/test/src",
      "sourcesContent": [
        "import express from 'express';\n\nexport async function getNumbers(req, res, next) {\n  try {\n    let result = 3;\n    let list = [];\n    for (let i = 1; i <= 7; i++) {\n      list.push(result);\n      result = result + (i * 2);\n    }\n    next([{\n      data: {\n        x: list[0],\n        y: list[5],\n        z: list[6],\n      }\n    }, 200]);\n  } catch (err) {\n    next({ message: err.message }, 400);\n  }\n}\n\nexport const router = express.Router();\nrouter.get('/', getNumbers);"
      ]
    },
    "sourceType": "script",
    "mtime": 1567240460453
  },
  "{\"sourceRoot\":\"/Users/lacto/workspace/scg-api/src\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/lacto/workspace/scg-api\",\"filename\":\"/Users/lacto/workspace/scg-api/src/index.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/lacto/workspace/scg-api\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/lacto/workspace/scg-api/src",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/lacto/workspace/scg-api",
      "filename": "/Users/lacto/workspace/scg-api/src/index.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/lacto/workspace/scg-api",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-object-rest-spread",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/lacto/workspace/scg-api/src/index.js",
        "plugins": [
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/lacto/workspace/scg-api/src/index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/lacto/workspace/scg-api/src",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _cors = _interopRequireDefault(require(\"cors\"));\n\nvar _googlemap = require(\"./googlemap.js\");\n\nvar _linebot = require(\"./linebot.js\");\n\nvar _dialogflow = require(\"./dialogflow.js\");\n\nvar _sequence = require(\"./sequence.js\");\n\nvar _bodyParser = _interopRequireDefault(require(\"body-parser\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst app = (0, _express.default)();\n\nconst jsonParser = _bodyParser.default.json({\n  limit: '25mb'\n});\n\nconst urlencode = _bodyParser.default.urlencoded({\n  extended: true\n});\n\nconst prefix = '/scg/api';\napp.use((0, _cors.default)());\napp.use(function (req, res, next) {\n  res.header(\"Access-Control-Allow-Origin\", \"*\"); // update to match the domain you will make the request from\n\n  res.header(\"Access-Control-Allow-Headers\", \"Origin, X-Requested-With, Content-Type, Accept\");\n  next();\n});\napp.use(`${prefix}/search`, [jsonParser, urlencode], _googlemap.router);\napp.use(`${prefix}/bot`, _linebot.router);\napp.use(`${prefix}/sequence`, _sequence.router);\napp.use(`${prefix}/dialogflow`, [jsonParser, urlencode], _dialogflow.router);\napp.use(([body, status], req, res, next) => {\n  res.status(status).json(body);\n  next();\n});\napp.listen(3002, function () {\n  console.log(\"Listening on port 3002!\");\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbImFwcCIsImpzb25QYXJzZXIiLCJib2R5UGFyc2VyIiwianNvbiIsImxpbWl0IiwidXJsZW5jb2RlIiwidXJsZW5jb2RlZCIsImV4dGVuZGVkIiwicHJlZml4IiwidXNlIiwicmVxIiwicmVzIiwibmV4dCIsImhlYWRlciIsImdvb2dsZU1hcCIsImxpbmVCb3QiLCJzZXF1ZW5jZSIsImRpYWxvZ2Zsb3ciLCJib2R5Iiwic3RhdHVzIiwibGlzdGVuIiwiY29uc29sZSIsImxvZyJdLCJtYXBwaW5ncyI6Ijs7QUFBQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7OztBQUNBLE1BQU1BLEdBQUcsR0FBRyx1QkFBWjs7QUFDQSxNQUFNQyxVQUFVLEdBQUdDLG9CQUFXQyxJQUFYLENBQWdCO0FBQUVDLEVBQUFBLEtBQUssRUFBRTtBQUFULENBQWhCLENBQW5COztBQUNBLE1BQU1DLFNBQVMsR0FBR0gsb0JBQVdJLFVBQVgsQ0FBc0I7QUFBRUMsRUFBQUEsUUFBUSxFQUFFO0FBQVosQ0FBdEIsQ0FBbEI7O0FBQ0EsTUFBTUMsTUFBTSxHQUFHLFVBQWY7QUFDQVIsR0FBRyxDQUFDUyxHQUFKLENBQVEsb0JBQVI7QUFDQVQsR0FBRyxDQUFDUyxHQUFKLENBQVEsVUFBU0MsR0FBVCxFQUFjQyxHQUFkLEVBQW1CQyxJQUFuQixFQUF5QjtBQUMvQkQsRUFBQUEsR0FBRyxDQUFDRSxNQUFKLENBQVcsNkJBQVgsRUFBMEMsR0FBMUMsRUFEK0IsQ0FDaUI7O0FBQ2hERixFQUFBQSxHQUFHLENBQUNFLE1BQUosQ0FBVyw4QkFBWCxFQUEyQyxnREFBM0M7QUFDQUQsRUFBQUEsSUFBSTtBQUNMLENBSkQ7QUFLQVosR0FBRyxDQUFDUyxHQUFKLENBQVMsR0FBRUQsTUFBTyxTQUFsQixFQUE0QixDQUFDUCxVQUFELEVBQWFJLFNBQWIsQ0FBNUIsRUFBcURTLGlCQUFyRDtBQUNBZCxHQUFHLENBQUNTLEdBQUosQ0FBUyxHQUFFRCxNQUFPLE1BQWxCLEVBQXlCTyxlQUF6QjtBQUNBZixHQUFHLENBQUNTLEdBQUosQ0FBUyxHQUFFRCxNQUFPLFdBQWxCLEVBQThCUSxnQkFBOUI7QUFDQWhCLEdBQUcsQ0FBQ1MsR0FBSixDQUFTLEdBQUVELE1BQU8sYUFBbEIsRUFBZ0MsQ0FBQ1AsVUFBRCxFQUFhSSxTQUFiLENBQWhDLEVBQXlEWSxrQkFBekQ7QUFFQWpCLEdBQUcsQ0FBQ1MsR0FBSixDQUFRLENBQUMsQ0FBQ1MsSUFBRCxFQUFPQyxNQUFQLENBQUQsRUFBaUJULEdBQWpCLEVBQXNCQyxHQUF0QixFQUEyQkMsSUFBM0IsS0FBb0M7QUFDMUNELEVBQUFBLEdBQUcsQ0FBQ1EsTUFBSixDQUFXQSxNQUFYLEVBQW1CaEIsSUFBbkIsQ0FBd0JlLElBQXhCO0FBQ0FOLEVBQUFBLElBQUk7QUFDTCxDQUhEO0FBS0FaLEdBQUcsQ0FBQ29CLE1BQUosQ0FBVyxJQUFYLEVBQWlCLFlBQVk7QUFDM0JDLEVBQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZLHlCQUFaO0FBQ0QsQ0FGRCIsInNvdXJjZVJvb3QiOiIvVXNlcnMvbGFjdG8vd29ya3NwYWNlL3NjZy1hcGkvc3JjIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGV4cHJlc3MgZnJvbSAnZXhwcmVzcyc7XG5pbXBvcnQgY29ycyBmcm9tICdjb3JzJztcbmltcG9ydCB7IHJvdXRlciBhcyBnb29nbGVNYXAgfSBmcm9tICcuL2dvb2dsZW1hcC5qcyc7XG5pbXBvcnQgeyByb3V0ZXIgYXMgbGluZUJvdCB9IGZyb20gJy4vbGluZWJvdC5qcyc7XG5pbXBvcnQgeyByb3V0ZXIgYXMgZGlhbG9nZmxvdyB9IGZyb20gJy4vZGlhbG9nZmxvdy5qcyc7XG5pbXBvcnQgeyByb3V0ZXIgYXMgc2VxdWVuY2UgfSBmcm9tICcuL3NlcXVlbmNlLmpzJztcbmltcG9ydCBib2R5UGFyc2VyIGZyb20gJ2JvZHktcGFyc2VyJztcbmNvbnN0IGFwcCA9IGV4cHJlc3MoKTtcbmNvbnN0IGpzb25QYXJzZXIgPSBib2R5UGFyc2VyLmpzb24oeyBsaW1pdDogJzI1bWInIH0pO1xuY29uc3QgdXJsZW5jb2RlID0gYm9keVBhcnNlci51cmxlbmNvZGVkKHsgZXh0ZW5kZWQ6IHRydWUgfSk7XG5jb25zdCBwcmVmaXggPSAnL3NjZy9hcGknXG5hcHAudXNlKGNvcnMoKSk7XG5hcHAudXNlKGZ1bmN0aW9uKHJlcSwgcmVzLCBuZXh0KSB7XG4gIHJlcy5oZWFkZXIoXCJBY2Nlc3MtQ29udHJvbC1BbGxvdy1PcmlnaW5cIiwgXCIqXCIpOyAvLyB1cGRhdGUgdG8gbWF0Y2ggdGhlIGRvbWFpbiB5b3Ugd2lsbCBtYWtlIHRoZSByZXF1ZXN0IGZyb21cbiAgcmVzLmhlYWRlcihcIkFjY2Vzcy1Db250cm9sLUFsbG93LUhlYWRlcnNcIiwgXCJPcmlnaW4sIFgtUmVxdWVzdGVkLVdpdGgsIENvbnRlbnQtVHlwZSwgQWNjZXB0XCIpO1xuICBuZXh0KCk7XG59KTtcbmFwcC51c2UoYCR7cHJlZml4fS9zZWFyY2hgLCBbanNvblBhcnNlciwgdXJsZW5jb2RlXSwgZ29vZ2xlTWFwKTtcbmFwcC51c2UoYCR7cHJlZml4fS9ib3RgLCBsaW5lQm90KTtcbmFwcC51c2UoYCR7cHJlZml4fS9zZXF1ZW5jZWAsIHNlcXVlbmNlKTtcbmFwcC51c2UoYCR7cHJlZml4fS9kaWFsb2dmbG93YCwgW2pzb25QYXJzZXIsIHVybGVuY29kZV0sIGRpYWxvZ2Zsb3cpO1xuXG5hcHAudXNlKChbYm9keSwgc3RhdHVzXSwgcmVxLCByZXMsIG5leHQpID0+IHtcbiAgcmVzLnN0YXR1cyhzdGF0dXMpLmpzb24oYm9keSk7XG4gIG5leHQoKTtcbn0pO1xuXG5hcHAubGlzdGVuKDMwMDIsIGZ1bmN0aW9uICgpIHtcbiAgY29uc29sZS5sb2coXCJMaXN0ZW5pbmcgb24gcG9ydCAzMDAyIVwiKVxufSk7Il19",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "app",
        "jsonParser",
        "bodyParser",
        "json",
        "limit",
        "urlencode",
        "urlencoded",
        "extended",
        "prefix",
        "use",
        "req",
        "res",
        "next",
        "header",
        "googleMap",
        "lineBot",
        "sequence",
        "dialogflow",
        "body",
        "status",
        "listen",
        "console",
        "log"
      ],
      "mappings": ";;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;AACA,MAAMA,GAAG,GAAG,uBAAZ;;AACA,MAAMC,UAAU,GAAGC,oBAAWC,IAAX,CAAgB;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAAhB,CAAnB;;AACA,MAAMC,SAAS,GAAGH,oBAAWI,UAAX,CAAsB;AAAEC,EAAAA,QAAQ,EAAE;AAAZ,CAAtB,CAAlB;;AACA,MAAMC,MAAM,GAAG,UAAf;AACAR,GAAG,CAACS,GAAJ,CAAQ,oBAAR;AACAT,GAAG,CAACS,GAAJ,CAAQ,UAASC,GAAT,EAAcC,GAAd,EAAmBC,IAAnB,EAAyB;AAC/BD,EAAAA,GAAG,CAACE,MAAJ,CAAW,6BAAX,EAA0C,GAA1C,EAD+B,CACiB;;AAChDF,EAAAA,GAAG,CAACE,MAAJ,CAAW,8BAAX,EAA2C,gDAA3C;AACAD,EAAAA,IAAI;AACL,CAJD;AAKAZ,GAAG,CAACS,GAAJ,CAAS,GAAED,MAAO,SAAlB,EAA4B,CAACP,UAAD,EAAaI,SAAb,CAA5B,EAAqDS,iBAArD;AACAd,GAAG,CAACS,GAAJ,CAAS,GAAED,MAAO,MAAlB,EAAyBO,eAAzB;AACAf,GAAG,CAACS,GAAJ,CAAS,GAAED,MAAO,WAAlB,EAA8BQ,gBAA9B;AACAhB,GAAG,CAACS,GAAJ,CAAS,GAAED,MAAO,aAAlB,EAAgC,CAACP,UAAD,EAAaI,SAAb,CAAhC,EAAyDY,kBAAzD;AAEAjB,GAAG,CAACS,GAAJ,CAAQ,CAAC,CAACS,IAAD,EAAOC,MAAP,CAAD,EAAiBT,GAAjB,EAAsBC,GAAtB,EAA2BC,IAA3B,KAAoC;AAC1CD,EAAAA,GAAG,CAACQ,MAAJ,CAAWA,MAAX,EAAmBhB,IAAnB,CAAwBe,IAAxB;AACAN,EAAAA,IAAI;AACL,CAHD;AAKAZ,GAAG,CAACoB,MAAJ,CAAW,IAAX,EAAiB,YAAY;AAC3BC,EAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ;AACD,CAFD",
      "sourceRoot": "/Users/lacto/workspace/scg-api/src",
      "sourcesContent": [
        "import express from 'express';\nimport cors from 'cors';\nimport { router as googleMap } from './googlemap.js';\nimport { router as lineBot } from './linebot.js';\nimport { router as dialogflow } from './dialogflow.js';\nimport { router as sequence } from './sequence.js';\nimport bodyParser from 'body-parser';\nconst app = express();\nconst jsonParser = bodyParser.json({ limit: '25mb' });\nconst urlencode = bodyParser.urlencoded({ extended: true });\nconst prefix = '/scg/api'\napp.use(cors());\napp.use(function(req, res, next) {\n  res.header(\"Access-Control-Allow-Origin\", \"*\"); // update to match the domain you will make the request from\n  res.header(\"Access-Control-Allow-Headers\", \"Origin, X-Requested-With, Content-Type, Accept\");\n  next();\n});\napp.use(`${prefix}/search`, [jsonParser, urlencode], googleMap);\napp.use(`${prefix}/bot`, lineBot);\napp.use(`${prefix}/sequence`, sequence);\napp.use(`${prefix}/dialogflow`, [jsonParser, urlencode], dialogflow);\n\napp.use(([body, status], req, res, next) => {\n  res.status(status).json(body);\n  next();\n});\n\napp.listen(3002, function () {\n  console.log(\"Listening on port 3002!\")\n});"
      ]
    },
    "sourceType": "script",
    "mtime": 1567329865295
  },
  "{\"sourceRoot\":\"/Users/lacto/workspace/scg-api/src\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/lacto/workspace/scg-api\",\"filename\":\"/Users/lacto/workspace/scg-api/src/googlemap.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/lacto/workspace/scg-api\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/lacto/workspace/scg-api/src",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/lacto/workspace/scg-api",
      "filename": "/Users/lacto/workspace/scg-api/src/googlemap.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/lacto/workspace/scg-api",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-object-rest-spread",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/lacto/workspace/scg-api/src/googlemap.js",
        "plugins": [
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/lacto/workspace/scg-api/src/googlemap.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/lacto/workspace/scg-api/src",
        "sourceFileName": "googlemap.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getSearch = getSearch;\nexports.router = void 0;\n\nvar _http = require(\"./http.js\");\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nasync function getSearch(req, res, next) {\n  try {\n    const {\n      params\n    } = req;\n    const googleApiUrl = `https://maps.googleapis.com/maps/api/place/textsearch/json?query=restaurants+in+${params.area}&key=AIzaSyB9rJC8alNU5ijowpiazLwYyT6QtLJo7kU`;\n    const response = await _http.http.get(googleApiUrl);\n\n    if (response && response.statusCode === 200) {\n      const results = response.body.results;\n      next([{\n        body: results\n      }, response.statusCode]);\n    } else {\n      next([{\n        message: status\n      }, response.statusCode]);\n    }\n  } catch (err) {\n    next({\n      message: err.message\n    }, 400);\n  }\n}\n\nconst router = _express.default.Router();\n\nexports.router = router;\nrouter.get('/restaurants/:area', getSearch);\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImdvb2dsZW1hcC5qcyJdLCJuYW1lcyI6WyJnZXRTZWFyY2giLCJyZXEiLCJyZXMiLCJuZXh0IiwicGFyYW1zIiwiZ29vZ2xlQXBpVXJsIiwiYXJlYSIsInJlc3BvbnNlIiwiaHR0cCIsImdldCIsInN0YXR1c0NvZGUiLCJyZXN1bHRzIiwiYm9keSIsIm1lc3NhZ2UiLCJzdGF0dXMiLCJlcnIiLCJyb3V0ZXIiLCJleHByZXNzIiwiUm91dGVyIl0sIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUNBOztBQUNBOzs7O0FBRU8sZUFBZUEsU0FBZixDQUF5QkMsR0FBekIsRUFBOEJDLEdBQTlCLEVBQW1DQyxJQUFuQyxFQUF5QztBQUM5QyxNQUFJO0FBQ0YsVUFBTTtBQUFFQyxNQUFBQTtBQUFGLFFBQWFILEdBQW5CO0FBQ0EsVUFBTUksWUFBWSxHQUFJLG1GQUFrRkQsTUFBTSxDQUFDRSxJQUFLLDhDQUFwSDtBQUNBLFVBQU1DLFFBQVEsR0FBRyxNQUFNQyxXQUFLQyxHQUFMLENBQVNKLFlBQVQsQ0FBdkI7O0FBQ0EsUUFBSUUsUUFBUSxJQUFJQSxRQUFRLENBQUNHLFVBQVQsS0FBd0IsR0FBeEMsRUFBNkM7QUFDM0MsWUFBTUMsT0FBTyxHQUFHSixRQUFRLENBQUNLLElBQVQsQ0FBY0QsT0FBOUI7QUFDQVIsTUFBQUEsSUFBSSxDQUFDLENBQUM7QUFBRVMsUUFBQUEsSUFBSSxFQUFFRDtBQUFSLE9BQUQsRUFBb0JKLFFBQVEsQ0FBQ0csVUFBN0IsQ0FBRCxDQUFKO0FBQ0QsS0FIRCxNQUdPO0FBQ0xQLE1BQUFBLElBQUksQ0FBQyxDQUFDO0FBQUVVLFFBQUFBLE9BQU8sRUFBRUM7QUFBWCxPQUFELEVBQXNCUCxRQUFRLENBQUNHLFVBQS9CLENBQUQsQ0FBSjtBQUNEO0FBQ0YsR0FWRCxDQVVFLE9BQU9LLEdBQVAsRUFBWTtBQUNaWixJQUFBQSxJQUFJLENBQUM7QUFBRVUsTUFBQUEsT0FBTyxFQUFFRSxHQUFHLENBQUNGO0FBQWYsS0FBRCxFQUEyQixHQUEzQixDQUFKO0FBQ0Q7QUFDRjs7QUFFTSxNQUFNRyxNQUFNLEdBQUdDLGlCQUFRQyxNQUFSLEVBQWY7OztBQUNQRixNQUFNLENBQUNQLEdBQVAsQ0FBVyxvQkFBWCxFQUFpQ1QsU0FBakMiLCJzb3VyY2VSb290IjoiL1VzZXJzL2xhY3RvL3dvcmtzcGFjZS9zY2ctYXBpL3NyYyIsInNvdXJjZXNDb250ZW50IjpbIlxuaW1wb3J0IHsgaHR0cCB9IGZyb20gJy4vaHR0cC5qcyc7XG5pbXBvcnQgZXhwcmVzcyBmcm9tICdleHByZXNzJztcblxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGdldFNlYXJjaChyZXEsIHJlcywgbmV4dCkge1xuICB0cnkge1xuICAgIGNvbnN0IHsgcGFyYW1zIH0gPSByZXE7XG4gICAgY29uc3QgZ29vZ2xlQXBpVXJsID0gYGh0dHBzOi8vbWFwcy5nb29nbGVhcGlzLmNvbS9tYXBzL2FwaS9wbGFjZS90ZXh0c2VhcmNoL2pzb24/cXVlcnk9cmVzdGF1cmFudHMraW4rJHtwYXJhbXMuYXJlYX0ma2V5PUFJemFTeUI5ckpDOGFsTlU1aWpvd3BpYXpMd1l5VDZRdExKbzdrVWA7XG4gICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBodHRwLmdldChnb29nbGVBcGlVcmwpO1xuICAgIGlmIChyZXNwb25zZSAmJiByZXNwb25zZS5zdGF0dXNDb2RlID09PSAyMDApIHtcbiAgICAgIGNvbnN0IHJlc3VsdHMgPSByZXNwb25zZS5ib2R5LnJlc3VsdHM7XG4gICAgICBuZXh0KFt7IGJvZHk6IHJlc3VsdHMgfSwgcmVzcG9uc2Uuc3RhdHVzQ29kZV0pO1xuICAgIH0gZWxzZSB7XG4gICAgICBuZXh0KFt7IG1lc3NhZ2U6IHN0YXR1cyB9LCByZXNwb25zZS5zdGF0dXNDb2RlXSk7XG4gICAgfVxuICB9IGNhdGNoIChlcnIpIHtcbiAgICBuZXh0KHsgbWVzc2FnZTogZXJyLm1lc3NhZ2UgfSwgNDAwKTtcbiAgfVxufVxuXG5leHBvcnQgY29uc3Qgcm91dGVyID0gZXhwcmVzcy5Sb3V0ZXIoKTtcbnJvdXRlci5nZXQoJy9yZXN0YXVyYW50cy86YXJlYScsIGdldFNlYXJjaCk7Il19",
    "map": {
      "version": 3,
      "sources": [
        "googlemap.js"
      ],
      "names": [
        "getSearch",
        "req",
        "res",
        "next",
        "params",
        "googleApiUrl",
        "area",
        "response",
        "http",
        "get",
        "statusCode",
        "results",
        "body",
        "message",
        "status",
        "err",
        "router",
        "express",
        "Router"
      ],
      "mappings": ";;;;;;;;AACA;;AACA;;;;AAEO,eAAeA,SAAf,CAAyBC,GAAzB,EAA8BC,GAA9B,EAAmCC,IAAnC,EAAyC;AAC9C,MAAI;AACF,UAAM;AAAEC,MAAAA;AAAF,QAAaH,GAAnB;AACA,UAAMI,YAAY,GAAI,mFAAkFD,MAAM,CAACE,IAAK,8CAApH;AACA,UAAMC,QAAQ,GAAG,MAAMC,WAAKC,GAAL,CAASJ,YAAT,CAAvB;;AACA,QAAIE,QAAQ,IAAIA,QAAQ,CAACG,UAAT,KAAwB,GAAxC,EAA6C;AAC3C,YAAMC,OAAO,GAAGJ,QAAQ,CAACK,IAAT,CAAcD,OAA9B;AACAR,MAAAA,IAAI,CAAC,CAAC;AAAES,QAAAA,IAAI,EAAED;AAAR,OAAD,EAAoBJ,QAAQ,CAACG,UAA7B,CAAD,CAAJ;AACD,KAHD,MAGO;AACLP,MAAAA,IAAI,CAAC,CAAC;AAAEU,QAAAA,OAAO,EAAEC;AAAX,OAAD,EAAsBP,QAAQ,CAACG,UAA/B,CAAD,CAAJ;AACD;AACF,GAVD,CAUE,OAAOK,GAAP,EAAY;AACZZ,IAAAA,IAAI,CAAC;AAAEU,MAAAA,OAAO,EAAEE,GAAG,CAACF;AAAf,KAAD,EAA2B,GAA3B,CAAJ;AACD;AACF;;AAEM,MAAMG,MAAM,GAAGC,iBAAQC,MAAR,EAAf;;;AACPF,MAAM,CAACP,GAAP,CAAW,oBAAX,EAAiCT,SAAjC",
      "sourceRoot": "/Users/lacto/workspace/scg-api/src",
      "sourcesContent": [
        "\nimport { http } from './http.js';\nimport express from 'express';\n\nexport async function getSearch(req, res, next) {\n  try {\n    const { params } = req;\n    const googleApiUrl = `https://maps.googleapis.com/maps/api/place/textsearch/json?query=restaurants+in+${params.area}&key=AIzaSyB9rJC8alNU5ijowpiazLwYyT6QtLJo7kU`;\n    const response = await http.get(googleApiUrl);\n    if (response && response.statusCode === 200) {\n      const results = response.body.results;\n      next([{ body: results }, response.statusCode]);\n    } else {\n      next([{ message: status }, response.statusCode]);\n    }\n  } catch (err) {\n    next({ message: err.message }, 400);\n  }\n}\n\nexport const router = express.Router();\nrouter.get('/restaurants/:area', getSearch);"
      ]
    },
    "sourceType": "script",
    "mtime": 1566552146218
  },
  "{\"sourceRoot\":\"/Users/lacto/workspace/scg-api/src\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/lacto/workspace/scg-api\",\"filename\":\"/Users/lacto/workspace/scg-api/src/http.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/lacto/workspace/scg-api\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/lacto/workspace/scg-api/src",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/lacto/workspace/scg-api",
      "filename": "/Users/lacto/workspace/scg-api/src/http.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/lacto/workspace/scg-api",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-object-rest-spread",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/lacto/workspace/scg-api/src/http.js",
        "plugins": [
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/lacto/workspace/scg-api/src/http.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/lacto/workspace/scg-api/src",
        "sourceFileName": "http.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = exports.http = exports.Http = void 0;\n\nvar request = _interopRequireWildcard(require(\"then-request\"));\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }\n\nclass Http {\n  setAuthorization(options) {\n    if (!options.headers) options.headers = {}; // options.headers['Authorization'] = `Bearer ${config.api.token}`;\n    // options.json = {};\n\n    return options;\n  }\n\n  parseBody(response) {\n    response.body = JSON.parse(response.body);\n    return response;\n  }\n\n  async get(url, options = {}) {\n    options = this.setAuthorization(options);\n    let response = await request.default('GET', url, options);\n    return this.parseBody(response);\n  }\n\n  async post(url, options = {\n    json: {}\n  }) {\n    options = this.setAuthorization(options);\n    let response = await request.default('POST', url, options);\n    return this.parseBody(response);\n  }\n\n  async postManual(url, options = {\n    json: {}\n  }) {\n    let response = await request.default('POST', url, options);\n    return this.parseBody(response);\n  }\n\n  async delete(url, options = {}) {\n    options = this.setAuthorization(options);\n    let response = await request.default('DELETE', url, options);\n    return this.parseBody(response);\n  }\n\n}\n\nexports.Http = Http;\nconst http = new Http();\nexports.http = http;\nvar _default = http;\nexports.default = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImh0dHAuanMiXSwibmFtZXMiOlsiSHR0cCIsInNldEF1dGhvcml6YXRpb24iLCJvcHRpb25zIiwiaGVhZGVycyIsInBhcnNlQm9keSIsInJlc3BvbnNlIiwiYm9keSIsIkpTT04iLCJwYXJzZSIsImdldCIsInVybCIsInJlcXVlc3QiLCJkZWZhdWx0IiwicG9zdCIsImpzb24iLCJwb3N0TWFudWFsIiwiZGVsZXRlIiwiaHR0cCJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOzs7O0FBRU8sTUFBTUEsSUFBTixDQUFXO0FBQ2hCQyxFQUFBQSxnQkFBZ0IsQ0FBQ0MsT0FBRCxFQUFVO0FBQ3hCLFFBQUksQ0FBQ0EsT0FBTyxDQUFDQyxPQUFiLEVBQXNCRCxPQUFPLENBQUNDLE9BQVIsR0FBa0IsRUFBbEIsQ0FERSxDQUV4QjtBQUNBOztBQUNBLFdBQU9ELE9BQVA7QUFDRDs7QUFFREUsRUFBQUEsU0FBUyxDQUFDQyxRQUFELEVBQVc7QUFDbEJBLElBQUFBLFFBQVEsQ0FBQ0MsSUFBVCxHQUFnQkMsSUFBSSxDQUFDQyxLQUFMLENBQVdILFFBQVEsQ0FBQ0MsSUFBcEIsQ0FBaEI7QUFDQSxXQUFPRCxRQUFQO0FBQ0Q7O0FBRUQsUUFBTUksR0FBTixDQUFVQyxHQUFWLEVBQWVSLE9BQU8sR0FBRyxFQUF6QixFQUE2QjtBQUMzQkEsSUFBQUEsT0FBTyxHQUFHLEtBQUtELGdCQUFMLENBQXNCQyxPQUF0QixDQUFWO0FBQ0EsUUFBSUcsUUFBUSxHQUFHLE1BQU1NLE9BQU8sQ0FBQ0MsT0FBUixDQUFnQixLQUFoQixFQUF1QkYsR0FBdkIsRUFBNEJSLE9BQTVCLENBQXJCO0FBQ0EsV0FBTyxLQUFLRSxTQUFMLENBQWVDLFFBQWYsQ0FBUDtBQUNEOztBQUVELFFBQU1RLElBQU4sQ0FBV0gsR0FBWCxFQUFnQlIsT0FBTyxHQUFHO0FBQUVZLElBQUFBLElBQUksRUFBRTtBQUFSLEdBQTFCLEVBQXdDO0FBQ3RDWixJQUFBQSxPQUFPLEdBQUcsS0FBS0QsZ0JBQUwsQ0FBc0JDLE9BQXRCLENBQVY7QUFFQSxRQUFJRyxRQUFRLEdBQUcsTUFBTU0sT0FBTyxDQUFDQyxPQUFSLENBQWdCLE1BQWhCLEVBQXdCRixHQUF4QixFQUE2QlIsT0FBN0IsQ0FBckI7QUFDQSxXQUFPLEtBQUtFLFNBQUwsQ0FBZUMsUUFBZixDQUFQO0FBQ0Q7O0FBRUQsUUFBTVUsVUFBTixDQUFpQkwsR0FBakIsRUFBc0JSLE9BQU8sR0FBRztBQUFFWSxJQUFBQSxJQUFJLEVBQUU7QUFBUixHQUFoQyxFQUE4QztBQUM1QyxRQUFJVCxRQUFRLEdBQUcsTUFBTU0sT0FBTyxDQUFDQyxPQUFSLENBQWdCLE1BQWhCLEVBQXdCRixHQUF4QixFQUE2QlIsT0FBN0IsQ0FBckI7QUFDQSxXQUFPLEtBQUtFLFNBQUwsQ0FBZUMsUUFBZixDQUFQO0FBQ0Q7O0FBRUQsUUFBTVcsTUFBTixDQUFhTixHQUFiLEVBQWtCUixPQUFPLEdBQUcsRUFBNUIsRUFBZ0M7QUFDOUJBLElBQUFBLE9BQU8sR0FBRyxLQUFLRCxnQkFBTCxDQUFzQkMsT0FBdEIsQ0FBVjtBQUNBLFFBQUlHLFFBQVEsR0FBRyxNQUFNTSxPQUFPLENBQUNDLE9BQVIsQ0FBZ0IsUUFBaEIsRUFBMEJGLEdBQTFCLEVBQStCUixPQUEvQixDQUFyQjtBQUNBLFdBQU8sS0FBS0UsU0FBTCxDQUFlQyxRQUFmLENBQVA7QUFDRDs7QUFuQ2U7OztBQXNDWCxNQUFNWSxJQUFJLEdBQUcsSUFBSWpCLElBQUosRUFBYjs7ZUFDUWlCLEkiLCJzb3VyY2VSb290IjoiL1VzZXJzL2xhY3RvL3dvcmtzcGFjZS9zY2ctYXBpL3NyYyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAqIGFzIHJlcXVlc3QgZnJvbSAndGhlbi1yZXF1ZXN0JztcblxuZXhwb3J0IGNsYXNzIEh0dHAge1xuICBzZXRBdXRob3JpemF0aW9uKG9wdGlvbnMpIHtcbiAgICBpZiAoIW9wdGlvbnMuaGVhZGVycykgb3B0aW9ucy5oZWFkZXJzID0ge307XG4gICAgLy8gb3B0aW9ucy5oZWFkZXJzWydBdXRob3JpemF0aW9uJ10gPSBgQmVhcmVyICR7Y29uZmlnLmFwaS50b2tlbn1gO1xuICAgIC8vIG9wdGlvbnMuanNvbiA9IHt9O1xuICAgIHJldHVybiBvcHRpb25zO1xuICB9XG5cbiAgcGFyc2VCb2R5KHJlc3BvbnNlKSB7XG4gICAgcmVzcG9uc2UuYm9keSA9IEpTT04ucGFyc2UocmVzcG9uc2UuYm9keSk7XG4gICAgcmV0dXJuIHJlc3BvbnNlO1xuICB9XG5cbiAgYXN5bmMgZ2V0KHVybCwgb3B0aW9ucyA9IHt9KSB7XG4gICAgb3B0aW9ucyA9IHRoaXMuc2V0QXV0aG9yaXphdGlvbihvcHRpb25zKTtcbiAgICBsZXQgcmVzcG9uc2UgPSBhd2FpdCByZXF1ZXN0LmRlZmF1bHQoJ0dFVCcsIHVybCwgb3B0aW9ucyk7XG4gICAgcmV0dXJuIHRoaXMucGFyc2VCb2R5KHJlc3BvbnNlKTtcbiAgfVxuXG4gIGFzeW5jIHBvc3QodXJsLCBvcHRpb25zID0geyBqc29uOiB7fSB9KSB7XG4gICAgb3B0aW9ucyA9IHRoaXMuc2V0QXV0aG9yaXphdGlvbihvcHRpb25zKTtcblxuICAgIGxldCByZXNwb25zZSA9IGF3YWl0IHJlcXVlc3QuZGVmYXVsdCgnUE9TVCcsIHVybCwgb3B0aW9ucyk7XG4gICAgcmV0dXJuIHRoaXMucGFyc2VCb2R5KHJlc3BvbnNlKTtcbiAgfVxuXG4gIGFzeW5jIHBvc3RNYW51YWwodXJsLCBvcHRpb25zID0geyBqc29uOiB7fSB9KSB7XG4gICAgbGV0IHJlc3BvbnNlID0gYXdhaXQgcmVxdWVzdC5kZWZhdWx0KCdQT1NUJywgdXJsLCBvcHRpb25zKTtcbiAgICByZXR1cm4gdGhpcy5wYXJzZUJvZHkocmVzcG9uc2UpO1xuICB9XG5cbiAgYXN5bmMgZGVsZXRlKHVybCwgb3B0aW9ucyA9IHt9KSB7XG4gICAgb3B0aW9ucyA9IHRoaXMuc2V0QXV0aG9yaXphdGlvbihvcHRpb25zKTtcbiAgICBsZXQgcmVzcG9uc2UgPSBhd2FpdCByZXF1ZXN0LmRlZmF1bHQoJ0RFTEVURScsIHVybCwgb3B0aW9ucyk7XG4gICAgcmV0dXJuIHRoaXMucGFyc2VCb2R5KHJlc3BvbnNlKTtcbiAgfVxufVxuXG5leHBvcnQgY29uc3QgaHR0cCA9IG5ldyBIdHRwKCk7XG5leHBvcnQgZGVmYXVsdCBodHRwO1xuIl19",
    "map": {
      "version": 3,
      "sources": [
        "http.js"
      ],
      "names": [
        "Http",
        "setAuthorization",
        "options",
        "headers",
        "parseBody",
        "response",
        "body",
        "JSON",
        "parse",
        "get",
        "url",
        "request",
        "default",
        "post",
        "json",
        "postManual",
        "delete",
        "http"
      ],
      "mappings": ";;;;;;;AAAA;;;;AAEO,MAAMA,IAAN,CAAW;AAChBC,EAAAA,gBAAgB,CAACC,OAAD,EAAU;AACxB,QAAI,CAACA,OAAO,CAACC,OAAb,EAAsBD,OAAO,CAACC,OAAR,GAAkB,EAAlB,CADE,CAExB;AACA;;AACA,WAAOD,OAAP;AACD;;AAEDE,EAAAA,SAAS,CAACC,QAAD,EAAW;AAClBA,IAAAA,QAAQ,CAACC,IAAT,GAAgBC,IAAI,CAACC,KAAL,CAAWH,QAAQ,CAACC,IAApB,CAAhB;AACA,WAAOD,QAAP;AACD;;AAED,QAAMI,GAAN,CAAUC,GAAV,EAAeR,OAAO,GAAG,EAAzB,EAA6B;AAC3BA,IAAAA,OAAO,GAAG,KAAKD,gBAAL,CAAsBC,OAAtB,CAAV;AACA,QAAIG,QAAQ,GAAG,MAAMM,OAAO,CAACC,OAAR,CAAgB,KAAhB,EAAuBF,GAAvB,EAA4BR,OAA5B,CAArB;AACA,WAAO,KAAKE,SAAL,CAAeC,QAAf,CAAP;AACD;;AAED,QAAMQ,IAAN,CAAWH,GAAX,EAAgBR,OAAO,GAAG;AAAEY,IAAAA,IAAI,EAAE;AAAR,GAA1B,EAAwC;AACtCZ,IAAAA,OAAO,GAAG,KAAKD,gBAAL,CAAsBC,OAAtB,CAAV;AAEA,QAAIG,QAAQ,GAAG,MAAMM,OAAO,CAACC,OAAR,CAAgB,MAAhB,EAAwBF,GAAxB,EAA6BR,OAA7B,CAArB;AACA,WAAO,KAAKE,SAAL,CAAeC,QAAf,CAAP;AACD;;AAED,QAAMU,UAAN,CAAiBL,GAAjB,EAAsBR,OAAO,GAAG;AAAEY,IAAAA,IAAI,EAAE;AAAR,GAAhC,EAA8C;AAC5C,QAAIT,QAAQ,GAAG,MAAMM,OAAO,CAACC,OAAR,CAAgB,MAAhB,EAAwBF,GAAxB,EAA6BR,OAA7B,CAArB;AACA,WAAO,KAAKE,SAAL,CAAeC,QAAf,CAAP;AACD;;AAED,QAAMW,MAAN,CAAaN,GAAb,EAAkBR,OAAO,GAAG,EAA5B,EAAgC;AAC9BA,IAAAA,OAAO,GAAG,KAAKD,gBAAL,CAAsBC,OAAtB,CAAV;AACA,QAAIG,QAAQ,GAAG,MAAMM,OAAO,CAACC,OAAR,CAAgB,QAAhB,EAA0BF,GAA1B,EAA+BR,OAA/B,CAArB;AACA,WAAO,KAAKE,SAAL,CAAeC,QAAf,CAAP;AACD;;AAnCe;;;AAsCX,MAAMY,IAAI,GAAG,IAAIjB,IAAJ,EAAb;;eACQiB,I",
      "sourceRoot": "/Users/lacto/workspace/scg-api/src",
      "sourcesContent": [
        "import * as request from 'then-request';\n\nexport class Http {\n  setAuthorization(options) {\n    if (!options.headers) options.headers = {};\n    // options.headers['Authorization'] = `Bearer ${config.api.token}`;\n    // options.json = {};\n    return options;\n  }\n\n  parseBody(response) {\n    response.body = JSON.parse(response.body);\n    return response;\n  }\n\n  async get(url, options = {}) {\n    options = this.setAuthorization(options);\n    let response = await request.default('GET', url, options);\n    return this.parseBody(response);\n  }\n\n  async post(url, options = { json: {} }) {\n    options = this.setAuthorization(options);\n\n    let response = await request.default('POST', url, options);\n    return this.parseBody(response);\n  }\n\n  async postManual(url, options = { json: {} }) {\n    let response = await request.default('POST', url, options);\n    return this.parseBody(response);\n  }\n\n  async delete(url, options = {}) {\n    options = this.setAuthorization(options);\n    let response = await request.default('DELETE', url, options);\n    return this.parseBody(response);\n  }\n}\n\nexport const http = new Http();\nexport default http;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1567325213253
  },
  "{\"sourceRoot\":\"/Users/lacto/workspace/scg-api/src\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/lacto/workspace/scg-api\",\"filename\":\"/Users/lacto/workspace/scg-api/src/linebot.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/lacto/workspace/scg-api\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/lacto/workspace/scg-api/src",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/lacto/workspace/scg-api",
      "filename": "/Users/lacto/workspace/scg-api/src/linebot.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/lacto/workspace/scg-api",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-object-rest-spread",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/lacto/workspace/scg-api/src/linebot.js",
        "plugins": [
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/lacto/workspace/scg-api/src/linebot.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/lacto/workspace/scg-api/src",
        "sourceFileName": "linebot.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getMessage = getMessage;\nexports.router = void 0;\n\nvar line = _interopRequireWildcard(require(\"@line/bot-sdk\"));\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _config = _interopRequireDefault(require(\"./config.json\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }\n\nconst client = new line.Client(_config.default);\n\nasync function handleEvent(event) {\n  switch (event.type) {\n    case 'message':\n      const message = event.message;\n\n      switch (message.type) {\n        case 'text':\n          return handleText(message, event);\n\n        case 'image':\n          return handleImage(message, event);\n\n        case 'video':\n          return handleVideo(message, event);\n\n        case 'audio':\n          return handleAudio(message, event);\n\n        case 'location':\n          return handleLocation(message, event);\n\n        case 'sticker':\n          return handleSticker(message, event);\n\n        default:\n          throw new Error(`Unknown message: ${JSON.stringify(message)}`);\n      }\n\n    default:\n      throw new Error(`Unknown event: ${JSON.stringify(event)}`);\n  }\n}\n\nasync function handleText(message, event) {\n  return client.replyMessage(event.replyToken, {\n    type: 'text',\n    text: message.text\n  });\n}\n\nfunction handleImage(message, event) {\n  return client.replyMessage(event.replyToken, {\n    type: 'text',\n    text: 'Got Image'\n  });\n}\n\nfunction handleVideo(message, event) {\n  return client.replyMessage(event.replyToken, {\n    type: 'text',\n    text: 'Got Video'\n  });\n}\n\nfunction handleAudio(message, event) {\n  return client.replyMessage(event.replyToken, {\n    type: 'text',\n    text: 'Got Audio'\n  });\n}\n\nfunction handleLocation(message, event) {\n  return client.replyMessage(event.replyToken, {\n    type: 'text',\n    text: 'Got Location'\n  });\n}\n\nfunction handleSticker(message, event) {\n  let result = {\n    type: 'sticker',\n    packageId: '11537',\n    stickerId: '52002759'\n  };\n  return client.pushMessage(event.source.userId, result);\n}\n\nasync function getMessage(req, res, next) {\n  if (!Array.isArray(req.body.events)) {\n    return res.status(500).end();\n  }\n\n  Promise.all(req.body.events.map(event => {\n    console.log('event', event);\n    return handleEvent(event);\n  })).then(() => res.end()).catch(err => {\n    console.error(err);\n    res.status(500).end();\n  });\n  next([{\n    message: 'Success'\n  }, '200']);\n}\n\nconst router = _express.default.Router();\n\nexports.router = router;\nrouter.post('/', line.middleware(_config.default), getMessage);\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpbmVib3QuanMiXSwibmFtZXMiOlsiY2xpZW50IiwibGluZSIsIkNsaWVudCIsImNvbmZpZyIsImhhbmRsZUV2ZW50IiwiZXZlbnQiLCJ0eXBlIiwibWVzc2FnZSIsImhhbmRsZVRleHQiLCJoYW5kbGVJbWFnZSIsImhhbmRsZVZpZGVvIiwiaGFuZGxlQXVkaW8iLCJoYW5kbGVMb2NhdGlvbiIsImhhbmRsZVN0aWNrZXIiLCJFcnJvciIsIkpTT04iLCJzdHJpbmdpZnkiLCJyZXBseU1lc3NhZ2UiLCJyZXBseVRva2VuIiwidGV4dCIsInJlc3VsdCIsInBhY2thZ2VJZCIsInN0aWNrZXJJZCIsInB1c2hNZXNzYWdlIiwic291cmNlIiwidXNlcklkIiwiZ2V0TWVzc2FnZSIsInJlcSIsInJlcyIsIm5leHQiLCJBcnJheSIsImlzQXJyYXkiLCJib2R5IiwiZXZlbnRzIiwic3RhdHVzIiwiZW5kIiwiUHJvbWlzZSIsImFsbCIsIm1hcCIsImNvbnNvbGUiLCJsb2ciLCJ0aGVuIiwiY2F0Y2giLCJlcnIiLCJlcnJvciIsInJvdXRlciIsImV4cHJlc3MiLCJSb3V0ZXIiLCJwb3N0IiwibWlkZGxld2FyZSJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBQTs7QUFDQTs7QUFDQTs7Ozs7O0FBQ0EsTUFBTUEsTUFBTSxHQUFHLElBQUlDLElBQUksQ0FBQ0MsTUFBVCxDQUFnQkMsZUFBaEIsQ0FBZjs7QUFFQSxlQUFlQyxXQUFmLENBQTJCQyxLQUEzQixFQUFrQztBQUNoQyxVQUFRQSxLQUFLLENBQUNDLElBQWQ7QUFDRSxTQUFLLFNBQUw7QUFDRSxZQUFNQyxPQUFPLEdBQUdGLEtBQUssQ0FBQ0UsT0FBdEI7O0FBQ0EsY0FBUUEsT0FBTyxDQUFDRCxJQUFoQjtBQUNFLGFBQUssTUFBTDtBQUNFLGlCQUFPRSxVQUFVLENBQUNELE9BQUQsRUFBVUYsS0FBVixDQUFqQjs7QUFDRixhQUFLLE9BQUw7QUFDRSxpQkFBT0ksV0FBVyxDQUFDRixPQUFELEVBQVVGLEtBQVYsQ0FB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RUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVlWLEdBQUcsQ0FBQ0ssSUFBSixDQUFTQyxNQUFULENBQWdCSyxHQUFoQixDQUFvQmpDLEtBQUssSUFBSTtBQUN2Q2tDLElBQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZLE9BQVosRUFBcUJuQyxLQUFyQjtBQUNBLFdBQU9ELFdBQVcsQ0FBQ0MsS0FBRCxDQUFsQjtBQUNELEdBSFcsQ0FBWixFQUlHb0MsSUFKSCxDQUlRLE1BQU1iLEdBQUcsQ0FBQ08sR0FBSixFQUpkLEVBS0dPLEtBTEgsQ0FLVUMsR0FBRCxJQUFTO0FBQ2RKLElBQUFBLE9BQU8sQ0FBQ0ssS0FBUixDQUFjRCxHQUFkO0FBQ0FmLElBQUFBLEdBQUcsQ0FBQ00sTUFBSixDQUFXLEdBQVgsRUFBZ0JDLEdBQWhCO0FBQ0QsR0FSSDtBQVVBTixFQUFBQSxJQUFJLENBQUMsQ0FBQztBQUFFdEIsSUFBQUEsT0FBTyxFQUFFO0FBQVgsR0FBRCxFQUF5QixLQUF6QixDQUFELENBQUo7QUFDRDs7QUFFTSxNQUFNc0MsTUFBTSxHQUFHQyxpQkFBUUMsTUFBUixFQUFmOzs7QUFDUEYsTUFBTSxDQUFDRyxJQUFQLENBQVksR0FBWixFQUFpQi9DLElBQUksQ0FBQ2dELFVBQUwsQ0FBZ0I5QyxlQUFoQixDQUFqQixFQUEwQ3VCLFVBQTFDIiwic291cmNlUm9vdCI6Ii9Vc2Vycy9sYWN0by93b3Jrc3BhY2Uvc2NnLWFwaS9zcmMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgKiBhcyBsaW5lIGZyb20gJ0BsaW5lL2JvdC1zZGsnO1xuaW1wb3J0IGV4cHJlc3MgZnJvbSAnZXhwcmVzcyc7XG5pbXBvcnQgY29uZmlnIGZyb20gJy4vY29uZmlnLmpzb24nO1xuY29uc3QgY2xpZW50ID0gbmV3IGxpbmUuQ2xpZW50KGNvbmZpZyk7XG5cbmFzeW5jIGZ1bmN0aW9uIGhhbmRsZUV2ZW50KGV2ZW50KSB7XG4gIHN3aXRjaCAoZXZlbnQudHlwZSkge1xuICAgIGNhc2UgJ21lc3NhZ2UnOlxuICAgICAgY29uc3QgbWVzc2FnZSA9IGV2ZW50Lm1lc3NhZ2U7XG4gICAgICBzd2l0Y2ggKG1lc3NhZ2UudHlwZSkge1xuICAgICAgICBjYXNlICd0ZXh0JzpcbiAgICAgICAgICByZXR1cm4gaGFuZGxlVGV4dChtZXNzYWdlLCBldmVudCk7XG4gICAgICAgIGNhc2UgJ2ltYWdlJzpcbiAgICAgICAgICByZXR1cm4gaGFuZGxlSW1hZ2UobWVzc2FnZSwgZXZlbnQpO1xuICAgICAgICBjYXNlICd2aWRlbyc6XG4gICAgICAgICAgcmV0dXJuIGhhbmRsZVZpZGVvKG1lc3NhZ2UsIGV2ZW50KTtcbiAgICAgICAgY2FzZSAnYXVkaW8nOlxuICAgICAgICAgIHJldHVybiBoYW5kbGVBdWRpbyhtZXNzYWdlLCBldmVudCk7XG4gICAgICAgIGNhc2UgJ2xvY2F0aW9uJzpcbiAgICAgICAgICByZXR1cm4gaGFuZGxlTG9jYXRpb24obWVzc2FnZSwgZXZlbnQpO1xuICAgICAgICBjYXNlICdzdGlja2VyJzpcbiAgICAgICAgICByZXR1cm4gaGFuZGxlU3RpY2tlcihtZXNzYWdlLCBldmVudCk7XG4gICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBVbmtub3duIG1lc3NhZ2U6ICR7SlNPTi5zdHJpbmdpZnkobWVzc2FnZSl9YCk7XG4gICAgICB9XG4gICAgZGVmYXVsdDpcbiAgICAgIHRocm93IG5ldyBFcnJvcihgVW5rbm93biBldmVudDogJHtKU09OLnN0cmluZ2lmeShldmVudCl9YCk7XG4gIH1cbn1cblxuYXN5bmMgZnVuY3Rpb24gaGFuZGxlVGV4dChtZXNzYWdlLCBldmVudCkge1xuICByZXR1cm4gY2xpZW50LnJlcGx5TWVzc2FnZShldmVudC5yZXBseVRva2VuLCB7IHR5cGU6ICd0ZXh0JywgdGV4dDogbWVzc2FnZS50ZXh0IH0pO1xufVxuXG5mdW5jdGlvbiBoYW5kbGVJbWFnZShtZXNzYWdlLCBldmVudCkge1xuICByZXR1cm4gY2xpZW50LnJlcGx5TWVzc2FnZShldmVudC5yZXBseVRva2VuLCB7IHR5cGU6ICd0ZXh0JywgdGV4dDogJ0dvdCBJbWFnZScgfSk7XG59XG5cbmZ1bmN0aW9uIGhhbmRsZVZpZGVvKG1lc3NhZ2UsIGV2ZW50KSB7XG4gIHJldHVybiBjbGllbnQucmVwbHlNZXNzYWdlKGV2ZW50LnJlcGx5VG9rZW4sIHsgdHlwZTogJ3RleHQnLCB0ZXh0OiAnR290IFZpZGVvJyB9KTtcbn1cblxuZnVuY3Rpb24gaGFuZGxlQXVkaW8obWVzc2FnZSwgZXZlbnQpIHtcbiAgcmV0dXJuIGNsaWVudC5yZXBseU1lc3NhZ2UoZXZlbnQucmVwbHlUb2tlbiwgeyB0eXBlOiAndGV4dCcsIHRleHQ6ICdHb3QgQXVkaW8nIH0pO1xufVxuXG5mdW5jdGlvbiBoYW5kbGVMb2NhdGlvbihtZXNzYWdlLCBldmVudCkge1xuICByZXR1cm4gY2xpZW50LnJlcGx5TWVzc2FnZShldmVudC5yZXBseVRva2VuLCB7IHR5cGU6ICd0ZXh0JywgdGV4dDogJ0dvdCBMb2NhdGlvbicgfSk7XG59XG5cbmZ1bmN0aW9uIGhhbmRsZVN0aWNrZXIobWVzc2FnZSwgZXZlbnQpIHtcbiAgbGV0IHJlc3VsdCA9IHtcbiAgICB0eXBlOiAnc3RpY2tlcicsXG4gICAgcGFja2FnZUlkOiAnMTE1MzcnLFxuICAgIHN0aWNrZXJJZDogJzUyMDAyNzU5J1xuICB9O1xuXG4gIHJldHVybiBjbGllbnQucHVzaE1lc3NhZ2UoZXZlbnQuc291cmNlLnVzZXJJZCwgcmVzdWx0KTtcbn1cblxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGdldE1lc3NhZ2UocmVxLCByZXMsIG5leHQpIHtcbiAgaWYgKCFBcnJheS5pc0FycmF5KHJlcS5ib2R5LmV2ZW50cykpIHtcbiAgICByZXR1cm4gcmVzLnN0YXR1cyg1MDApLmVuZCgpO1xuICB9XG4gIFByb21pc2UuYWxsKHJlcS5ib2R5LmV2ZW50cy5tYXAoZXZlbnQgPT4ge1xuICAgIGNvbnNvbGUubG9nKCdldmVudCcsIGV2ZW50KTtcbiAgICByZXR1cm4gaGFuZGxlRXZlbnQoZXZlbnQpO1xuICB9KSlcbiAgICAudGhlbigoKSA9PiByZXMuZW5kKCkpXG4gICAgLmNhdGNoKChlcnIpID0+IHtcbiAgICAgIGNvbnNvbGUuZXJyb3IoZXJyKTtcbiAgICAgIHJlcy5zdGF0dXMoNTAwKS5lbmQoKTtcbiAgICB9KTtcblxuICBuZXh0KFt7IG1lc3NhZ2U6ICdTdWNjZXNzJyB9LCAnMjAwJ10pO1xufVxuXG5leHBvcnQgY29uc3Qgcm91dGVyID0gZXhwcmVzcy5Sb3V0ZXIoKTtcbnJvdXRlci5wb3N0KCcvJywgbGluZS5taWRkbGV3YXJlKGNvbmZpZyksIGdldE1lc3NhZ2UpO1xuIl19",
    "map": {
      "version": 3,
      "sources": [
        "linebot.js"
      ],
      "names": [
        "client",
        "line",
        "Client",
        "config",
        "handleEvent",
        "event",
        "type",
        "message",
        "handleText",
        "handleImage",
        "handleVideo",
        "handleAudio",
        "handleLocation",
        "handleSticker",
        "Error",
        "JSON",
        "stringify",
        "replyMessage",
        "replyToken",
        "text",
        "result",
        "packageId",
        "stickerId",
        "pushMessage",
        "source",
        "userId",
        "getMessage",
        "req",
        "res",
        "next",
        "Array",
        "isArray",
        "body",
        "events",
        "status",
        "end",
        "Promise",
        "all",
        "map",
        "console",
        "log",
        "then",
        "catch",
        "err",
        "error",
        "router",
        "express",
        "Router",
        "post",
        "middleware"
      ],
      "mappings": "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",
      "sourceRoot": "/Users/lacto/workspace/scg-api/src",
      "sourcesContent": [
        "import * as line from '@line/bot-sdk';\nimport express from 'express';\nimport config from './config.json';\nconst client = new line.Client(config);\n\nasync function handleEvent(event) {\n  switch (event.type) {\n    case 'message':\n      const message = event.message;\n      switch (message.type) {\n        case 'text':\n          return handleText(message, event);\n        case 'image':\n          return handleImage(message, event);\n        case 'video':\n          return handleVideo(message, event);\n        case 'audio':\n          return handleAudio(message, event);\n        case 'location':\n          return handleLocation(message, event);\n        case 'sticker':\n          return handleSticker(message, event);\n        default:\n          throw new Error(`Unknown message: ${JSON.stringify(message)}`);\n      }\n    default:\n      throw new Error(`Unknown event: ${JSON.stringify(event)}`);\n  }\n}\n\nasync function handleText(message, event) {\n  return client.replyMessage(event.replyToken, { type: 'text', text: message.text });\n}\n\nfunction handleImage(message, event) {\n  return client.replyMessage(event.replyToken, { type: 'text', text: 'Got Image' });\n}\n\nfunction handleVideo(message, event) {\n  return client.replyMessage(event.replyToken, { type: 'text', text: 'Got Video' });\n}\n\nfunction handleAudio(message, event) {\n  return client.replyMessage(event.replyToken, { type: 'text', text: 'Got Audio' });\n}\n\nfunction handleLocation(message, event) {\n  return client.replyMessage(event.replyToken, { type: 'text', text: 'Got Location' });\n}\n\nfunction handleSticker(message, event) {\n  let result = {\n    type: 'sticker',\n    packageId: '11537',\n    stickerId: '52002759'\n  };\n\n  return client.pushMessage(event.source.userId, result);\n}\n\nexport async function getMessage(req, res, next) {\n  if (!Array.isArray(req.body.events)) {\n    return res.status(500).end();\n  }\n  Promise.all(req.body.events.map(event => {\n    console.log('event', event);\n    return handleEvent(event);\n  }))\n    .then(() => res.end())\n    .catch((err) => {\n      console.error(err);\n      res.status(500).end();\n    });\n\n  next([{ message: 'Success' }, '200']);\n}\n\nexport const router = express.Router();\nrouter.post('/', line.middleware(config), getMessage);\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1567143212613
  },
  "{\"sourceRoot\":\"/Users/lacto/workspace/scg-api/src\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/lacto/workspace/scg-api\",\"filename\":\"/Users/lacto/workspace/scg-api/src/dialogflow.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/lacto/workspace/scg-api\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/lacto/workspace/scg-api/src",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/lacto/workspace/scg-api",
      "filename": "/Users/lacto/workspace/scg-api/src/dialogflow.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/lacto/workspace/scg-api",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-object-rest-spread",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/lacto/workspace/scg-api/src/dialogflow.js",
        "plugins": [
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/lacto/workspace/scg-api/src/dialogflow.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/lacto/workspace/scg-api/src",
        "sourceFileName": "dialogflow.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getSum = getSum;\nexports.router = void 0;\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _dialogflowFulfillment = require(\"dialogflow-fulfillment\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nasync function getSum(req, res, next) {\n  const agent = new _dialogflowFulfillment.WebhookClient({\n    request: req,\n    response: res\n  });\n\n  function add(agent) {\n    const number = agent.parameters.number;\n    const number1 = agent.parameters.number1;\n    const sum = number + number1;\n    agent.add('ผลบวก = ' + sum);\n  }\n\n  let intentMap = new Map();\n  intentMap.set('AddNumbers', add);\n  agent.handleRequest(intentMap);\n}\n\nconst router = _express.default.Router();\n\nexports.router = router;\nrouter.post('/', getSum);\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRpYWxvZ2Zsb3cuanMiXSwibmFtZXMiOlsiZ2V0U3VtIiwicmVxIiwicmVzIiwibmV4dCIsImFnZW50IiwiV2ViaG9va0NsaWVudCIsInJlcXVlc3QiLCJyZXNwb25zZSIsImFkZCIsIm51bWJlciIsInBhcmFtZXRlcnMiLCJudW1iZXIxIiwic3VtIiwiaW50ZW50TWFwIiwiTWFwIiwic2V0IiwiaGFuZGxlUmVxdWVzdCIsInJvdXRlciIsImV4cHJlc3MiLCJSb3V0ZXIiLCJwb3N0Il0sIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUFBOztBQUNBOzs7O0FBRU8sZUFBZUEsTUFBZixDQUFzQkMsR0FBdEIsRUFBMkJDLEdBQTNCLEVBQWdDQyxJQUFoQyxFQUFzQztBQUMzQyxRQUFNQyxLQUFLLEdBQUcsSUFBSUMsb0NBQUosQ0FBa0I7QUFBRUMsSUFBQUEsT0FBTyxFQUFFTCxHQUFYO0FBQWdCTSxJQUFBQSxRQUFRLEVBQUVMO0FBQTFCLEdBQWxCLENBQWQ7O0FBQ0EsV0FBU00sR0FBVCxDQUFhSixLQUFiLEVBQW9CO0FBQ2xCLFVBQU1LLE1BQU0sR0FBR0wsS0FBSyxDQUFDTSxVQUFOLENBQWlCRCxNQUFoQztBQUNBLFVBQU1FLE9BQU8sR0FBR1AsS0FBSyxDQUFDTSxVQUFOLENBQWlCQyxPQUFqQztBQUNBLFVBQU1DLEdBQUcsR0FBR0gsTUFBTSxHQUFHRSxPQUFyQjtBQUNBUCxJQUFBQSxLQUFLLENBQUNJLEdBQU4sQ0FBVSxhQUFhSSxHQUF2QjtBQUNEOztBQUVELE1BQUlDLFNBQVMsR0FBRyxJQUFJQyxHQUFKLEVBQWhCO0FBQ0FELEVBQUFBLFNBQVMsQ0FBQ0UsR0FBVixDQUFjLFlBQWQsRUFBNEJQLEdBQTVCO0FBQ0FKLEVBQUFBLEtBQUssQ0FBQ1ksYUFBTixDQUFvQkgsU0FBcEI7QUFDRDs7QUFDTSxNQUFNSSxNQUFNLEdBQUdDLGlCQUFRQyxNQUFSLEVBQWY7OztBQUNQRixNQUFNLENBQUNHLElBQVAsQ0FBWSxHQUFaLEVBQWlCcEIsTUFBakIiLCJzb3VyY2VSb290IjoiL1VzZXJzL2xhY3RvL3dvcmtzcGFjZS9zY2ctYXBpL3NyYyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBleHByZXNzIGZyb20gJ2V4cHJlc3MnO1xuaW1wb3J0IHsgV2ViaG9va0NsaWVudCB9IGZyb20gJ2RpYWxvZ2Zsb3ctZnVsZmlsbG1lbnQnO1xuXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gZ2V0U3VtKHJlcSwgcmVzLCBuZXh0KSB7XG4gIGNvbnN0IGFnZW50ID0gbmV3IFdlYmhvb2tDbGllbnQoeyByZXF1ZXN0OiByZXEsIHJlc3BvbnNlOiByZXN9KTtcbiAgZnVuY3Rpb24gYWRkKGFnZW50KSB7XG4gICAgY29uc3QgbnVtYmVyID0gYWdlbnQucGFyYW1ldGVycy5udW1iZXI7XG4gICAgY29uc3QgbnVtYmVyMSA9IGFnZW50LnBhcmFtZXRlcnMubnVtYmVyMTtcbiAgICBjb25zdCBzdW0gPSBudW1iZXIgKyBudW1iZXIxO1xuICAgIGFnZW50LmFkZCgn4Lic4Lil4Lia4Lin4LiBID0gJyArIHN1bSk7XG4gIH1cblxuICBsZXQgaW50ZW50TWFwID0gbmV3IE1hcCgpO1xuICBpbnRlbnRNYXAuc2V0KCdBZGROdW1iZXJzJywgYWRkKTtcbiAgYWdlbnQuaGFuZGxlUmVxdWVzdChpbnRlbnRNYXApO1xufVxuZXhwb3J0IGNvbnN0IHJvdXRlciA9IGV4cHJlc3MuUm91dGVyKCk7XG5yb3V0ZXIucG9zdCgnLycsIGdldFN1bSk7IFxuIl19",
    "map": {
      "version": 3,
      "sources": [
        "dialogflow.js"
      ],
      "names": [
        "getSum",
        "req",
        "res",
        "next",
        "agent",
        "WebhookClient",
        "request",
        "response",
        "add",
        "number",
        "parameters",
        "number1",
        "sum",
        "intentMap",
        "Map",
        "set",
        "handleRequest",
        "router",
        "express",
        "Router",
        "post"
      ],
      "mappings": ";;;;;;;;AAAA;;AACA;;;;AAEO,eAAeA,MAAf,CAAsBC,GAAtB,EAA2BC,GAA3B,EAAgCC,IAAhC,EAAsC;AAC3C,QAAMC,KAAK,GAAG,IAAIC,oCAAJ,CAAkB;AAAEC,IAAAA,OAAO,EAAEL,GAAX;AAAgBM,IAAAA,QAAQ,EAAEL;AAA1B,GAAlB,CAAd;;AACA,WAASM,GAAT,CAAaJ,KAAb,EAAoB;AAClB,UAAMK,MAAM,GAAGL,KAAK,CAACM,UAAN,CAAiBD,MAAhC;AACA,UAAME,OAAO,GAAGP,KAAK,CAACM,UAAN,CAAiBC,OAAjC;AACA,UAAMC,GAAG,GAAGH,MAAM,GAAGE,OAArB;AACAP,IAAAA,KAAK,CAACI,GAAN,CAAU,aAAaI,GAAvB;AACD;;AAED,MAAIC,SAAS,GAAG,IAAIC,GAAJ,EAAhB;AACAD,EAAAA,SAAS,CAACE,GAAV,CAAc,YAAd,EAA4BP,GAA5B;AACAJ,EAAAA,KAAK,CAACY,aAAN,CAAoBH,SAApB;AACD;;AACM,MAAMI,MAAM,GAAGC,iBAAQC,MAAR,EAAf;;;AACPF,MAAM,CAACG,IAAP,CAAY,GAAZ,EAAiBpB,MAAjB",
      "sourceRoot": "/Users/lacto/workspace/scg-api/src",
      "sourcesContent": [
        "import express from 'express';\nimport { WebhookClient } from 'dialogflow-fulfillment';\n\nexport async function getSum(req, res, next) {\n  const agent = new WebhookClient({ request: req, response: res});\n  function add(agent) {\n    const number = agent.parameters.number;\n    const number1 = agent.parameters.number1;\n    const sum = number + number1;\n    agent.add('ผลบวก = ' + sum);\n  }\n\n  let intentMap = new Map();\n  intentMap.set('AddNumbers', add);\n  agent.handleRequest(intentMap);\n}\nexport const router = express.Router();\nrouter.post('/', getSum); \n"
      ]
    },
    "sourceType": "script",
    "mtime": 1567160202109
  },
  "{\"sourceRoot\":\"/Users/lacto/workspace/scg-api/src\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/lacto/workspace/scg-api\",\"filename\":\"/Users/lacto/workspace/scg-api/src/sequence.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/lacto/workspace/scg-api\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/lacto/workspace/scg-api/src",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/lacto/workspace/scg-api",
      "filename": "/Users/lacto/workspace/scg-api/src/sequence.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/lacto/workspace/scg-api",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-object-rest-spread",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/lacto/workspace/scg-api/src/sequence.js",
        "plugins": [
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/lacto/workspace/scg-api/src/sequence.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/lacto/workspace/scg-api/src",
        "sourceFileName": "sequence.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getNumbers = getNumbers;\nexports.router = void 0;\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nasync function getNumbers(req, res, next) {\n  try {\n    let result = 3;\n    let list = [];\n\n    for (let i = 1; i <= 7; i++) {\n      list.push(result);\n      result = result + i * 2;\n    }\n\n    next([{\n      data: {\n        x: list[0],\n        y: list[5],\n        z: list[6]\n      }\n    }, 200]);\n  } catch (err) {\n    next({\n      message: err.message\n    }, 400);\n  }\n}\n\nconst router = _express.default.Router();\n\nexports.router = router;\nrouter.get('/', getNumbers);\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNlcXVlbmNlLmpzIl0sIm5hbWVzIjpbImdldE51bWJlcnMiLCJyZXEiLCJyZXMiLCJuZXh0IiwicmVzdWx0IiwibGlzdCIsImkiLCJwdXNoIiwiZGF0YSIsIngiLCJ5IiwieiIsImVyciIsIm1lc3NhZ2UiLCJyb3V0ZXIiLCJleHByZXNzIiwiUm91dGVyIiwiZ2V0Il0sIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUFBOzs7O0FBRU8sZUFBZUEsVUFBZixDQUEwQkMsR0FBMUIsRUFBK0JDLEdBQS9CLEVBQW9DQyxJQUFwQyxFQUEwQztBQUMvQyxNQUFJO0FBQ0YsUUFBSUMsTUFBTSxHQUFHLENBQWI7QUFDQSxRQUFJQyxJQUFJLEdBQUcsRUFBWDs7QUFDQSxTQUFLLElBQUlDLENBQUMsR0FBRyxDQUFiLEVBQWdCQSxDQUFDLElBQUksQ0FBckIsRUFBd0JBLENBQUMsRUFBekIsRUFBNkI7QUFDM0JELE1BQUFBLElBQUksQ0FBQ0UsSUFBTCxDQUFVSCxNQUFWO0FBQ0FBLE1BQUFBLE1BQU0sR0FBR0EsTUFBTSxHQUFJRSxDQUFDLEdBQUcsQ0FBdkI7QUFDRDs7QUFDREgsSUFBQUEsSUFBSSxDQUFDLENBQUM7QUFDSkssTUFBQUEsSUFBSSxFQUFFO0FBQ0pDLFFBQUFBLENBQUMsRUFBRUosSUFBSSxDQUFDLENBQUQsQ0FESDtBQUVKSyxRQUFBQSxDQUFDLEVBQUVMLElBQUksQ0FBQyxDQUFELENBRkg7QUFHSk0sUUFBQUEsQ0FBQyxFQUFFTixJQUFJLENBQUMsQ0FBRDtBQUhIO0FBREYsS0FBRCxFQU1GLEdBTkUsQ0FBRCxDQUFKO0FBT0QsR0FkRCxDQWNFLE9BQU9PLEdBQVAsRUFBWTtBQUNaVCxJQUFBQSxJQUFJLENBQUM7QUFBRVUsTUFBQUEsT0FBTyxFQUFFRCxHQUFHLENBQUNDO0FBQWYsS0FBRCxFQUEyQixHQUEzQixDQUFKO0FBQ0Q7QUFDRjs7QUFFTSxNQUFNQyxNQUFNLEdBQUdDLGlCQUFRQyxNQUFSLEVBQWY7OztBQUNQRixNQUFNLENBQUNHLEdBQVAsQ0FBVyxHQUFYLEVBQWdCakIsVUFBaEIiLCJzb3VyY2VSb290IjoiL1VzZXJzL2xhY3RvL3dvcmtzcGFjZS9zY2ctYXBpL3NyYyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBleHByZXNzIGZyb20gJ2V4cHJlc3MnO1xuXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gZ2V0TnVtYmVycyhyZXEsIHJlcywgbmV4dCkge1xuICB0cnkge1xuICAgIGxldCByZXN1bHQgPSAzO1xuICAgIGxldCBsaXN0ID0gW107XG4gICAgZm9yIChsZXQgaSA9IDE7IGkgPD0gNzsgaSsrKSB7XG4gICAgICBsaXN0LnB1c2gocmVzdWx0KTtcbiAgICAgIHJlc3VsdCA9IHJlc3VsdCArIChpICogMik7XG4gICAgfVxuICAgIG5leHQoW3tcbiAgICAgIGRhdGE6IHtcbiAgICAgICAgeDogbGlzdFswXSxcbiAgICAgICAgeTogbGlzdFs1XSxcbiAgICAgICAgejogbGlzdFs2XSxcbiAgICAgIH1cbiAgICB9LCAyMDBdKTtcbiAgfSBjYXRjaCAoZXJyKSB7XG4gICAgbmV4dCh7IG1lc3NhZ2U6IGVyci5tZXNzYWdlIH0sIDQwMCk7XG4gIH1cbn1cblxuZXhwb3J0IGNvbnN0IHJvdXRlciA9IGV4cHJlc3MuUm91dGVyKCk7XG5yb3V0ZXIuZ2V0KCcvJywgZ2V0TnVtYmVycyk7Il19",
    "map": {
      "version": 3,
      "sources": [
        "sequence.js"
      ],
      "names": [
        "getNumbers",
        "req",
        "res",
        "next",
        "result",
        "list",
        "i",
        "push",
        "data",
        "x",
        "y",
        "z",
        "err",
        "message",
        "router",
        "express",
        "Router",
        "get"
      ],
      "mappings": ";;;;;;;;AAAA;;;;AAEO,eAAeA,UAAf,CAA0BC,GAA1B,EAA+BC,GAA/B,EAAoCC,IAApC,EAA0C;AAC/C,MAAI;AACF,QAAIC,MAAM,GAAG,CAAb;AACA,QAAIC,IAAI,GAAG,EAAX;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAI,CAArB,EAAwBA,CAAC,EAAzB,EAA6B;AAC3BD,MAAAA,IAAI,CAACE,IAAL,CAAUH,MAAV;AACAA,MAAAA,MAAM,GAAGA,MAAM,GAAIE,CAAC,GAAG,CAAvB;AACD;;AACDH,IAAAA,IAAI,CAAC,CAAC;AACJK,MAAAA,IAAI,EAAE;AACJC,QAAAA,CAAC,EAAEJ,IAAI,CAAC,CAAD,CADH;AAEJK,QAAAA,CAAC,EAAEL,IAAI,CAAC,CAAD,CAFH;AAGJM,QAAAA,CAAC,EAAEN,IAAI,CAAC,CAAD;AAHH;AADF,KAAD,EAMF,GANE,CAAD,CAAJ;AAOD,GAdD,CAcE,OAAOO,GAAP,EAAY;AACZT,IAAAA,IAAI,CAAC;AAAEU,MAAAA,OAAO,EAAED,GAAG,CAACC;AAAf,KAAD,EAA2B,GAA3B,CAAJ;AACD;AACF;;AAEM,MAAMC,MAAM,GAAGC,iBAAQC,MAAR,EAAf;;;AACPF,MAAM,CAACG,GAAP,CAAW,GAAX,EAAgBjB,UAAhB",
      "sourceRoot": "/Users/lacto/workspace/scg-api/src",
      "sourcesContent": [
        "import express from 'express';\n\nexport async function getNumbers(req, res, next) {\n  try {\n    let result = 3;\n    let list = [];\n    for (let i = 1; i <= 7; i++) {\n      list.push(result);\n      result = result + (i * 2);\n    }\n    next([{\n      data: {\n        x: list[0],\n        y: list[5],\n        z: list[6],\n      }\n    }, 200]);\n  } catch (err) {\n    next({ message: err.message }, 400);\n  }\n}\n\nexport const router = express.Router();\nrouter.get('/', getNumbers);"
      ]
    },
    "sourceType": "script",
    "mtime": 1567240460453
  },
  "{\"sourceRoot\":\"/Users/lacto/workspace/scg-api/src\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/lacto/workspace/scg-api\",\"filename\":\"/Users/lacto/workspace/scg-api/src/googlemap.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/lacto/workspace/scg-api\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/lacto/workspace/scg-api/src",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/lacto/workspace/scg-api",
      "filename": "/Users/lacto/workspace/scg-api/src/googlemap.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/lacto/workspace/scg-api",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-object-rest-spread",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/lacto/workspace/scg-api/src/googlemap.js",
        "plugins": [
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/lacto/workspace/scg-api/src/googlemap.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/lacto/workspace/scg-api/src",
        "sourceFileName": "googlemap.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getSearch = getSearch;\nexports.router = void 0;\n\nvar _http = require(\"./http.js\");\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nasync function getSearch(req, res, next) {\n  try {\n    const {\n      params\n    } = req;\n    const googleApiUrl = `https://maps.googleapis.com/maps/api/place/textsearch/json?query=restaurants+in+${params.area}&key=AIzaSyB9rJC8alNU5ijowpiazLwYyT6QtLJo7kU`;\n    const response = await _http.http.get(googleApiUrl);\n\n    if (response && response.statusCode === 200) {\n      const results = response.body.results;\n      next([{\n        data: results\n      }, response.statusCode]);\n    } else {\n      next([{\n        message: status\n      }, response.statusCode]);\n    }\n  } catch (err) {\n    next({\n      message: err.message\n    }, 400);\n  }\n}\n\nconst router = _express.default.Router();\n\nexports.router = router;\nrouter.get('/restaurants/:area', getSearch);\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImdvb2dsZW1hcC5qcyJdLCJuYW1lcyI6WyJnZXRTZWFyY2giLCJyZXEiLCJyZXMiLCJuZXh0IiwicGFyYW1zIiwiZ29vZ2xlQXBpVXJsIiwiYXJlYSIsInJlc3BvbnNlIiwiaHR0cCIsImdldCIsInN0YXR1c0NvZGUiLCJyZXN1bHRzIiwiYm9keSIsImRhdGEiLCJtZXNzYWdlIiwic3RhdHVzIiwiZXJyIiwicm91dGVyIiwiZXhwcmVzcyIsIlJvdXRlciJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFDQTs7QUFDQTs7OztBQUVPLGVBQWVBLFNBQWYsQ0FBeUJDLEdBQXpCLEVBQThCQyxHQUE5QixFQUFtQ0MsSUFBbkMsRUFBeUM7QUFDOUMsTUFBSTtBQUNGLFVBQU07QUFBRUMsTUFBQUE7QUFBRixRQUFhSCxHQUFuQjtBQUNBLFVBQU1JLFlBQVksR0FBSSxtRkFBa0ZELE1BQU0sQ0FBQ0UsSUFBSyw4Q0FBcEg7QUFDQSxVQUFNQyxRQUFRLEdBQUcsTUFBTUMsV0FBS0MsR0FBTCxDQUFTSixZQUFULENBQXZCOztBQUNBLFFBQUlFLFFBQVEsSUFBSUEsUUFBUSxDQUFDRyxVQUFULEtBQXdCLEdBQXhDLEVBQTZDO0FBQzNDLFlBQU1DLE9BQU8sR0FBR0osUUFBUSxDQUFDSyxJQUFULENBQWNELE9BQTlCO0FBQ0FSLE1BQUFBLElBQUksQ0FBQyxDQUFDO0FBQUVVLFFBQUFBLElBQUksRUFBRUY7QUFBUixPQUFELEVBQW9CSixRQUFRLENBQUNHLFVBQTdCLENBQUQsQ0FBSjtBQUNELEtBSEQsTUFHTztBQUNMUCxNQUFBQSxJQUFJLENBQUMsQ0FBQztBQUFFVyxRQUFBQSxPQUFPLEVBQUVDO0FBQVgsT0FBRCxFQUFzQlIsUUFBUSxDQUFDRyxVQUEvQixDQUFELENBQUo7QUFDRDtBQUNGLEdBVkQsQ0FVRSxPQUFPTSxHQUFQLEVBQVk7QUFDWmIsSUFBQUEsSUFBSSxDQUFDO0FBQUVXLE1BQUFBLE9BQU8sRUFBRUUsR0FBRyxDQUFDRjtBQUFmLEtBQUQsRUFBMkIsR0FBM0IsQ0FBSjtBQUNEO0FBQ0Y7O0FBRU0sTUFBTUcsTUFBTSxHQUFHQyxpQkFBUUMsTUFBUixFQUFmOzs7QUFDUEYsTUFBTSxDQUFDUixHQUFQLENBQVcsb0JBQVgsRUFBaUNULFNBQWpDIiwic291cmNlUm9vdCI6Ii9Vc2Vycy9sYWN0by93b3Jrc3BhY2Uvc2NnLWFwaS9zcmMiLCJzb3VyY2VzQ29udGVudCI6WyJcbmltcG9ydCB7IGh0dHAgfSBmcm9tICcuL2h0dHAuanMnO1xuaW1wb3J0IGV4cHJlc3MgZnJvbSAnZXhwcmVzcyc7XG5cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBnZXRTZWFyY2gocmVxLCByZXMsIG5leHQpIHtcbiAgdHJ5IHtcbiAgICBjb25zdCB7IHBhcmFtcyB9ID0gcmVxO1xuICAgIGNvbnN0IGdvb2dsZUFwaVVybCA9IGBodHRwczovL21hcHMuZ29vZ2xlYXBpcy5jb20vbWFwcy9hcGkvcGxhY2UvdGV4dHNlYXJjaC9qc29uP3F1ZXJ5PXJlc3RhdXJhbnRzK2luKyR7cGFyYW1zLmFyZWF9JmtleT1BSXphU3lCOXJKQzhhbE5VNWlqb3dwaWF6THdZeVQ2UXRMSm83a1VgO1xuICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgaHR0cC5nZXQoZ29vZ2xlQXBpVXJsKTtcbiAgICBpZiAocmVzcG9uc2UgJiYgcmVzcG9uc2Uuc3RhdHVzQ29kZSA9PT0gMjAwKSB7XG4gICAgICBjb25zdCByZXN1bHRzID0gcmVzcG9uc2UuYm9keS5yZXN1bHRzO1xuICAgICAgbmV4dChbeyBkYXRhOiByZXN1bHRzIH0sIHJlc3BvbnNlLnN0YXR1c0NvZGVdKTtcbiAgICB9IGVsc2Uge1xuICAgICAgbmV4dChbeyBtZXNzYWdlOiBzdGF0dXMgfSwgcmVzcG9uc2Uuc3RhdHVzQ29kZV0pO1xuICAgIH1cbiAgfSBjYXRjaCAoZXJyKSB7XG4gICAgbmV4dCh7IG1lc3NhZ2U6IGVyci5tZXNzYWdlIH0sIDQwMCk7XG4gIH1cbn1cblxuZXhwb3J0IGNvbnN0IHJvdXRlciA9IGV4cHJlc3MuUm91dGVyKCk7XG5yb3V0ZXIuZ2V0KCcvcmVzdGF1cmFudHMvOmFyZWEnLCBnZXRTZWFyY2gpOyJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "googlemap.js"
      ],
      "names": [
        "getSearch",
        "req",
        "res",
        "next",
        "params",
        "googleApiUrl",
        "area",
        "response",
        "http",
        "get",
        "statusCode",
        "results",
        "body",
        "data",
        "message",
        "status",
        "err",
        "router",
        "express",
        "Router"
      ],
      "mappings": ";;;;;;;;AACA;;AACA;;;;AAEO,eAAeA,SAAf,CAAyBC,GAAzB,EAA8BC,GAA9B,EAAmCC,IAAnC,EAAyC;AAC9C,MAAI;AACF,UAAM;AAAEC,MAAAA;AAAF,QAAaH,GAAnB;AACA,UAAMI,YAAY,GAAI,mFAAkFD,MAAM,CAACE,IAAK,8CAApH;AACA,UAAMC,QAAQ,GAAG,MAAMC,WAAKC,GAAL,CAASJ,YAAT,CAAvB;;AACA,QAAIE,QAAQ,IAAIA,QAAQ,CAACG,UAAT,KAAwB,GAAxC,EAA6C;AAC3C,YAAMC,OAAO,GAAGJ,QAAQ,CAACK,IAAT,CAAcD,OAA9B;AACAR,MAAAA,IAAI,CAAC,CAAC;AAAEU,QAAAA,IAAI,EAAEF;AAAR,OAAD,EAAoBJ,QAAQ,CAACG,UAA7B,CAAD,CAAJ;AACD,KAHD,MAGO;AACLP,MAAAA,IAAI,CAAC,CAAC;AAAEW,QAAAA,OAAO,EAAEC;AAAX,OAAD,EAAsBR,QAAQ,CAACG,UAA/B,CAAD,CAAJ;AACD;AACF,GAVD,CAUE,OAAOM,GAAP,EAAY;AACZb,IAAAA,IAAI,CAAC;AAAEW,MAAAA,OAAO,EAAEE,GAAG,CAACF;AAAf,KAAD,EAA2B,GAA3B,CAAJ;AACD;AACF;;AAEM,MAAMG,MAAM,GAAGC,iBAAQC,MAAR,EAAf;;;AACPF,MAAM,CAACR,GAAP,CAAW,oBAAX,EAAiCT,SAAjC",
      "sourceRoot": "/Users/lacto/workspace/scg-api/src",
      "sourcesContent": [
        "\nimport { http } from './http.js';\nimport express from 'express';\n\nexport async function getSearch(req, res, next) {\n  try {\n    const { params } = req;\n    const googleApiUrl = `https://maps.googleapis.com/maps/api/place/textsearch/json?query=restaurants+in+${params.area}&key=AIzaSyB9rJC8alNU5ijowpiazLwYyT6QtLJo7kU`;\n    const response = await http.get(googleApiUrl);\n    if (response && response.statusCode === 200) {\n      const results = response.body.results;\n      next([{ data: results }, response.statusCode]);\n    } else {\n      next([{ message: status }, response.statusCode]);\n    }\n  } catch (err) {\n    next({ message: err.message }, 400);\n  }\n}\n\nexport const router = express.Router();\nrouter.get('/restaurants/:area', getSearch);"
      ]
    },
    "sourceType": "script",
    "mtime": 1567330071218
  },
  "{\"sourceRoot\":\"/Users/lacto/workspace/scg-api/src\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/lacto/workspace/scg-api\",\"filename\":\"/Users/lacto/workspace/scg-api/src/http.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/lacto/workspace/scg-api\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/lacto/workspace/scg-api/src",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/lacto/workspace/scg-api",
      "filename": "/Users/lacto/workspace/scg-api/src/http.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/lacto/workspace/scg-api",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-object-rest-spread",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/lacto/workspace/scg-api/src/http.js",
        "plugins": [
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/lacto/workspace/scg-api/src/http.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/lacto/workspace/scg-api/src",
        "sourceFileName": "http.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = exports.http = exports.Http = void 0;\n\nvar request = _interopRequireWildcard(require(\"then-request\"));\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }\n\nclass Http {\n  setAuthorization(options) {\n    if (!options.headers) options.headers = {}; // options.headers['Authorization'] = `Bearer ${config.api.token}`;\n    // options.json = {};\n\n    return options;\n  }\n\n  parseBody(response) {\n    response.body = JSON.parse(response.body);\n    return response;\n  }\n\n  async get(url, options = {}) {\n    options = this.setAuthorization(options);\n    let response = await request.default('GET', url, options);\n    return this.parseBody(response);\n  }\n\n  async post(url, options = {\n    json: {}\n  }) {\n    options = this.setAuthorization(options);\n    let response = await request.default('POST', url, options);\n    return this.parseBody(response);\n  }\n\n  async postManual(url, options = {\n    json: {}\n  }) {\n    let response = await request.default('POST', url, options);\n    return this.parseBody(response);\n  }\n\n  async delete(url, options = {}) {\n    options = this.setAuthorization(options);\n    let response = await request.default('DELETE', url, options);\n    return this.parseBody(response);\n  }\n\n}\n\nexports.Http = Http;\nconst http = new Http();\nexports.http = http;\nvar _default = http;\nexports.default = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImh0dHAuanMiXSwibmFtZXMiOlsiSHR0cCIsInNldEF1dGhvcml6YXRpb24iLCJvcHRpb25zIiwiaGVhZGVycyIsInBhcnNlQm9keSIsInJlc3BvbnNlIiwiYm9keSIsIkpTT04iLCJwYXJzZSIsImdldCIsInVybCIsInJlcXVlc3QiLCJkZWZhdWx0IiwicG9zdCIsImpzb24iLCJwb3N0TWFudWFsIiwiZGVsZXRlIiwiaHR0cCJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOzs7O0FBRU8sTUFBTUEsSUFBTixDQUFXO0FBQ2hCQyxFQUFBQSxnQkFBZ0IsQ0FBQ0MsT0FBRCxFQUFVO0FBQ3hCLFFBQUksQ0FBQ0EsT0FBTyxDQUFDQyxPQUFiLEVBQXNCRCxPQUFPLENBQUNDLE9BQVIsR0FBa0IsRUFBbEIsQ0FERSxDQUV4QjtBQUNBOztBQUNBLFdBQU9ELE9BQVA7QUFDRDs7QUFFREUsRUFBQUEsU0FBUyxDQUFDQyxRQUFELEVBQVc7QUFDbEJBLElBQUFBLFFBQVEsQ0FBQ0MsSUFBVCxHQUFnQkMsSUFBSSxDQUFDQyxLQUFMLENBQVdILFFBQVEsQ0FBQ0MsSUFBcEIsQ0FBaEI7QUFDQSxXQUFPRCxRQUFQO0FBQ0Q7O0FBRUQsUUFBTUksR0FBTixDQUFVQyxHQUFWLEVBQWVSLE9BQU8sR0FBRyxFQUF6QixFQUE2QjtBQUMzQkEsSUFBQUEsT0FBTyxHQUFHLEtBQUtELGdCQUFMLENBQXNCQyxPQUF0QixDQUFWO0FBQ0EsUUFBSUcsUUFBUSxHQUFHLE1BQU1NLE9BQU8sQ0FBQ0MsT0FBUixDQUFnQixLQUFoQixFQUF1QkYsR0FBdkIsRUFBNEJSLE9BQTVCLENBQXJCO0FBQ0EsV0FBTyxLQUFLRSxTQUFMLENBQWVDLFFBQWYsQ0FBUDtBQUNEOztBQUVELFFBQU1RLElBQU4sQ0FBV0gsR0FBWCxFQUFnQlIsT0FBTyxHQUFHO0FBQUVZLElBQUFBLElBQUksRUFBRTtBQUFSLEdBQTFCLEVBQXdDO0FBQ3RDWixJQUFBQSxPQUFPLEdBQUcsS0FBS0QsZ0JBQUwsQ0FBc0JDLE9BQXRCLENBQVY7QUFFQSxRQUFJRyxRQUFRLEdBQUcsTUFBTU0sT0FBTyxDQUFDQyxPQUFSLENBQWdCLE1BQWhCLEVBQXdCRixHQUF4QixFQUE2QlIsT0FBN0IsQ0FBckI7QUFDQSxXQUFPLEtBQUtFLFNBQUwsQ0FBZUMsUUFBZixDQUFQO0FBQ0Q7O0FBRUQsUUFBTVUsVUFBTixDQUFpQkwsR0FBakIsRUFBc0JSLE9BQU8sR0FBRztBQUFFWSxJQUFBQSxJQUFJLEVBQUU7QUFBUixHQUFoQyxFQUE4QztBQUM1QyxRQUFJVCxRQUFRLEdBQUcsTUFBTU0sT0FBTyxDQUFDQyxPQUFSLENBQWdCLE1BQWhCLEVBQXdCRixHQUF4QixFQUE2QlIsT0FBN0IsQ0FBckI7QUFDQSxXQUFPLEtBQUtFLFNBQUwsQ0FBZUMsUUFBZixDQUFQO0FBQ0Q7O0FBRUQsUUFBTVcsTUFBTixDQUFhTixHQUFiLEVBQWtCUixPQUFPLEdBQUcsRUFBNUIsRUFBZ0M7QUFDOUJBLElBQUFBLE9BQU8sR0FBRyxLQUFLRCxnQkFBTCxDQUFzQkMsT0FBdEIsQ0FBVjtBQUNBLFFBQUlHLFFBQVEsR0FBRyxNQUFNTSxPQUFPLENBQUNDLE9BQVIsQ0FBZ0IsUUFBaEIsRUFBMEJGLEdBQTFCLEVBQStCUixPQUEvQixDQUFyQjtBQUNBLFdBQU8sS0FBS0UsU0FBTCxDQUFlQyxRQUFmLENBQVA7QUFDRDs7QUFuQ2U7OztBQXNDWCxNQUFNWSxJQUFJLEdBQUcsSUFBSWpCLElBQUosRUFBYjs7ZUFDUWlCLEkiLCJzb3VyY2VSb290IjoiL1VzZXJzL2xhY3RvL3dvcmtzcGFjZS9zY2ctYXBpL3NyYyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAqIGFzIHJlcXVlc3QgZnJvbSAndGhlbi1yZXF1ZXN0JztcblxuZXhwb3J0IGNsYXNzIEh0dHAge1xuICBzZXRBdXRob3JpemF0aW9uKG9wdGlvbnMpIHtcbiAgICBpZiAoIW9wdGlvbnMuaGVhZGVycykgb3B0aW9ucy5oZWFkZXJzID0ge307XG4gICAgLy8gb3B0aW9ucy5oZWFkZXJzWydBdXRob3JpemF0aW9uJ10gPSBgQmVhcmVyICR7Y29uZmlnLmFwaS50b2tlbn1gO1xuICAgIC8vIG9wdGlvbnMuanNvbiA9IHt9O1xuICAgIHJldHVybiBvcHRpb25zO1xuICB9XG5cbiAgcGFyc2VCb2R5KHJlc3BvbnNlKSB7XG4gICAgcmVzcG9uc2UuYm9keSA9IEpTT04ucGFyc2UocmVzcG9uc2UuYm9keSk7XG4gICAgcmV0dXJuIHJlc3BvbnNlO1xuICB9XG5cbiAgYXN5bmMgZ2V0KHVybCwgb3B0aW9ucyA9IHt9KSB7XG4gICAgb3B0aW9ucyA9IHRoaXMuc2V0QXV0aG9yaXphdGlvbihvcHRpb25zKTtcbiAgICBsZXQgcmVzcG9uc2UgPSBhd2FpdCByZXF1ZXN0LmRlZmF1bHQoJ0dFVCcsIHVybCwgb3B0aW9ucyk7XG4gICAgcmV0dXJuIHRoaXMucGFyc2VCb2R5KHJlc3BvbnNlKTtcbiAgfVxuXG4gIGFzeW5jIHBvc3QodXJsLCBvcHRpb25zID0geyBqc29uOiB7fSB9KSB7XG4gICAgb3B0aW9ucyA9IHRoaXMuc2V0QXV0aG9yaXphdGlvbihvcHRpb25zKTtcblxuICAgIGxldCByZXNwb25zZSA9IGF3YWl0IHJlcXVlc3QuZGVmYXVsdCgnUE9TVCcsIHVybCwgb3B0aW9ucyk7XG4gICAgcmV0dXJuIHRoaXMucGFyc2VCb2R5KHJlc3BvbnNlKTtcbiAgfVxuXG4gIGFzeW5jIHBvc3RNYW51YWwodXJsLCBvcHRpb25zID0geyBqc29uOiB7fSB9KSB7XG4gICAgbGV0IHJlc3BvbnNlID0gYXdhaXQgcmVxdWVzdC5kZWZhdWx0KCdQT1NUJywgdXJsLCBvcHRpb25zKTtcbiAgICByZXR1cm4gdGhpcy5wYXJzZUJvZHkocmVzcG9uc2UpO1xuICB9XG5cbiAgYXN5bmMgZGVsZXRlKHVybCwgb3B0aW9ucyA9IHt9KSB7XG4gICAgb3B0aW9ucyA9IHRoaXMuc2V0QXV0aG9yaXphdGlvbihvcHRpb25zKTtcbiAgICBsZXQgcmVzcG9uc2UgPSBhd2FpdCByZXF1ZXN0LmRlZmF1bHQoJ0RFTEVURScsIHVybCwgb3B0aW9ucyk7XG4gICAgcmV0dXJuIHRoaXMucGFyc2VCb2R5KHJlc3BvbnNlKTtcbiAgfVxufVxuXG5leHBvcnQgY29uc3QgaHR0cCA9IG5ldyBIdHRwKCk7XG5leHBvcnQgZGVmYXVsdCBodHRwO1xuIl19",
    "map": {
      "version": 3,
      "sources": [
        "http.js"
      ],
      "names": [
        "Http",
        "setAuthorization",
        "options",
        "headers",
        "parseBody",
        "response",
        "body",
        "JSON",
        "parse",
        "get",
        "url",
        "request",
        "default",
        "post",
        "json",
        "postManual",
        "delete",
        "http"
      ],
      "mappings": ";;;;;;;AAAA;;;;AAEO,MAAMA,IAAN,CAAW;AAChBC,EAAAA,gBAAgB,CAACC,OAAD,EAAU;AACxB,QAAI,CAACA,OAAO,CAACC,OAAb,EAAsBD,OAAO,CAACC,OAAR,GAAkB,EAAlB,CADE,CAExB;AACA;;AACA,WAAOD,OAAP;AACD;;AAEDE,EAAAA,SAAS,CAACC,QAAD,EAAW;AAClBA,IAAAA,QAAQ,CAACC,IAAT,GAAgBC,IAAI,CAACC,KAAL,CAAWH,QAAQ,CAACC,IAApB,CAAhB;AACA,WAAOD,QAAP;AACD;;AAED,QAAMI,GAAN,CAAUC,GAAV,EAAeR,OAAO,GAAG,EAAzB,EAA6B;AAC3BA,IAAAA,OAAO,GAAG,KAAKD,gBAAL,CAAsBC,OAAtB,CAAV;AACA,QAAIG,QAAQ,GAAG,MAAMM,OAAO,CAACC,OAAR,CAAgB,KAAhB,EAAuBF,GAAvB,EAA4BR,OAA5B,CAArB;AACA,WAAO,KAAKE,SAAL,CAAeC,QAAf,CAAP;AACD;;AAED,QAAMQ,IAAN,CAAWH,GAAX,EAAgBR,OAAO,GAAG;AAAEY,IAAAA,IAAI,EAAE;AAAR,GAA1B,EAAwC;AACtCZ,IAAAA,OAAO,GAAG,KAAKD,gBAAL,CAAsBC,OAAtB,CAAV;AAEA,QAAIG,QAAQ,GAAG,MAAMM,OAAO,CAACC,OAAR,CAAgB,MAAhB,EAAwBF,GAAxB,EAA6BR,OAA7B,CAArB;AACA,WAAO,KAAKE,SAAL,CAAeC,QAAf,CAAP;AACD;;AAED,QAAMU,UAAN,CAAiBL,GAAjB,EAAsBR,OAAO,GAAG;AAAEY,IAAAA,IAAI,EAAE;AAAR,GAAhC,EAA8C;AAC5C,QAAIT,QAAQ,GAAG,MAAMM,OAAO,CAACC,OAAR,CAAgB,MAAhB,EAAwBF,GAAxB,EAA6BR,OAA7B,CAArB;AACA,WAAO,KAAKE,SAAL,CAAeC,QAAf,CAAP;AACD;;AAED,QAAMW,MAAN,CAAaN,GAAb,EAAkBR,OAAO,GAAG,EAA5B,EAAgC;AAC9BA,IAAAA,OAAO,GAAG,KAAKD,gBAAL,CAAsBC,OAAtB,CAAV;AACA,QAAIG,QAAQ,GAAG,MAAMM,OAAO,CAACC,OAAR,CAAgB,QAAhB,EAA0BF,GAA1B,EAA+BR,OAA/B,CAArB;AACA,WAAO,KAAKE,SAAL,CAAeC,QAAf,CAAP;AACD;;AAnCe;;;AAsCX,MAAMY,IAAI,GAAG,IAAIjB,IAAJ,EAAb;;eACQiB,I",
      "sourceRoot": "/Users/lacto/workspace/scg-api/src",
      "sourcesContent": [
        "import * as request from 'then-request';\n\nexport class Http {\n  setAuthorization(options) {\n    if (!options.headers) options.headers = {};\n    // options.headers['Authorization'] = `Bearer ${config.api.token}`;\n    // options.json = {};\n    return options;\n  }\n\n  parseBody(response) {\n    response.body = JSON.parse(response.body);\n    return response;\n  }\n\n  async get(url, options = {}) {\n    options = this.setAuthorization(options);\n    let response = await request.default('GET', url, options);\n    return this.parseBody(response);\n  }\n\n  async post(url, options = { json: {} }) {\n    options = this.setAuthorization(options);\n\n    let response = await request.default('POST', url, options);\n    return this.parseBody(response);\n  }\n\n  async postManual(url, options = { json: {} }) {\n    let response = await request.default('POST', url, options);\n    return this.parseBody(response);\n  }\n\n  async delete(url, options = {}) {\n    options = this.setAuthorization(options);\n    let response = await request.default('DELETE', url, options);\n    return this.parseBody(response);\n  }\n}\n\nexport const http = new Http();\nexport default http;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1567325213253
  },
  "{\"sourceRoot\":\"/Users/lacto/workspace/scg-api/src\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/lacto/workspace/scg-api\",\"filename\":\"/Users/lacto/workspace/scg-api/src/linebot.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/lacto/workspace/scg-api\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/lacto/workspace/scg-api/src",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/lacto/workspace/scg-api",
      "filename": "/Users/lacto/workspace/scg-api/src/linebot.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/lacto/workspace/scg-api",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-object-rest-spread",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/lacto/workspace/scg-api/src/linebot.js",
        "plugins": [
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/lacto/workspace/scg-api/src/linebot.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/lacto/workspace/scg-api/src",
        "sourceFileName": "linebot.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getMessage = getMessage;\nexports.router = void 0;\n\nvar line = _interopRequireWildcard(require(\"@line/bot-sdk\"));\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _config = _interopRequireDefault(require(\"./config.json\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }\n\nconst client = new line.Client(_config.default);\n\nasync function handleEvent(event) {\n  switch (event.type) {\n    case 'message':\n      const message = event.message;\n\n      switch (message.type) {\n        case 'text':\n          return handleText(message, event);\n\n        case 'image':\n          return handleImage(message, event);\n\n        case 'video':\n          return handleVideo(message, event);\n\n        case 'audio':\n          return handleAudio(message, event);\n\n        case 'location':\n          return handleLocation(message, event);\n\n        case 'sticker':\n          return handleSticker(message, event);\n\n        default:\n          throw new Error(`Unknown message: ${JSON.stringify(message)}`);\n      }\n\n    default:\n      throw new Error(`Unknown event: ${JSON.stringify(event)}`);\n  }\n}\n\nasync function handleText(message, event) {\n  return client.replyMessage(event.replyToken, {\n    type: 'text',\n    text: message.text\n  });\n}\n\nfunction handleImage(message, event) {\n  return client.replyMessage(event.replyToken, {\n    type: 'text',\n    text: 'Got Image'\n  });\n}\n\nfunction handleVideo(message, event) {\n  return client.replyMessage(event.replyToken, {\n    type: 'text',\n    text: 'Got Video'\n  });\n}\n\nfunction handleAudio(message, event) {\n  return client.replyMessage(event.replyToken, {\n    type: 'text',\n    text: 'Got Audio'\n  });\n}\n\nfunction handleLocation(message, event) {\n  return client.replyMessage(event.replyToken, {\n    type: 'text',\n    text: 'Got Location'\n  });\n}\n\nfunction handleSticker(message, event) {\n  let result = {\n    type: 'sticker',\n    packageId: '11537',\n    stickerId: '52002759'\n  };\n  return client.pushMessage(event.source.userId, result);\n}\n\nasync function getMessage(req, res, next) {\n  if (!Array.isArray(req.body.events)) {\n    return res.status(500).end();\n  }\n\n  Promise.all(req.body.events.map(event => {\n    console.log('event', event);\n    return handleEvent(event);\n  })).then(() => res.end()).catch(err => {\n    console.error(err);\n    res.status(500).end();\n  });\n  next([{\n    message: 'Success'\n  }, '200']);\n}\n\nconst router = _express.default.Router();\n\nexports.router = router;\nrouter.post('/', line.middleware(_config.default), getMessage);\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpbmVib3QuanMiXSwibmFtZXMiOlsiY2xpZW50IiwibGluZSIsIkNsaWVudCIsImNvbmZpZyIsImhhbmRsZUV2ZW50IiwiZXZlbnQiLCJ0eXBlIiwibWVzc2FnZSIsImhhbmRsZVRleHQiLCJoYW5kbGVJbWFnZSIsImhhbmRsZVZpZGVvIiwiaGFuZGxlQXVkaW8iLCJoYW5kbGVMb2NhdGlvbiIsImhhbmRsZVN0aWNrZXIiLCJFcnJvciIsIkpTT04iLCJzdHJpbmdpZnkiLCJyZXBseU1lc3NhZ2UiLCJyZXBseVRva2VuIiwidGV4dCIsInJlc3VsdCIsInBhY2thZ2VJZCIsInN0aWNrZXJJZCIsInB1c2hNZXNzYWdlIiwic291cmNlIiwidXNlcklkIiwiZ2V0TWVzc2FnZSIsInJlcSIsInJlcyIsIm5leHQiLCJBcnJheSIsImlzQXJyYXkiLCJib2R5IiwiZXZlbnRzIiwic3RhdHVzIiwiZW5kIiwiUHJvbWlzZSIsImFsbCIsIm1hcCIsImNvbnNvbGUiLCJsb2ciLCJ0aGVuIiwiY2F0Y2giLCJlcnIiLCJlcnJvciIsInJvdXRlciIsImV4cHJlc3MiLCJSb3V0ZXIiLCJwb3N0IiwibWlkZGxld2FyZSJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBQTs7QUFDQTs7QUFDQTs7Ozs7O0FBQ0EsTUFBTUEsTUFBTSxHQUFHLElBQUlDLElBQUksQ0FBQ0MsTUFBVCxDQUFnQkMsZUFBaEIsQ0FBZjs7QUFFQSxlQUFlQyxXQUFmLENBQTJCQyxLQUEzQixFQUFrQztBQUNoQyxVQUFRQSxLQUFLLENBQUNDLElBQWQ7QUFDRSxTQUFLLFNBQUw7QUFDRSxZQUFNQyxPQUFPLEdBQUdGLEtBQUssQ0FBQ0UsT0FBdEI7O0FBQ0EsY0FBUUEsT0FBTyxDQUFDRCxJQUFoQjtBQUNFLGFBQUssTUFBTDtBQUNFLGlCQUFPRSxVQUFVLENBQUNELE9BQUQsRUFBVUYsS0FBVixDQUFqQjs7QUFDRixhQUFLLE9BQUw7QUFDRSxpQkFBT0ksV0FBVyxDQUFDRixPQUFELEVBQVVGLEtBQVYsQ0FBbEI7O0FBQ0YsYUFBSyxPQUFMO0FBQ0UsaUJBQU9LLFdBQVcsQ0FBQ0gsT0FBRCxFQUFVRixLQUFWLENBQWxCOztBQUNGLGFBQUssT0FBTDtBQUNFLGlCQUFPTSxXQUFXLENBQUNKLE9BQUQsRUFBVUYsS0FBVixDQUFsQjs7QUFDRixhQUFLLFVBQUw7QUFDRSxpQkFBT08sY0FBYyxDQUFDTCxPQUFELEVBQVVGLEtBQVYsQ0FBckI7O0FBQ0YsYUFBSyxTQUFMO0FBQ0UsaUJBQU9RLGFBQWEsQ0FBQ04sT0FBRCxFQUFVRixLQUFWLENBQXBCOztBQUNGO0FBQ0UsZ0JBQU0sSUFBSVMsS0FBSixDQUFXLG9CQUFtQkMsSUFBSSxDQUFDQyxTQUFMLENBQWVULE9BQWYsQ0FBd0IsRUFBdEQsQ0FBTjtBQWRKOztBQWdCRjtBQUNFLFlBQU0sSUFBSU8sS0FBSixDQUFXLGtCQUFpQkMsSUFBSSxDQUFDQyxTQUFMLENBQWVYLEtBQWYsQ0FBc0IsRUFBbEQsQ0FBTjtBQXBCSjtBQXNCRDs7QUFFRCxlQUFlRyxVQUFmLENBQTBCRCxPQUExQixFQUFtQ0YsS0FBbkMsRUFBMEM7QUFDeEMsU0FBT0wsTUFBTSxDQUFDaUIsWUFBUCxDQUFvQlosS0FBSyxDQUFDYSxVQUExQixFQUFzQztBQUFFWixJQUFBQSxJQUFJLEVBQUUsTUFBUjtBQUFnQmEsSUFBQUEsSUFBSSxFQUFFWixPQUFPLENBQUNZO0FBQTlCLEdBQXRDLENBQVA7QUFDRDs7QUFFRCxTQUFTVixXQUFULENBQXFCRixPQUFyQixFQUE4QkYsS0FBOUIsRUFBcUM7QUFDbkMsU0FBT0wsTUFBTSxDQUFDaUIsWUFBUCxDQUFvQlosS0FBSyxDQUFDYSxVQUExQixFQUFzQztBQUFFWixJQUFBQSxJQUFJLEVBQUUsTUFBUjtBQUFnQmEsSUFBQUEsSUFBSSxFQUFFO0FBQXRCLEdBQXRDLENBQVA7QUFDRDs7QUFFRCxTQUFTVCxXQUFULENBQXFCSCxPQUFyQixFQUE4QkYsS0FBOUIsRUFBcUM7QUFDbkMsU0FBT0wsTUFBTSxDQUFDaUIsWUFBUCxDQUFvQlosS0FBSyxDQUFDYSxVQUExQixFQUFzQztBQUFFWixJQUFBQSxJQUFJLEVBQUUsTUFBUjtBQUFnQmEsSUFBQUEsSUFBSSxFQUFFO0FBQXRCLEdBQXRDLENBQVA7QUFDRDs7QUFFRCxTQUFTUixXQUFULENBQXFCSixPQUFyQixFQUE4QkYsS0FBOUIsRUFBcUM7QUFDbkMsU0FBT0wsTUFBTSxDQUFDaUIsWUFBUCxDQUFvQlosS0FBSyxDQUFDYSxVQUExQixFQUFzQztBQUFFWixJQUFBQSxJQUFJLEVBQUUsTUFBUjtBQUFnQmEsSUFBQUEsSUFBSSxFQUFFO0FBQXRCLEdBQXRDLENBQVA7QUFDRDs7QUFFRCxTQUFTUCxjQUFULENBQXdCTCxPQUF4QixFQUFpQ0YsS0FBakMsRUFBd0M7QUFDdEMsU0FBT0wsTUFBTSxDQUFDaUIsWUFBUCxDQUFvQlosS0FBSyxDQUFDYSxVQUExQixFQUFzQztBQUFFWixJQUFBQSxJQUFJLEVBQUUsTUFBUjtBQUFnQmEsSUFBQUEsSUFBSSxFQUFFO0FBQXRCLEdBQXRDLENBQVA7QUFDRDs7QUFFRCxTQUFTTixhQUFULENBQXVCTixPQUF2QixFQUFnQ0YsS0FBaEMsRUFBdUM7QUFDckMsTUFBSWUsTUFBTSxHQUFHO0FBQ1hkLElBQUFBLElBQUksRUFBRSxTQURLO0FBRVhlLElBQUFBLFNBQVMsRUFBRSxPQUZBO0FBR1hDLElBQUFBLFNBQVMsRUFBRTtBQUhBLEdBQWI7QUFNQSxTQUFPdEIsTUFBTSxDQUFDdUIsV0FBUCxDQUFtQmxCLEtBQUssQ0FBQ21CLE1BQU4sQ0FBYUMsTUFBaEMsRUFBd0NMLE1BQXhDLENBQVA7QUFDRDs7QUFFTSxlQUFlTSxVQUFmLENBQTBCQyxHQUExQixFQUErQkMsR0FBL0IsRUFBb0NDLElBQXBDLEVBQTBDO0FBQy9DLE1BQUksQ0FBQ0MsS0FBSyxDQUFDQyxPQUFOLENBQWNKLEdBQUcsQ0FBQ0ssSUFBSixDQUFTQyxNQUF2QixDQUFMLEVBQXFDO0FBQ25DLFdBQU9MLEdBQUcsQ0FBQ00sTUFBSixDQUFXLEdBQVgsRUFBZ0JDLEdBQWhCLEVBQVA7QUFDRDs7QUFDREMsRUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVlWLEdBQUcsQ0FBQ0ssSUFBSixDQUFTQyxNQUFULENBQWdCSyxHQUFoQixDQUFvQmpDLEtBQUssSUFBSTtBQUN2Q2tDLElBQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZLE9BQVosRUFBcUJuQyxLQUFyQjtBQUNBLFdBQU9ELFdBQVcsQ0FBQ0MsS0FBRCxDQUFsQjtBQUNELEdBSFcsQ0FBWixFQUlHb0MsSUFKSCxDQUlRLE1BQU1iLEdBQUcsQ0FBQ08sR0FBSixFQUpkLEVBS0dPLEtBTEgsQ0FLVUMsR0FBRCxJQUFTO0FBQ2RKLElBQUFBLE9BQU8sQ0FBQ0ssS0FBUixDQUFjRCxHQUFkO0FBQ0FmLElBQUFBLEdBQUcsQ0FBQ00sTUFBSixDQUFXLEdBQVgsRUFBZ0JDLEdBQWhCO0FBQ0QsR0FSSDtBQVVBTixFQUFBQSxJQUFJLENBQUMsQ0FBQztBQUFFdEIsSUFBQUEsT0FBTyxFQUFFO0FBQVgsR0FBRCxFQUF5QixLQUF6QixDQUFELENBQUo7QUFDRDs7QUFFTSxNQUFNc0MsTUFBTSxHQUFHQyxpQkFBUUMsTUFBUixFQUFmOzs7QUFDUEYsTUFBTSxDQUFDRyxJQUFQLENBQVksR0FBWixFQUFpQi9DLElBQUksQ0FBQ2dELFVBQUwsQ0FBZ0I5QyxlQUFoQixDQUFqQixFQUEwQ3VCLFVBQTFDIiwic291cmNlUm9vdCI6Ii9Vc2Vycy9sYWN0by93b3Jrc3BhY2Uvc2NnLWFwaS9zcmMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgKiBhcyBsaW5lIGZyb20gJ0BsaW5lL2JvdC1zZGsnO1xuaW1wb3J0IGV4cHJlc3MgZnJvbSAnZXhwcmVzcyc7XG5pbXBvcnQgY29uZmlnIGZyb20gJy4vY29uZmlnLmpzb24nO1xuY29uc3QgY2xpZW50ID0gbmV3IGxpbmUuQ2xpZW50KGNvbmZpZyk7XG5cbmFzeW5jIGZ1bmN0aW9uIGhhbmRsZUV2ZW50KGV2ZW50KSB7XG4gIHN3aXRjaCAoZXZlbnQudHlwZSkge1xuICAgIGNhc2UgJ21lc3NhZ2UnOlxuICAgICAgY29uc3QgbWVzc2FnZSA9IGV2ZW50Lm1lc3NhZ2U7XG4gICAgICBzd2l0Y2ggKG1lc3NhZ2UudHlwZSkge1xuICAgICAgICBjYXNlICd0ZXh0JzpcbiAgICAgICAgICByZXR1cm4gaGFuZGxlVGV4dChtZXNzYWdlLCBldmVudCk7XG4gICAgICAgIGNhc2UgJ2ltYWdlJzpcbiAgICAgICAgICByZXR1cm4gaGFuZGxlSW1hZ2UobWVzc2FnZSwgZXZlbnQpO1xuICAgICAgICBjYXNlICd2aWRlbyc6XG4gICAgICAgICAgcmV0dXJuIGhhbmRsZVZpZGVvKG1lc3NhZ2UsIGV2ZW50KTtcbiAgICAgICAgY2FzZSAnYXVkaW8nOlxuICAgICAgICAgIHJldHVybiBoYW5kbGVBdWRpbyhtZXNzYWdlLCBldmVudCk7XG4gICAgICAgIGNhc2UgJ2xvY2F0aW9uJzpcbiAgICAgICAgICByZXR1cm4gaGFuZGxlTG9jYXRpb24obWVzc2FnZSwgZXZlbnQpO1xuICAgICAgICBjYXNlICdzdGlja2VyJzpcbiAgICAgICAgICByZXR1cm4gaGFuZGxlU3RpY2tlcihtZXNzYWdlLCBldmVudCk7XG4gICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBVbmtub3duIG1lc3NhZ2U6ICR7SlNPTi5zdHJpbmdpZnkobWVzc2FnZSl9YCk7XG4gICAgICB9XG4gICAgZGVmYXVsdDpcbiAgICAgIHRocm93IG5ldyBFcnJvcihgVW5rbm93biBldmVudDogJHtKU09OLnN0cmluZ2lmeShldmVudCl9YCk7XG4gIH1cbn1cblxuYXN5bmMgZnVuY3Rpb24gaGFuZGxlVGV4dChtZXNzYWdlLCBldmVudCkge1xuICByZXR1cm4gY2xpZW50LnJlcGx5TWVzc2FnZShldmVudC5yZXBseVRva2VuLCB7IHR5cGU6ICd0ZXh0JywgdGV4dDogbWVzc2FnZS50ZXh0IH0pO1xufVxuXG5mdW5jdGlvbiBoYW5kbGVJbWFnZShtZXNzYWdlLCBldmVudCkge1xuICByZXR1cm4gY2xpZW50LnJlcGx5TWVzc2FnZShldmVudC5yZXBseVRva2VuLCB7IHR5cGU6ICd0ZXh0JywgdGV4dDogJ0dvdCBJbWFnZScgfSk7XG59XG5cbmZ1bmN0aW9uIGhhbmRsZVZpZGVvKG1lc3NhZ2UsIGV2ZW50KSB7XG4gIHJldHVybiBjbGllbnQucmVwbHlNZXNzYWdlKGV2ZW50LnJlcGx5VG9rZW4sIHsgdHlwZTogJ3RleHQnLCB0ZXh0OiAnR290IFZpZGVvJyB9KTtcbn1cblxuZnVuY3Rpb24gaGFuZGxlQXVkaW8obWVzc2FnZSwgZXZlbnQpIHtcbiAgcmV0dXJuIGNsaWVudC5yZXBseU1lc3NhZ2UoZXZlbnQucmVwbHlUb2tlbiwgeyB0eXBlOiAndGV4dCcsIHRleHQ6ICdHb3QgQXVkaW8nIH0pO1xufVxuXG5mdW5jdGlvbiBoYW5kbGVMb2NhdGlvbihtZXNzYWdlLCBldmVudCkge1xuICByZXR1cm4gY2xpZW50LnJlcGx5TWVzc2FnZShldmVudC5yZXBseVRva2VuLCB7IHR5cGU6ICd0ZXh0JywgdGV4dDogJ0dvdCBMb2NhdGlvbicgfSk7XG59XG5cbmZ1bmN0aW9uIGhhbmRsZVN0aWNrZXIobWVzc2FnZSwgZXZlbnQpIHtcbiAgbGV0IHJlc3VsdCA9IHtcbiAgICB0eXBlOiAnc3RpY2tlcicsXG4gICAgcGFja2FnZUlkOiAnMTE1MzcnLFxuICAgIHN0aWNrZXJJZDogJzUyMDAyNzU5J1xuICB9O1xuXG4gIHJldHVybiBjbGllbnQucHVzaE1lc3NhZ2UoZXZlbnQuc291cmNlLnVzZXJJZCwgcmVzdWx0KTtcbn1cblxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGdldE1lc3NhZ2UocmVxLCByZXMsIG5leHQpIHtcbiAgaWYgKCFBcnJheS5pc0FycmF5KHJlcS5ib2R5LmV2ZW50cykpIHtcbiAgICByZXR1cm4gcmVzLnN0YXR1cyg1MDApLmVuZCgpO1xuICB9XG4gIFByb21pc2UuYWxsKHJlcS5ib2R5LmV2ZW50cy5tYXAoZXZlbnQgPT4ge1xuICAgIGNvbnNvbGUubG9nKCdldmVudCcsIGV2ZW50KTtcbiAgICByZXR1cm4gaGFuZGxlRXZlbnQoZXZlbnQpO1xuICB9KSlcbiAgICAudGhlbigoKSA9PiByZXMuZW5kKCkpXG4gICAgLmNhdGNoKChlcnIpID0+IHtcbiAgICAgIGNvbnNvbGUuZXJyb3IoZXJyKTtcbiAgICAgIHJlcy5zdGF0dXMoNTAwKS5lbmQoKTtcbiAgICB9KTtcblxuICBuZXh0KFt7IG1lc3NhZ2U6ICdTdWNjZXNzJyB9LCAnMjAwJ10pO1xufVxuXG5leHBvcnQgY29uc3Qgcm91dGVyID0gZXhwcmVzcy5Sb3V0ZXIoKTtcbnJvdXRlci5wb3N0KCcvJywgbGluZS5taWRkbGV3YXJlKGNvbmZpZyksIGdldE1lc3NhZ2UpO1xuIl19",
    "map": {
      "version": 3,
      "sources": [
        "linebot.js"
      ],
      "names": [
        "client",
        "line",
        "Client",
        "config",
        "handleEvent",
        "event",
        "type",
        "message",
        "handleText",
        "handleImage",
        "handleVideo",
        "handleAudio",
        "handleLocation",
        "handleSticker",
        "Error",
        "JSON",
        "stringify",
        "replyMessage",
        "replyToken",
        "text",
        "result",
        "packageId",
        "stickerId",
        "pushMessage",
        "source",
        "userId",
        "getMessage",
        "req",
        "res",
        "next",
        "Array",
        "isArray",
        "body",
        "events",
        "status",
        "end",
        "Promise",
        "all",
        "map",
        "console",
        "log",
        "then",
        "catch",
        "err",
        "error",
        "router",
        "express",
        "Router",
        "post",
        "middleware"
      ],
      "mappings": "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",
      "sourceRoot": "/Users/lacto/workspace/scg-api/src",
      "sourcesContent": [
        "import * as line from '@line/bot-sdk';\nimport express from 'express';\nimport config from './config.json';\nconst client = new line.Client(config);\n\nasync function handleEvent(event) {\n  switch (event.type) {\n    case 'message':\n      const message = event.message;\n      switch (message.type) {\n        case 'text':\n          return handleText(message, event);\n        case 'image':\n          return handleImage(message, event);\n        case 'video':\n          return handleVideo(message, event);\n        case 'audio':\n          return handleAudio(message, event);\n        case 'location':\n          return handleLocation(message, event);\n        case 'sticker':\n          return handleSticker(message, event);\n        default:\n          throw new Error(`Unknown message: ${JSON.stringify(message)}`);\n      }\n    default:\n      throw new Error(`Unknown event: ${JSON.stringify(event)}`);\n  }\n}\n\nasync function handleText(message, event) {\n  return client.replyMessage(event.replyToken, { type: 'text', text: message.text });\n}\n\nfunction handleImage(message, event) {\n  return client.replyMessage(event.replyToken, { type: 'text', text: 'Got Image' });\n}\n\nfunction handleVideo(message, event) {\n  return client.replyMessage(event.replyToken, { type: 'text', text: 'Got Video' });\n}\n\nfunction handleAudio(message, event) {\n  return client.replyMessage(event.replyToken, { type: 'text', text: 'Got Audio' });\n}\n\nfunction handleLocation(message, event) {\n  return client.replyMessage(event.replyToken, { type: 'text', text: 'Got Location' });\n}\n\nfunction handleSticker(message, event) {\n  let result = {\n    type: 'sticker',\n    packageId: '11537',\n    stickerId: '52002759'\n  };\n\n  return client.pushMessage(event.source.userId, result);\n}\n\nexport async function getMessage(req, res, next) {\n  if (!Array.isArray(req.body.events)) {\n    return res.status(500).end();\n  }\n  Promise.all(req.body.events.map(event => {\n    console.log('event', event);\n    return handleEvent(event);\n  }))\n    .then(() => res.end())\n    .catch((err) => {\n      console.error(err);\n      res.status(500).end();\n    });\n\n  next([{ message: 'Success' }, '200']);\n}\n\nexport const router = express.Router();\nrouter.post('/', line.middleware(config), getMessage);\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1567143212613
  },
  "{\"sourceRoot\":\"/Users/lacto/workspace/scg-api/src\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/lacto/workspace/scg-api\",\"filename\":\"/Users/lacto/workspace/scg-api/src/dialogflow.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/lacto/workspace/scg-api\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/lacto/workspace/scg-api/src",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/lacto/workspace/scg-api",
      "filename": "/Users/lacto/workspace/scg-api/src/dialogflow.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/lacto/workspace/scg-api",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-object-rest-spread",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/lacto/workspace/scg-api/src/dialogflow.js",
        "plugins": [
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/lacto/workspace/scg-api/src/dialogflow.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/lacto/workspace/scg-api/src",
        "sourceFileName": "dialogflow.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getSum = getSum;\nexports.router = void 0;\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _dialogflowFulfillment = require(\"dialogflow-fulfillment\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nasync function getSum(req, res, next) {\n  const agent = new _dialogflowFulfillment.WebhookClient({\n    request: req,\n    response: res\n  });\n\n  function add(agent) {\n    const number = agent.parameters.number;\n    const number1 = agent.parameters.number1;\n    const sum = number + number1;\n    agent.add('ผลบวก = ' + sum);\n  }\n\n  let intentMap = new Map();\n  intentMap.set('AddNumbers', add);\n  agent.handleRequest(intentMap);\n}\n\nconst router = _express.default.Router();\n\nexports.router = router;\nrouter.post('/', getSum);\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRpYWxvZ2Zsb3cuanMiXSwibmFtZXMiOlsiZ2V0U3VtIiwicmVxIiwicmVzIiwibmV4dCIsImFnZW50IiwiV2ViaG9va0NsaWVudCIsInJlcXVlc3QiLCJyZXNwb25zZSIsImFkZCIsIm51bWJlciIsInBhcmFtZXRlcnMiLCJudW1iZXIxIiwic3VtIiwiaW50ZW50TWFwIiwiTWFwIiwic2V0IiwiaGFuZGxlUmVxdWVzdCIsInJvdXRlciIsImV4cHJlc3MiLCJSb3V0ZXIiLCJwb3N0Il0sIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUFBOztBQUNBOzs7O0FBRU8sZUFBZUEsTUFBZixDQUFzQkMsR0FBdEIsRUFBMkJDLEdBQTNCLEVBQWdDQyxJQUFoQyxFQUFzQztBQUMzQyxRQUFNQyxLQUFLLEdBQUcsSUFBSUMsb0NBQUosQ0FBa0I7QUFBRUMsSUFBQUEsT0FBTyxFQUFFTCxHQUFYO0FBQWdCTSxJQUFBQSxRQUFRLEVBQUVMO0FBQTFCLEdBQWxCLENBQWQ7O0FBQ0EsV0FBU00sR0FBVCxDQUFhSixLQUFiLEVBQW9CO0FBQ2xCLFVBQU1LLE1BQU0sR0FBR0wsS0FBSyxDQUFDTSxVQUFOLENBQWlCRCxNQUFoQztBQUNBLFVBQU1FLE9BQU8sR0FBR1AsS0FBSyxDQUFDTSxVQUFOLENBQWlCQyxPQUFqQztBQUNBLFVBQU1DLEdBQUcsR0FBR0gsTUFBTSxHQUFHRSxPQUFyQjtBQUNBUCxJQUFBQSxLQUFLLENBQUNJLEdBQU4sQ0FBVSxhQUFhSSxHQUF2QjtBQUNEOztBQUVELE1BQUlDLFNBQVMsR0FBRyxJQUFJQyxHQUFKLEVBQWhCO0FBQ0FELEVBQUFBLFNBQVMsQ0FBQ0UsR0FBVixDQUFjLFlBQWQsRUFBNEJQLEdBQTVCO0FBQ0FKLEVBQUFBLEtBQUssQ0FBQ1ksYUFBTixDQUFvQkgsU0FBcEI7QUFDRDs7QUFDTSxNQUFNSSxNQUFNLEdBQUdDLGlCQUFRQyxNQUFSLEVBQWY7OztBQUNQRixNQUFNLENBQUNHLElBQVAsQ0FBWSxHQUFaLEVBQWlCcEIsTUFBakIiLCJzb3VyY2VSb290IjoiL1VzZXJzL2xhY3RvL3dvcmtzcGFjZS9zY2ctYXBpL3NyYyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBleHByZXNzIGZyb20gJ2V4cHJlc3MnO1xuaW1wb3J0IHsgV2ViaG9va0NsaWVudCB9IGZyb20gJ2RpYWxvZ2Zsb3ctZnVsZmlsbG1lbnQnO1xuXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gZ2V0U3VtKHJlcSwgcmVzLCBuZXh0KSB7XG4gIGNvbnN0IGFnZW50ID0gbmV3IFdlYmhvb2tDbGllbnQoeyByZXF1ZXN0OiByZXEsIHJlc3BvbnNlOiByZXN9KTtcbiAgZnVuY3Rpb24gYWRkKGFnZW50KSB7XG4gICAgY29uc3QgbnVtYmVyID0gYWdlbnQucGFyYW1ldGVycy5udW1iZXI7XG4gICAgY29uc3QgbnVtYmVyMSA9IGFnZW50LnBhcmFtZXRlcnMubnVtYmVyMTtcbiAgICBjb25zdCBzdW0gPSBudW1iZXIgKyBudW1iZXIxO1xuICAgIGFnZW50LmFkZCgn4Lic4Lil4Lia4Lin4LiBID0gJyArIHN1bSk7XG4gIH1cblxuICBsZXQgaW50ZW50TWFwID0gbmV3IE1hcCgpO1xuICBpbnRlbnRNYXAuc2V0KCdBZGROdW1iZXJzJywgYWRkKTtcbiAgYWdlbnQuaGFuZGxlUmVxdWVzdChpbnRlbnRNYXApO1xufVxuZXhwb3J0IGNvbnN0IHJvdXRlciA9IGV4cHJlc3MuUm91dGVyKCk7XG5yb3V0ZXIucG9zdCgnLycsIGdldFN1bSk7IFxuIl19",
    "map": {
      "version": 3,
      "sources": [
        "dialogflow.js"
      ],
      "names": [
        "getSum",
        "req",
        "res",
        "next",
        "agent",
        "WebhookClient",
        "request",
        "response",
        "add",
        "number",
        "parameters",
        "number1",
        "sum",
        "intentMap",
        "Map",
        "set",
        "handleRequest",
        "router",
        "express",
        "Router",
        "post"
      ],
      "mappings": ";;;;;;;;AAAA;;AACA;;;;AAEO,eAAeA,MAAf,CAAsBC,GAAtB,EAA2BC,GAA3B,EAAgCC,IAAhC,EAAsC;AAC3C,QAAMC,KAAK,GAAG,IAAIC,oCAAJ,CAAkB;AAAEC,IAAAA,OAAO,EAAEL,GAAX;AAAgBM,IAAAA,QAAQ,EAAEL;AAA1B,GAAlB,CAAd;;AACA,WAASM,GAAT,CAAaJ,KAAb,EAAoB;AAClB,UAAMK,MAAM,GAAGL,KAAK,CAACM,UAAN,CAAiBD,MAAhC;AACA,UAAME,OAAO,GAAGP,KAAK,CAACM,UAAN,CAAiBC,OAAjC;AACA,UAAMC,GAAG,GAAGH,MAAM,GAAGE,OAArB;AACAP,IAAAA,KAAK,CAACI,GAAN,CAAU,aAAaI,GAAvB;AACD;;AAED,MAAIC,SAAS,GAAG,IAAIC,GAAJ,EAAhB;AACAD,EAAAA,SAAS,CAACE,GAAV,CAAc,YAAd,EAA4BP,GAA5B;AACAJ,EAAAA,KAAK,CAACY,aAAN,CAAoBH,SAApB;AACD;;AACM,MAAMI,MAAM,GAAGC,iBAAQC,MAAR,EAAf;;;AACPF,MAAM,CAACG,IAAP,CAAY,GAAZ,EAAiBpB,MAAjB",
      "sourceRoot": "/Users/lacto/workspace/scg-api/src",
      "sourcesContent": [
        "import express from 'express';\nimport { WebhookClient } from 'dialogflow-fulfillment';\n\nexport async function getSum(req, res, next) {\n  const agent = new WebhookClient({ request: req, response: res});\n  function add(agent) {\n    const number = agent.parameters.number;\n    const number1 = agent.parameters.number1;\n    const sum = number + number1;\n    agent.add('ผลบวก = ' + sum);\n  }\n\n  let intentMap = new Map();\n  intentMap.set('AddNumbers', add);\n  agent.handleRequest(intentMap);\n}\nexport const router = express.Router();\nrouter.post('/', getSum); \n"
      ]
    },
    "sourceType": "script",
    "mtime": 1567160202109
  },
  "{\"sourceRoot\":\"/Users/lacto/workspace/scg-api/src\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/lacto/workspace/scg-api\",\"filename\":\"/Users/lacto/workspace/scg-api/src/sequence.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/lacto/workspace/scg-api\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/lacto/workspace/scg-api/src",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/lacto/workspace/scg-api",
      "filename": "/Users/lacto/workspace/scg-api/src/sequence.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/lacto/workspace/scg-api",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-object-rest-spread",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/lacto/workspace/scg-api/src/sequence.js",
        "plugins": [
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/lacto/workspace/scg-api/src/sequence.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/lacto/workspace/scg-api/src",
        "sourceFileName": "sequence.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getNumbers = getNumbers;\nexports.router = void 0;\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nasync function getNumbers(req, res, next) {\n  try {\n    let result = 3;\n    let list = [];\n\n    for (let i = 1; i <= 7; i++) {\n      list.push(result);\n      result = result + i * 2;\n    }\n\n    next([{\n      data: {\n        x: list[0],\n        y: list[5],\n        z: list[6]\n      }\n    }, 200]);\n  } catch (err) {\n    next({\n      message: err.message\n    }, 400);\n  }\n}\n\nconst router = _express.default.Router();\n\nexports.router = router;\nrouter.get('/', getNumbers);\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNlcXVlbmNlLmpzIl0sIm5hbWVzIjpbImdldE51bWJlcnMiLCJyZXEiLCJyZXMiLCJuZXh0IiwicmVzdWx0IiwibGlzdCIsImkiLCJwdXNoIiwiZGF0YSIsIngiLCJ5IiwieiIsImVyciIsIm1lc3NhZ2UiLCJyb3V0ZXIiLCJleHByZXNzIiwiUm91dGVyIiwiZ2V0Il0sIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUFBOzs7O0FBRU8sZUFBZUEsVUFBZixDQUEwQkMsR0FBMUIsRUFBK0JDLEdBQS9CLEVBQW9DQyxJQUFwQyxFQUEwQztBQUMvQyxNQUFJO0FBQ0YsUUFBSUMsTUFBTSxHQUFHLENBQWI7QUFDQSxRQUFJQyxJQUFJLEdBQUcsRUFBWDs7QUFDQSxTQUFLLElBQUlDLENBQUMsR0FBRyxDQUFiLEVBQWdCQSxDQUFDLElBQUksQ0FBckIsRUFBd0JBLENBQUMsRUFBekIsRUFBNkI7QUFDM0JELE1BQUFBLElBQUksQ0FBQ0UsSUFBTCxDQUFVSCxNQUFWO0FBQ0FBLE1BQUFBLE1BQU0sR0FBR0EsTUFBTSxHQUFJRSxDQUFDLEdBQUcsQ0FBdkI7QUFDRDs7QUFDREgsSUFBQUEsSUFBSSxDQUFDLENBQUM7QUFDSkssTUFBQUEsSUFBSSxFQUFFO0FBQ0pDLFFBQUFBLENBQUMsRUFBRUosSUFBSSxDQUFDLENBQUQsQ0FESDtBQUVKSyxRQUFBQSxDQUFDLEVBQUVMLElBQUksQ0FBQyxDQUFELENBRkg7QUFHSk0sUUFBQUEsQ0FBQyxFQUFFTixJQUFJLENBQUMsQ0FBRDtBQUhIO0FBREYsS0FBRCxFQU1GLEdBTkUsQ0FBRCxDQUFKO0FBT0QsR0FkRCxDQWNFLE9BQU9PLEdBQVAsRUFBWTtBQUNaVCxJQUFBQSxJQUFJLENBQUM7QUFBRVUsTUFBQUEsT0FBTyxFQUFFRCxHQUFHLENBQUNDO0FBQWYsS0FBRCxFQUEyQixHQUEzQixDQUFKO0FBQ0Q7QUFDRjs7QUFFTSxNQUFNQyxNQUFNLEdBQUdDLGlCQUFRQyxNQUFSLEVBQWY7OztBQUNQRixNQUFNLENBQUNHLEdBQVAsQ0FBVyxHQUFYLEVBQWdCakIsVUFBaEIiLCJzb3VyY2VSb290IjoiL1VzZXJzL2xhY3RvL3dvcmtzcGFjZS9zY2ctYXBpL3NyYyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBleHByZXNzIGZyb20gJ2V4cHJlc3MnO1xuXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gZ2V0TnVtYmVycyhyZXEsIHJlcywgbmV4dCkge1xuICB0cnkge1xuICAgIGxldCByZXN1bHQgPSAzO1xuICAgIGxldCBsaXN0ID0gW107XG4gICAgZm9yIChsZXQgaSA9IDE7IGkgPD0gNzsgaSsrKSB7XG4gICAgICBsaXN0LnB1c2gocmVzdWx0KTtcbiAgICAgIHJlc3VsdCA9IHJlc3VsdCArIChpICogMik7XG4gICAgfVxuICAgIG5leHQoW3tcbiAgICAgIGRhdGE6IHtcbiAgICAgICAgeDogbGlzdFswXSxcbiAgICAgICAgeTogbGlzdFs1XSxcbiAgICAgICAgejogbGlzdFs2XSxcbiAgICAgIH1cbiAgICB9LCAyMDBdKTtcbiAgfSBjYXRjaCAoZXJyKSB7XG4gICAgbmV4dCh7IG1lc3NhZ2U6IGVyci5tZXNzYWdlIH0sIDQwMCk7XG4gIH1cbn1cblxuZXhwb3J0IGNvbnN0IHJvdXRlciA9IGV4cHJlc3MuUm91dGVyKCk7XG5yb3V0ZXIuZ2V0KCcvJywgZ2V0TnVtYmVycyk7Il19",
    "map": {
      "version": 3,
      "sources": [
        "sequence.js"
      ],
      "names": [
        "getNumbers",
        "req",
        "res",
        "next",
        "result",
        "list",
        "i",
        "push",
        "data",
        "x",
        "y",
        "z",
        "err",
        "message",
        "router",
        "express",
        "Router",
        "get"
      ],
      "mappings": ";;;;;;;;AAAA;;;;AAEO,eAAeA,UAAf,CAA0BC,GAA1B,EAA+BC,GAA/B,EAAoCC,IAApC,EAA0C;AAC/C,MAAI;AACF,QAAIC,MAAM,GAAG,CAAb;AACA,QAAIC,IAAI,GAAG,EAAX;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAI,CAArB,EAAwBA,CAAC,EAAzB,EAA6B;AAC3BD,MAAAA,IAAI,CAACE,IAAL,CAAUH,MAAV;AACAA,MAAAA,MAAM,GAAGA,MAAM,GAAIE,CAAC,GAAG,CAAvB;AACD;;AACDH,IAAAA,IAAI,CAAC,CAAC;AACJK,MAAAA,IAAI,EAAE;AACJC,QAAAA,CAAC,EAAEJ,IAAI,CAAC,CAAD,CADH;AAEJK,QAAAA,CAAC,EAAEL,IAAI,CAAC,CAAD,CAFH;AAGJM,QAAAA,CAAC,EAAEN,IAAI,CAAC,CAAD;AAHH;AADF,KAAD,EAMF,GANE,CAAD,CAAJ;AAOD,GAdD,CAcE,OAAOO,GAAP,EAAY;AACZT,IAAAA,IAAI,CAAC;AAAEU,MAAAA,OAAO,EAAED,GAAG,CAACC;AAAf,KAAD,EAA2B,GAA3B,CAAJ;AACD;AACF;;AAEM,MAAMC,MAAM,GAAGC,iBAAQC,MAAR,EAAf;;;AACPF,MAAM,CAACG,GAAP,CAAW,GAAX,EAAgBjB,UAAhB",
      "sourceRoot": "/Users/lacto/workspace/scg-api/src",
      "sourcesContent": [
        "import express from 'express';\n\nexport async function getNumbers(req, res, next) {\n  try {\n    let result = 3;\n    let list = [];\n    for (let i = 1; i <= 7; i++) {\n      list.push(result);\n      result = result + (i * 2);\n    }\n    next([{\n      data: {\n        x: list[0],\n        y: list[5],\n        z: list[6],\n      }\n    }, 200]);\n  } catch (err) {\n    next({ message: err.message }, 400);\n  }\n}\n\nexport const router = express.Router();\nrouter.get('/', getNumbers);"
      ]
    },
    "sourceType": "script",
    "mtime": 1567240460453
  }
}